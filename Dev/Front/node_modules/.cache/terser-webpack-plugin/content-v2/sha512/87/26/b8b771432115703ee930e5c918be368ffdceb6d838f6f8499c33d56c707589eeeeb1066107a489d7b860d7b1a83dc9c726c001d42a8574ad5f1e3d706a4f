{"map":"{\"version\":3,\"sources\":[\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/History.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/PrivateRoute.jsx\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/authentication.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/setting.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Login.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Register.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ForgotPassword.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/LoginAndRegister.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendUnit.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendArray.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendRequest.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendSuggest.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendSerch.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Friend.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/CommentForm.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/CommentDeleteButton.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Comment.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/CommentModal.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Article.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ArticleArray.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ArticleForm.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Timeline.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ChangeProfile.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Header.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Home.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Main.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/App.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/serviceWorker.js\",\"/Users/yeongmo/Documents/Programming/timeline/timeline/src/index.js\"],\"names\":[\"history\",\"createBrowserHistory\",\"PrivateRoute\",\"_ref\",\"Component\",\"component\",\"rest\",\"Object\",\"objectWithoutProperties\",\"react_default\",\"a\",\"createElement\",\"react_router\",\"assign\",\"render\",\"props\",\"localStorage\",\"getItem\",\"to\",\"pathname\",\"state\",\"from\",\"location\",\"login\",\"user\",\"token\",\"setItem\",\"JSON\",\"stringify\",\"getUser\",\"parse\",\"e\",\"logout\",\"removeItem\",\"getToken\",\"serverUrl\",\"Login\",\"handleSubmit\",\"preventDefault\",\"_this\",\"form\",\"validateFields\",\"err\",\"values\",\"fetch\",\"method\",\"headers\",\"Content-Type\",\"body\",\"then\",\"response\",\"result\",\"status\",\"json\",\"message\",\"success\",\"username\",\"push\",\"error\",\"console\",\"log\",\"getFieldDecorator\",\"this\",\"es_form\",\"onSubmit\",\"className\",\"Item\",\"rules\",\"required\",\"input\",\"prefix\",\"icon\",\"type\",\"style\",\"color\",\"placeholder\",\"react_router_dom\",\"es_button\",\"htmlType\",\"Form\",\"create\",\"Option\",\"Select\",\"Register\",\"registInformation\",\"email\",\"password\",\"question\",\"answer\",\"compareToFirstPassword\",\"rule\",\"value\",\"callback\",\"getFieldValue\",\"validateToNextPassword\",\"force\",\"hasFeedback\",\"validator\",\"Password\",\"onBlur\",\"handleConfirmBlur\",\"es_select\",\"ForgotPassword\",\"visibleEmail\",\"visibleQuestion\",\"visibleReset\",\"emailSubmit\",\"setState\",\"emailForm\",\"questionSubmit\",\"questionForm\",\"resetSubmit\",\"resetForm\",\"LoginAndRegister\",\"id\",\"margin\",\"path\",\"exact\",\"excat\",\"FriendUnit\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"relationship\",\"getOnePhoto\",\"fileName\",\"avatar\",\"size\",\"src\",\"getButton\",\"shape\",\"onClick\",\"acceptRequest\",\"denyRequest\",\"userID\",\"friend\",\"popconfirm\",\"title\",\"onConfirm\",\"confirm\",\"onCancel\",\"cancel\",\"okText\",\"cancelText\",\"ghost\",\"disabled\",\"sendRequest\",\"requesturl\",\"deleteUnit\",\"deleteArray\",\"profile\",\"goToHome\",\"FriendArray\",\"_this2\",\"friends\",\"map\",\"src_components_FriendUnit\",\"key\",\"FriendRequest\",\"requestList\",\"loadingFriendRequests\",\"lists\",\"splice\",\"indexOf\",\"getArray\",\"components_FriendArray\",\"FriendSuggest\",\"suggestList\",\"loadingFriendSuggests\",\"Search\",\"Input\",\"FriendSearch\",\"searchList\",\"searchForm\",\"onSearch\",\"enterButton\",\"Friend\",\"components_FriendRequest\",\"components_FriendSuggest\",\"FriendSerch\",\"CommentForm\",\"comment\",\"length\",\"content\",\"articleID\",\"resetFields\",\"addComment\",\"layout\",\"onPressEnter\",\"CommentDeleteButton\",\"item\",\"commentID\",\"deleteComment\",\"deleteButton\",\"commentUserID\",\"Comment\",\"getDate\",\"timestamp\",\"date\",\"Date\",\"getFullYear\",\"getMonth\",\"getHours\",\"getMinutes\",\"maxScrollTop\",\"messageList\",\"scrollHeight\",\"clientHeight\",\"scrollTop\",\"scrollToBottom\",\"ref\",\"div\",\"list\",\"itemLayout\",\"dataSource\",\"comments\",\"renderItem\",\"Meta\",\"createdtime\",\"components_CommentDeleteButton\",\"description\",\"CommentModal\",\"visible\",\"showModal\",\"loadComments\",\"handleOk\",\"handleCancel\",\"modal\",\"onOk\",\"width\",\"footer\",\"src_components_Comment\",\"src_components_CommentForm\",\"Article\",\"likeClick\",\"liked\",\"like\",\"getPhoto\",\"photoArr\",\"photo\",\"es\",\"images\",\"deleteArticle\",\"article\",\"articleUserID\",\"clickName\",\"articleUsername\",\"articleUserprofile\",\"split\",\"line\",\"i\",\"theme\",\"twoToneColor\",\"row\",\"col\",\"span\",\"components_CommentModal\",\"ArticleArray\",\"articles\",\"src_components_Article\",\"getBase64\",\"file\",\"Promise\",\"resolve\",\"reject\",\"reader\",\"FileReader\",\"readAsDataURL\",\"onload\",\"onerror\",\"TextArea\",\"ArticleForm\",\"previewVisible\",\"previewImage\",\"fileList\",\"handlePreview\",\"_callee\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"url\",\"preview\",\"originFileObj\",\"sent\",\"stop\",\"handleChange\",\"_ref2\",\"name\",\"fileNames\",\"join\",\"replace\",\"rsp\",\"addArticle\",\"_this$state\",\"uploadButton\",\"autosize\",\"minRows\",\"maxRows\",\"upload\",\"action\",\"listType\",\"onPreview\",\"onChange\",\"alt\",\"Timeline\",\"loadingArticles\",\"unshift\",\"src_components_ArticleForm\",\"components_ArticleArray\",\"ChangeProfile\",\"hide\",\"handleVisibleChange\",\"popover\",\"trigger\",\"onVisibleChange\",\"Header\",\"loadingUser\",\"logOut\",\"getProfile\",\"toHome\",\"components_ChangeProfile\",\"Home\",\"loadingRelationship\",\"others\",\"match\",\"params\",\"newProps\",\"Footer\",\"Layout\",\"Content\",\"Main\",\"src_components_Header\",\"components_Friend\",\"App\",\"PrivateRoute_PrivateRoute\",\"Boolean\",\"window\",\"hostname\",\"ReactDOM\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import { createBrowserHistory } from 'history'\\n\\nexport const history = createBrowserHistory()\",\"import React from 'react'\\r\\nimport { Route, Redirect } from 'react-router-dom'\\r\\n\\r\\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\\r\\n  <Route\\r\\n    {...rest}\\r\\n    render={props =>\\r\\n      localStorage.getItem('USER') &&\\r\\n      localStorage.getItem('token') ? (\\r\\n        <Component {...props} />\\r\\n      ) : (\\r\\n        <Redirect\\r\\n          to={{ pathname: '/login', state: { from: props.location } }}\\r\\n        />\\r\\n      )\\r\\n    }\\r\\n  />\\r\\n)\\r\\n\",\"export const login = ({ user, token }) => {\\n    localStorage.setItem('USER', JSON.stringify(user))\\n    localStorage.setItem('token', token)\\n}\\n\\nexport const getUser = () => {\\n    const user = localStorage.getItem('USER')\\n    try {\\n        return JSON.parse(user)\\n    } catch (e) {\\n        return null\\n    }\\n}\\n\\nexport const logout = () => {\\n    localStorage.removeItem('USER')\\n    localStorage.removeItem('token')\\n}\\n\\nexport const getToken = () => {\\n    try { \\n        return localStorage.getItem('token')\\n    } catch (e) {\\n        //이거 토큰없으므로 처리 해 주기\\n        return null\\n    }\\n}\",\"export const serverUrl = 'http://localhost:8080'\",\"import React, { Component } from 'react';\\nimport { Form, Icon, Input, Button, message } from 'antd';\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nimport { history } from '../History';\\nimport { login } from '../authentication';\\nimport { serverUrl } from '../setting'\\n\\nclass Login extends Component {\\n\\n    //로그인 정보 입력 하고 로그인 버튼 눌렀을 때\\n    handleSubmit = e => {\\n        e.preventDefault();\\n        this.props.form.validateFields((err, values) => {\\n            if (!err) {\\n                //요청 양식은 이미 values에 동일하게 맞춰져 있는 상태이므로\\n                //따로 가공해줄 필요 없이 바로 http 요청 을 보낸다\\n                fetch(serverUrl + '/login', {\\n                    method: 'POST',\\n                    headers: { 'Content-Type': 'application/json' },\\n                    body: JSON.stringify(values)\\n                })\\n                    .then(response => {\\n                        const result = response.status;\\n                        if (result === 200) {\\n                            //로그인이 성공하였을 경우\\n                            response.json().then(response => {\\n                                //로컬스토리지에 토큰 및 로그인 정보 저장\\n                                login(response)\\n                                message.success(response.user.username + '님 환영합니다!');\\n                                history.push(\\\"/main\\\")\\n                            })\\n                        } else if (result === 401) {\\n                            //비밀번호 불일치 혹은 이메일이 등록되지 않았음\\n                            message.error('로그인에 실패 하였습니다. 이메일 혹은 비밀번호를 다시 확인 해 주세요.');\\n                            console.log(\\\"fail!\\\")\\n                        } else {\\n                            //내부 오류\\n                        }\\n                    })\\n            }\\n        });\\n    };\\n\\n    render() {\\n        const { getFieldDecorator } = this.props.form;\\n        return (\\n            <Form onSubmit={this.handleSubmit} className=\\\"form\\\">\\n                {/* 이메일 폼*/}\\n                <Form.Item>\\n                    {getFieldDecorator('email', {\\n                        rules: [{ required: true, message: '이메일을 입력 해 주세요!' }],\\n                    })(\\n                        <Input\\n                            prefix={<Icon type=\\\"mail\\\" style={{ color: 'rgba(0,0,0,.25)' }} />}\\n                            placeholder=\\\"Email\\\"\\n                        />,\\n                    )}\\n                </Form.Item>\\n\\n                {/* 비밀번호 폼*/}\\n                <Form.Item>\\n                    {getFieldDecorator('password', {\\n                        rules: [{ required: true, message: '비밀번호를 입력 해 주세요!' }],\\n                    })(\\n                        <Input\\n                            prefix={<Icon type=\\\"lock\\\" style={{ color: 'rgba(0,0,0,.25)' }} />}\\n                            type=\\\"password\\\"\\n                            placeholder=\\\"Password\\\"\\n                        />,\\n                    )}\\n                </Form.Item>\\n\\n                {/* 비밀번호 잃어버림, 로그인, 가입 버튼*/}\\n                <Form.Item>\\n                    <Link to='/login/forgot' className=\\\"login-form-forgot\\\">Forgot password</Link>\\n                    <Button type=\\\"primary\\\" htmlType=\\\"submit\\\" className=\\\"button\\\">\\n                        Log in\\n                    </Button>\\n                    Or <Link to=\\\"/register\\\">register now!</Link>\\n                </Form.Item>\\n\\n            </Form>\\n        );\\n    }\\n}\\n\\nexport default Form.create()(Login);\\n\",\"import React, { Component } from 'react';\\nimport { Form, Icon, Input, Button, message, Select } from 'antd';\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nimport { history } from '../History';\\nimport { serverUrl } from '../setting'\\n\\nconst { Option } = Select;\\n\\nclass Register extends Component {\\n\\n    //회원가입 버튼 클릭했을 때\\n    handleSubmit = e => {\\n        e.preventDefault();\\n        this.props.form.validateFields((err, values) => {\\n            if (!err) {\\n                //회원 가입 정보\\n                const registInformation = {\\n                    email : values.email,\\n                    username : values.username,\\n                    password : values.password,\\n                    question : values.question,\\n                    answer : values.answer\\n                }\\n                //http요청\\n                fetch(serverUrl + '/regist', {\\n                    method: 'POST',\\n                    headers: { 'Content-Type': 'application/json' },\\n                    body: JSON.stringify(registInformation)\\n                }).then(response => {\\n                    if (response.status === 200) {\\n                        //가입이 성공적으로 수행 되었을 경우\\n                        message.success('회원이 되신 것을 환영합니다!');\\n                        history.push(\\\"/login\\\")\\n                    } else if (response.status === 403) {\\n                        //가입 실패했을 경우\\n                        message.error('같은 이메일을 사용하는 사용자가 이미 존재합니다!');\\n                    } else {\\n                        //요청 오류 발생\\n                    }\\n                })\\n            } else {\\n                //비밀번호 틀렸을 경우 \\n                message.error('두 비밀번호가 같은지 확인 해 주세요!');\\n            }\\n        });\\n    };\\n\\n    //비밀번호 두개 일치하는지 확인\\n    compareToFirstPassword = (rule, value, callback) => {\\n        const { form } = this.props;\\n        if (value && value !== form.getFieldValue('password')) {\\n            callback('두 비밀번호가 일치하지 않습니다!');\\n        } else {\\n            callback();\\n        }\\n    };\\n\\n    //비밀번호 검증 과정인데 따로 규칙 지정 안했으므로 항상 true\\n    validateToNextPassword = (rule, value, callback) => {\\n        const { form } = this.props;\\n        form.validateFields(['confirm'], { force: true });\\n        callback();\\n    };\\n\\n\\n    render() {\\n        const { getFieldDecorator } = this.props.form;\\n        return (\\n            <Form onSubmit={this.handleSubmit} className=\\\"form\\\">\\n\\n                {/* 이메일 */}\\n                <Form.Item>\\n                    {getFieldDecorator('email', {\\n                        rules: [{ required: true, message: '이메일 주소를 입력 해 주세요!' }],\\n                    })(\\n                        <Input\\n                            prefix={<Icon type=\\\"mail\\\" style={{ color: 'rgba(0,0,0,.25)' }} />}\\n                            placeholder=\\\"Email Address\\\"\\n                        />,\\n                    )}\\n                </Form.Item>\\n\\n                {/* 이름 */}\\n                <Form.Item>\\n                    {getFieldDecorator('username', {\\n                        rules: [{ required: true, message: '이름을 입력 해 주세요!' }],\\n                    })(\\n                        <Input\\n                            prefix={<Icon type=\\\"user\\\" style={{ color: 'rgba(0,0,0,.25)' }} />}\\n                            placeholder=\\\"Username\\\"\\n                        />,\\n                    )}\\n                </Form.Item>\\n\\n                {/* 비밀번호1 */}\\n                <Form.Item hasFeedback>\\n                    {getFieldDecorator('password', {\\n                        rules: [\\n                            {\\n                                required: true,\\n                                message: '비밀번호를 입력 해 주세요!',\\n                            },\\n                            {\\n                                validator: this.validateToNextPassword,\\n                            },\\n                        ],\\n                    })(<Input.Password\\n                        prefix={<Icon type=\\\"lock\\\" style={{ color: 'rgba(0,0,0,.25)' }} />}\\n                        placeholder=\\\"Password\\\" />)}\\n                </Form.Item>\\n\\n                {/* 비밀번호2 */}\\n                <Form.Item hasFeedback>\\n                    {getFieldDecorator('confirm', {\\n                        rules: [\\n                            {\\n                                required: true,\\n                                message: '비밀번호를 다시 한번 입력 해 주세요!',\\n                            },\\n                            {\\n                                validator: this.compareToFirstPassword,\\n                            },\\n                        ],\\n                    })(<Input.Password\\n                        prefix={<Icon type=\\\"lock\\\" style={{ color: 'rgba(0,0,0,.25)' }} />}\\n                        placeholder=\\\"Confirm password\\\"\\n                        onBlur={this.handleConfirmBlur} />)}\\n                </Form.Item>\\n\\n                {/* 비밀번호 초기화 질문 */}\\n                <Form.Item hasFeedback>\\n                    {getFieldDecorator('question', {\\n                        rules: [{ required: true, message: '비밀번호 초기화 시 사용될 질문을 골라주세요!' }],\\n                    })(\\n                        <Select \\n                        placeholder=\\\"Password reset question\\\">\\n                            <Option value=\\\"보물 1호는?\\\">보물 1호는?</Option>\\n                            <Option value=\\\"엄마의 이름은?\\\">엄마의 이름은?</Option>\\n                            <Option value=\\\"아빠의 이름은?\\\">아빠의 이름은?</Option>\\n                            <Option value=\\\"출신 초등학교의 이름은?\\\">출신 초등학교의 이름은?</Option>\\n                        </Select>,\\n                    )}\\n                </Form.Item>\\n\\n                {/* 비밀번호 초기화 대답 */}\\n                <Form.Item>\\n                    {getFieldDecorator('answer', {\\n                        rules: [{ required: true, message: '질문에 대한 정답을 입력 해 주세요!' }],\\n                    })(\\n                        <Input\\n                            prefix={<Icon type=\\\"question\\\" style={{ color: 'rgba(0,0,0,.25)' }} />}\\n                            placeholder=\\\"Answer\\\"\\n                        />,\\n                    )}\\n                </Form.Item>\\n\\n                {/* 회원가입 버튼 */}\\n                <Form.Item>\\n                    <Button type=\\\"primary\\\" htmlType=\\\"submit\\\" className=\\\"button\\\">\\n                        Register Now!\\n                    </Button>\\n                    Or <Link to=\\\"/login\\\">login now!</Link>\\n                </Form.Item>\\n            </Form>\\n        );\\n    }\\n}\\n\\nexport default Form.create()(Register);\\n\",\"import React, { Component } from 'react';\\nimport { Form, Icon, Input, Button, message } from 'antd';\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nimport { history } from '../History';\\nimport { serverUrl } from '../setting'\\n\\nclass ForgotPassword extends Component {\\n\\n    //visibleEmail : 이메일 입력 폼\\n    //visibieQuestion : 이메일이 성공적으로 확인되었을 때, 질문에 대한 답을 입력하는 폼\\n    //visibleReset : 비밀번호 리셋 질문이 성공하였을 때 리셋하기 위한 폼\\n    state = {\\n        visibleEmail: true,\\n        visibleQuestion: false,\\n        visibleReset : false,\\n        question :\\\"\\\",\\n        email:\\\"\\\"\\n    }\\n\\n    //이메일 입력 하고 버튼을 눌렀을 때 : 비밀번호 초기화 질문을 불러와서 물어본다\\n    emailSubmit = e => {\\n        e.preventDefault();\\n        //이메일 주소 입력해서 이메일을 가진 회원이 존재하는지 확인. 확인 되면, 비밀번호 질문을 불러온다\\n        this.props.form.validateFields((err, values) => {\\n            if (!err) {\\n                //http요청\\n                fetch(serverUrl + '/login/forgot/question', {\\n                    method: 'POST',\\n                    headers: { 'Content-Type': 'application/json' },\\n                    body: JSON.stringify(values)\\n                })\\n                    .then(response => {\\n                        const result = response.status;\\n                        if (result === 200) {\\n                            //이메일이 존재 할 경우 성공하였을 경우\\n                            //질문을 받아오고, 대답을 입력하는 폼을 보여준다. \\n                            response.json().then(response => {\\n                                console.log(\\\"@@@@@@\\\");\\n                                console.log(response)\\n                                this.setState({\\n                                    question : response.question,\\n                                    visibleEmail : false,\\n                                    visibleQuestion : true,\\n                                    email : values.email\\n                                })\\n                            })\\n                        } else if (result === 403) {\\n                            //이메일이 존재하지 않음\\n                            message.error(\\\"이메일이 존재하지 않습니다!\\\")\\n                        } else {\\n                            //내부 오류\\n                        }\\n                    })\\n            }\\n        });\\n    };\\n\\n    //이메일 주소 입력하는 폼\\n    emailForm = () => {\\n        const { getFieldDecorator } = this.props.form;\\n        return (\\n            <span>\\n                <Form onSubmit={this.emailSubmit} className=\\\"form\\\">\\n                    <Form.Item>\\n                        이메일 주소를 입력 해 주세요\\n                        {getFieldDecorator('email', {\\n                            rules: [{ required: true, message: '이메일 주소를 입력 해 주세요!' }],\\n                        })(\\n                            <Input\\n                                prefix={<Icon type=\\\"mail\\\" style={{ color: 'rgba(0,0,0,.25)' }} />}\\n                                placeholder=\\\"Email\\\"\\n                            />,\\n                        )}\\n                    </Form.Item>\\n                    <Form.Item>\\n                        <Button type=\\\"primary\\\" htmlType=\\\"submit\\\" className=\\\"button\\\">\\n                            Submit Email Address\\n                        </Button>\\n                        Or <Link to=\\\"/login\\\">login now!</Link>\\n                    </Form.Item>\\n                </Form >\\n            </span>\\n        );\\n    }\\n\\n    //질문에 대한 답 입력 하고 버튼을 눌렀을 때 : 맞다면 비밀번호 초기화 폼을 불러온다\\n    questionSubmit = e => {\\n        e.preventDefault();\\n        this.props.form.validateFields((err, values) => {\\n            if (!err) {\\n                //http요청\\n                fetch(serverUrl + '/login/forgot/answer', {\\n                    method: 'POST',\\n                    headers: { 'Content-Type': 'application/json' },\\n                    body: JSON.stringify({\\n                        answer : values.answer,\\n                        email : this.state.email\\n                    })\\n                })\\n                    .then(response => {\\n                        const result = response.status;\\n                        if (result === 200) {\\n                            //성공하였을 경우 : 비밀번호 초기화 폼을 보여준다\\n                            this.setState({\\n                                visibleQuestion : false,\\n                                visibleReset : true\\n                            })\\n                        } else if (result === 403) {\\n                            //답이 틀림\\n                            message.error(\\\"정답이 일치하지 않습니다!\\\")\\n                        } else {\\n                            //내부 오류\\n                        }\\n                    })\\n            }\\n        });\\n    };\\n\\n    //질문에 대한 답을 입력하는 폼\\n    questionForm = () => {\\n        const { getFieldDecorator } = this.props.form;\\n        return (\\n            <span>\\n                <Form onSubmit={this.questionSubmit} className=\\\"form\\\">\\n                    <Form.Item>\\n                        {this.state.question}\\n                        {getFieldDecorator('answer', {\\n                            rules: [{ required: true, message: '대답을 입력 해 주세요!' }],\\n                        })(\\n                            <Input\\n                                prefix={<Icon type=\\\"question\\\" style={{ color: 'rgba(0,0,0,.25)' }} />}\\n                                placeholder=\\\"Answer\\\"\\n                            />,\\n                        )}\\n                    </Form.Item>\\n\\n                    <Form.Item>\\n                        <Button type=\\\"primary\\\" htmlType=\\\"submit\\\" className=\\\"button\\\">\\n                            Submit Answer\\n                        </Button>\\n                        Or <Link to=\\\"/login\\\">login now!</Link>\\n                    </Form.Item>\\n                </Form >\\n            </span>\\n        );\\n    }\\n\\n    //비밀번호 두개 일치하는지 확인\\n    compareToFirstPassword = (rule, value, callback) => {\\n        const { form } = this.props;\\n        if (value && value !== form.getFieldValue('password')) {\\n            callback('두 비밀번호가 일치하지 않습니다!');\\n        } else {\\n            callback();\\n        }\\n    };\\n\\n    //비밀번호 검증 과정인데 따로 규칙 지정 안했으므로 항상 true\\n    validateToNextPassword = (rule, value, callback) => {\\n        const { form } = this.props;\\n        form.validateFields(['confirm'], { force: true });\\n        callback();\\n    };\\n\\n    //비밀번호 초기화\\n    resetSubmit = e => {\\n        e.preventDefault();\\n        this.props.form.validateFields((err, values) => {\\n            if (!err) {\\n                console.log('Received values of form: ', values);\\n                fetch(serverUrl + '/login/forgot/reset', {\\n                    method: 'PUT',\\n                    headers: { 'Content-Type': 'application/json' },\\n                    body: JSON.stringify({\\n                        email : this.state.email,\\n                        password : values.password\\n                    })\\n                })\\n                    .then(response => {\\n                        const result = response.status;\\n                        if (result === 200) {\\n                            //리셋이 성공하였을 경우\\n                            message.success(\\\"비밀번호 변경에 성공하였습니다. 로그인 페이지로 돌아갑니다!\\\")\\n                            history.push('/login')\\n                        } else {\\n                            //내부 오류\\n                            console.log(result)\\n                        }\\n                    })\\n            }\\n        });\\n    };\\n\\n    //비밀번호 초기화 폼\\n    resetForm = () => {\\n        const { getFieldDecorator } = this.props.form;\\n        return (\\n            <span>\\n                <Form onSubmit={this.resetSubmit} className=\\\"form\\\">\\n                새로운 비밀번호를 입력해 주세요\\n                <Form.Item hasFeedback>\\n                    {getFieldDecorator('password', {\\n                        rules: [\\n                            {\\n                                required: true,\\n                                message: '비밀번호를 입력 해 주세요!',\\n                            },\\n                            {\\n                                validator: this.validateToNextPassword,\\n                            },\\n                        ],\\n                    })(<Input.Password\\n                        prefix={<Icon type=\\\"lock\\\" style={{ color: 'rgba(0,0,0,.25)' }} />}\\n                        placeholder=\\\"Password\\\" />)}\\n                </Form.Item>\\n                <Form.Item hasFeedback>\\n                    {getFieldDecorator('confirm', {\\n                        rules: [\\n                            {\\n                                required: true,\\n                                message: '비밀번호를 다시 한번 입력 해 주세요!',\\n                            },\\n                            {\\n                                validator: this.compareToFirstPassword,\\n                            },\\n                        ],\\n                    })(<Input.Password\\n                        prefix={<Icon type=\\\"lock\\\" style={{ color: 'rgba(0,0,0,.25)' }} />}\\n                        placeholder=\\\"Confirm password\\\"\\n                        onBlur={this.handleConfirmBlur} />)}\\n                </Form.Item>\\n                    <Form.Item>\\n                        <Button type=\\\"primary\\\" htmlType=\\\"submit\\\" className=\\\"button\\\">\\n                            Reset Password\\n                        </Button>\\n                        Or <Link to=\\\"/login\\\">login now!</Link>\\n                    </Form.Item>\\n                </Form >\\n            </span>\\n        );\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                {this.state.visibleEmail && this.emailForm()}\\n                {this.state.visibleQuestion && this.questionForm()}\\n                {this.state.visibleReset && this.resetForm()}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default Form.create()(ForgotPassword);\\n\",\"import React, { Component } from 'react';\\nimport { Route, Switch } from \\\"react-router-dom\\\";\\n\\nimport Login from './Login';\\nimport Register from './Register';\\nimport './LoginAndRegister.css';\\nimport ForgotPassword from './ForgotPassword';\\n\\nclass LoginAndRegister extends Component {\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className='login' >\\n                    <h1 id='loginHeadline'>TIMELINE</h1>\\n                    <div style={{ margin: '10px 0' }}>\\n                        <Switch >\\n                            <Route path='/login' exact component={Login} />\\n                            <Route path='/register' excat component={Register} />\\n                            <Route path='/login/forgot' exact component={ForgotPassword} />\\n                        </Switch>\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default LoginAndRegister;\",\"import React, { Component } from 'react';\\nimport { Avatar, Button, message, Popconfirm } from 'antd';\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nimport { getUser, getToken } from '../authentication';\\nimport { serverUrl } from '../setting'\\n\\nimport './FriendUnit.css';\\n\\nclass FriendUnit extends Component {\\n\\n    //어디서 왔는지 : this.props.from\\n    state = {\\n        relationship: 4\\n    }\\n\\n    constructor(props) {\\n        super(props)\\n\\n        //현재 받은 친구 원소와 나와의 관계가 무엇인지 확인 \\n        //친구면 1, 친구요청 이미 보낸상태면 2, 친구요청 받은 상태면 3, 아무것도 아니면 4\\n        const requesturl = serverUrl + '/friend/request/check/' + getUser().userID + '/' + this.props.friend.id\\n        fetch(requesturl, {\\n            method: 'GET',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    return response.json();\\n                } else {\\n                    console.log('관계 불러오기 에러!')\\n                    return [];\\n                }\\n            }).then(response => this.setState({ relationship: response }))\\n    }\\n\\n    //프로필 사진을 받아오기\\n    getOnePhoto = (fileName, username) => {\\n        if (fileName === \\\"\\\" || fileName == null)\\n            return <Avatar size='large'>{username}</Avatar>\\n        else\\n            return <Avatar size='large' src={serverUrl + '/photo/download?filename=' + fileName} />\\n    }\\n\\n    //친구 관계에 따라 노출되는 버튼이 다름\\n    getButton = () => {\\n        const from = this.props.from;\\n\\n        if (from === \\\"request\\\") {\\n            //친구요청 리스트업일 경우\\n            return (\\n                <span>\\n                    <Button type=\\\"primary\\\" shape=\\\"circle\\\" size=\\\"small\\\" onClick={this.acceptRequest}>O</Button>\\n                    <Button type=\\\"danger\\\" shape=\\\"circle\\\" size=\\\"small\\\" onClick={this.denyRequest}>X</Button>\\n                </span>\\n            )\\n        } else {\\n            //자기자신일 경우 아무 버튼 노출 안함\\n            if (getUser().userID === this.props.friend.id) {\\n                return null;\\n            } else if (this.state.relationship === 1) {\\n                //이미 친구인 상태\\n                return (\\n                    <Popconfirm\\n                        title=\\\"정말 친구 관계를 끊으시겠습니까?\\\"\\n                        onConfirm={this.confirm}\\n                        onCancel={this.cancel}\\n                        okText=\\\"Yes\\\"\\n                        cancelText=\\\"No\\\"\\n                    >\\n                        <Button type=\\\"danger\\\" size=\\\"small\\\" ghost>친구끊기</Button>\\n                    </Popconfirm>\\n                )\\n            } else if (this.state.relationship === 2) {\\n                //이미 친구요청 보낸  상태\\n                return (\\n                    <Button size=\\\"small\\\" disabled>이미신청했음</Button>\\n                )\\n            } else if (this.state.relationship === 3) {\\n                //이미 친구요청 받은 상태\\n                return (\\n                    <Button size=\\\"small\\\" disabled>친구요청받음</Button>\\n                )\\n            } else {\\n                //둘이 아무 사이도 아니므로 친구 신청 버튼\\n                return (\\n                    <Button type=\\\"primary\\\" size=\\\"small\\\" onClick={this.sendRequest} ghost>친구신청</Button>\\n                )\\n            }\\n        }\\n    }\\n\\n    //친구 관계 끊을 때\\n    confirm = (e) => {\\n        console.log(e);\\n        const requesturl = serverUrl + '/friends/' + this.props.friend.id + '/' + getUser().userID;\\n        fetch(requesturl, {\\n            method: 'DELETE',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    message.success('더이상 친구관계가 아닙니다');\\n                    this.setState({ relationship: 4 });\\n                } else {\\n                    console.log('친구 삭제 실패')\\n                }\\n            })\\n\\n    }\\n\\n    cancel = (e) => {\\n        console.log(e);\\n    }\\n\\n    //친구 요청\\n    sendRequest = () => {\\n        fetch(serverUrl + \\\"/friend/request/\\\" + getUser().userID + \\\"/\\\" + this.props.friend.id, {\\n            method: 'POST',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    message.success(\\\"친구 요청을 보냈습니다!\\\")\\n                    this.setState({ relationship: 2 })\\n                } else {\\n                    //오류 처리\\n                    console.log(\\\"error!\\\")\\n                }\\n            })\\n\\n    }\\n\\n    //친구 신청 받을 때\\n    acceptRequest = () => {\\n        fetch(serverUrl + \\\"/friend/request/response/\\\" + 1 + \\\"/\\\" + this.props.friend.id + \\\"/\\\" + getUser().userID, {\\n            method: 'GET',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    message.success(\\\"지금부터 두분은 친구사입니다!\\\")\\n                    this.deleteUnit();\\n                } else {\\n                    //오류 처리\\n                    console.log(\\\"error!\\\")\\n                }\\n            })\\n    }\\n\\n    //친구 요청 거부\\n    denyRequest = () => {\\n        fetch(serverUrl + \\\"/friend/request/response/\\\" + 2 + \\\"/\\\" + this.props.friend.id + \\\"/\\\" + getUser().userID, {\\n            method: 'GET',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    message.success(\\\"친구 신청을 거절 하였습니다.\\\")\\n                    this.deleteUnit();\\n                } else {\\n                    //오류 처리\\n                    console.log(\\\"error!\\\")\\n                }\\n            })\\n    }\\n\\n    //친구 신청 받거나 거절 후에는 리스트에서 삭제\\n    deleteUnit = () => {\\n        this.props.deleteArray(this.props.friend)\\n    }\\n\\n    render() {\\n        const profile = this.props.friend.profile;\\n        //const email = this.props.friend.email;\\n        const userID = this.props.friend.id;\\n        const username = this.props.friend.username;\\n        const goToHome = '/home/' + userID;\\n\\n        return (\\n            <div className=\\\"marginTopBottom\\\">\\n                <span>\\n                    {this.getOnePhoto(profile, username)}\\n                    <span className='marginLeftRight'><Link to={goToHome}>{username}</Link></span>\\n                </span>\\n                <span className='rightAlign'>\\n                    {this.getButton()}\\n                </span>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default FriendUnit;\",\"import React, { Component } from 'react';\\n\\nimport FriendUnit from './FriendUnit';\\n\\nclass FriendArray extends Component {\\n\\n    shouldComponentUpdate(){\\n        return true;\\n    }\\n\\n    //친구 리스트 중 하나의 원소를 삭제하고 싶을 때, 부모 컴포넌트의 삭제하는 함수를 호출\\n    deleteArray = (friend) => {\\n        this.props.deleteArray(friend);\\n    }\\n\\n    //props로 받은 리스트를 각각의 원소로 나눠서 분배해줌\\n    render() {\\n        return (\\n            <div>\\n                {this.props.friends.map(\\n                    friend => (<FriendUnit key={friend.id} friend={friend} deleteArray={this.deleteArray} from={this.props.from} />)\\n                )}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default FriendArray\",\"import React, { Component } from 'react';\\n\\nimport { getUser, getToken } from '../authentication';\\nimport FriendArray from './FriendArray';\\nimport { serverUrl } from '../setting'\\n\\nimport './FriendUnit.css';\\n\\nclass FriendRequest extends Component {\\n\\n    state = {\\n        requestList: []\\n    };\\n\\n\\n    constructor(props) {\\n        super(props);\\n        this.loadingFriendRequests();\\n    }\\n\\n    //친구 요청들 불러오기\\n    loadingFriendRequests = () => {\\n        const requesturl = serverUrl + '/friend/request/' + getUser().userID\\n        //http요청\\n        fetch(requesturl, {\\n            method: 'GET',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    return response.json();\\n                } else {\\n                    console.log('친구신청 불러오기 에러!')\\n                    return [];\\n                }\\n            }).then(response => {\\n                this.setState({ requestList: response })\\n            })\\n    }\\n\\n    //삭제한 글 state의 리스트에서 삭제해 주어 다시 렌더링\\n    deleteArray = (friend) => {\\n        let lists = this.state.requestList\\n        lists.splice(lists.indexOf(friend),1);\\n        this.setState({requestList : lists})\\n    }\\n\\n    //친구 리스트가 있으면, 리스트를 분배해주는 array 컴포넌트를 리턴\\n    getArray = () => {\\n        if (this.state.requestList=== null || this.state.requestList===[]){\\n            return (<div className='marginTopBottom grayColor'>친구 요청이 없습니다.</div>);\\n        } else {\\n            return (<FriendArray friends={this.state.requestList} from=\\\"request\\\" deleteArray={this.deleteArray}/>);\\n        }\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                친구 요청\\n                {this.getArray()}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default FriendRequest;\",\"import React, { Component } from 'react';\\n\\nimport { getUser, getToken } from '../authentication';\\nimport FriendArray from './FriendArray';\\nimport { serverUrl } from '../setting'\\n\\nimport './FriendUnit.css';\\n\\nclass FriendSuggest extends Component {\\n\\n    state = {\\n        suggestList: []\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.loadingFriendSuggests();\\n    }\\n\\n    //친구추천 리스트를 불러옴\\n    loadingFriendSuggests = () => {\\n        const requesturl = serverUrl + '/friend/suggest/' + getUser().userID\\n        fetch(requesturl, {\\n            method: 'GET',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    return response.json();\\n                } else {\\n                    console.log('친구추천 불러오기 에러!')\\n                    return [];\\n                }\\n            }).then(response => {\\n                this.setState({ suggestList: response })\\n            })\\n    }\\n\\n    //삭제한 글 state의 리스트에서 삭제해 주어 다시 렌더링\\n    deleteArray = (friend) => {\\n        let lists = this.state.suggestList\\n        lists.splice(lists.indexOf(friend),1);\\n        this.setState({suggestList : lists})\\n    }\\n\\n    //친구 리스트가 있으면, 리스트를 분배해주는 array 컴포넌트를 리턴\\n    getArray = () => {\\n        if (this.state.suggestList=== null || this.state.suggestList===[]){\\n            return (<div className='marginTopBottom grayColor'>친구 추천이 없습니다.</div>);\\n        } else {\\n            return (<FriendArray friends={this.state.suggestList} from=\\\"suggest\\\" deleteArray={this.deleteArray}/>);\\n        }\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                친구 추천\\n                {this.getArray()}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default FriendSuggest;\",\"import React, { Component } from 'react';\\nimport { Input } from 'antd';\\n\\nimport { getToken } from '../authentication';\\nimport FriendArray from './FriendArray';\\nimport { serverUrl } from '../setting'\\n\\nimport './FriendUnit.css';\\n\\nconst { Search } = Input;\\n\\nclass FriendSearch extends Component {\\n\\n    state = {\\n        searchList: []\\n    };\\n\\n    //삭제한 글 state의 리스트에서 삭제해 주어 다시 렌더링\\n    deleteArray = (friend) => {\\n        let lists = this.state.searchList\\n        lists.splice(lists.indexOf(friend),1);\\n        this.setState({searchList : lists})\\n    }\\n\\n    //검색 폼\\n    searchForm = () => {\\n        return (\\n            <Search placeholder=\\\"찾고 싶은 친구 이름\\\" onSearch={value => {\\n                //검색 버튼을 눌렀을 경우 결과를 찾아옴\\n                if (value!==\\\"\\\"){\\n                    const requesturl = serverUrl + '/friend/search/' + value\\n                    fetch(requesturl, {\\n                        method: 'GET',\\n                        headers: {\\n                            'token': getToken()\\n                        }\\n                    })\\n                        .then(response => {\\n                            if (response.status === 200) {\\n                                return response.json();\\n                            } else {\\n                                console.log('친구검색 에러!')\\n                                return [];\\n                            }\\n                        }).then(response => {\\n                            this.setState({ searchList: response })\\n                        })    \\n                }\\n            }\\n            } enterButton />\\n        )\\n    }\\n\\n    //친구 리스트가 있으면, 리스트를 분배해주는 array 컴포넌트를 리턴\\n    getArray = () => {\\n        if (this.state.searchList=== null || this.state.searchList===[]){\\n            return (<div className='marginTopBottom grayColor'>검색 결과가 없습니다</div>);\\n        } else {\\n            return (<FriendArray friends={this.state.searchList} from=\\\"search\\\" deleteArray={this.deleteArray}/>);\\n        }\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                친구 검색\\n                <div className='marginTopBottom'>\\n                    {this.searchForm()}\\n                </div>\\n                {this.getArray()}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default FriendSearch;\",\"import React, {Component} from 'react';\\n\\nimport FriendRequest from './FriendRequest';\\nimport FriendSuggest from './FriendSuggest';\\nimport FriendSearch from './FriendSerch';\\n\\nimport './Box.css';\\n\\n//친구요청, 친구추천, 친구검색\\nclass Friend extends Component {\\n\\n    render() {\\n        return (\\n            <div>\\n                <div id='box' >\\n                    <FriendRequest />\\n                </div>\\n                <div id='box' >\\n                    <FriendSuggest />\\n                </div>\\n                <div id='box' >\\n                    <FriendSearch />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default Friend;\",\"import React, { Component } from 'react';\\nimport { Form, Button, Icon, Input, message } from 'antd'\\n\\nimport { getToken, getUser } from '../authentication';\\nimport { serverUrl } from '../setting'\\n\\nimport './CommentForm.css';\\n\\nclass CommentForm extends Component {\\n\\n    //댓글 입력 버튼 눌렀을 때\\n    handleSubmit = e => {\\n        e.preventDefault();\\n        this.props.form.validateFields((err, values) => {\\n            if (!err) {\\n                if (values.comment.length > 100) {\\n                    message.error(\\\"댓글 길이가 너무 깁니다!\\\")\\n                } else {\\n                    //원하는 폼으로 가공\\n                    const content = {\\n                        articleID: this.props.articleID,\\n                        userID: getUser().userID,\\n                        content: values.comment\\n                    }\\n                    //http요청 보내기\\n                    fetch(serverUrl + '/comment', {\\n                        method: 'POST',\\n                        headers: {\\n                            'Content-Type': 'application/json',\\n                            'token': getToken()\\n                        },\\n                        body: JSON.stringify(content)\\n                    }).then(response => {\\n                        if (response.status === 200) {\\n                            //글올리기 성공\\n                            message.success('댓글이 업로드 되었습니다.');\\n                            //댓글 창 리셋\\n                            this.props.form.resetFields()\\n                            return response.json()\\n                        } else {\\n                            //오류 처리\\n                            return null;\\n                        }\\n                    })\\n                        .then(response => {\\n                            //다시 렌더링 하기 위해\\n                            this.props.addComment(response);\\n                        })\\n                }\\n\\n            }\\n        });\\n    };\\n\\n    render() {\\n        const { getFieldDecorator } = this.props.form;\\n\\n        return (\\n            <div>\\n                <Form layout=\\\"inline\\\" onSubmit={this.handleSubmit}>\\n                    <Form.Item >\\n                        {getFieldDecorator('comment', {\\n                            rules: [{ required: true, message: '댓글을 입력 해 주세요!' }],\\n                        })(\\n                            <Input\\n                                prefix={<Icon type=\\\"message\\\" style={{ color: 'rgba(0,0,0,.25)' }} />}\\n                                placeholder=\\\"Comment\\\"\\n                                onPressEnter={this.handleSubmit}\\n                            />,\\n                        )}\\n                    </Form.Item>\\n                    <Form.Item>\\n                        <Button type=\\\"default\\\" htmlType=\\\"submit\\\">\\n                            Submit\\n                        </Button>\\n                    </Form.Item>\\n\\n                </Form>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default Form.create()(CommentForm);\",\"import React, { Component } from 'react';\\nimport { message, Popconfirm, Button} from 'antd'\\n\\nimport { getUser, getToken } from '../authentication';\\nimport { serverUrl } from '../setting'\\n\\nclass CommentDeleteButton extends Component {\\n\\n    //댓글 삭제\\n    confirm = (item) => {    \\n        //http요청\\n        fetch(serverUrl + \\\"/comment/\\\" + this.props.commentID, {\\n            method: 'DELETE',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    //댓글 삭제 처리\\n                    this.props.deleteComment(this.props.comment);\\n                    message.success('댓글 삭제가 완료 되었습니다!');\\n                } else {\\n                    //오류 처리\\n                }\\n            })\\n    }\\n\\n    //취소\\n    cancel = (e) => {\\n        console.log(e);\\n    }\\n\\n    //댓글 삭제 버튼\\n    deleteButton = () => {\\n\\n        //댓글쓴이와 현재 유저가 같은사람이면 삭제 버튼을 노출\\n        if (getUser().userID === this.props.commentUserID) {\\n            return (\\n                <Popconfirm\\n                    title=\\\"이 댓글을 삭제하시겠습니까?\\\"\\n                    onConfirm={this.confirm}\\n                    onCancel={this.cancel}\\n                    okText=\\\"Yes\\\"\\n                    cancelText=\\\"No\\\"\\n                >\\n                    <Button type='default' shape='circle' size='small'>X</Button>\\n                </Popconfirm>\\n            );\\n        } else {\\n            return null;\\n        }\\n    }\\n\\n    render() {\\n        return (\\n            <span>\\n                {this.deleteButton()}\\n            </span>\\n        );\\n    }\\n}\\n\\nexport default CommentDeleteButton;\",\"import React, { Component } from 'react';\\nimport { List, Avatar} from 'antd'\\n\\nimport CommentDeleteButton from './CommentDeleteButton';\\nimport { serverUrl } from '../setting'\\n\\nimport './Comment.css'\\n\\nclass Comment extends Component {\\n\\n    //스크롤을 댓글 제일 아래로 유지하기 위해 (최신 댓글이 제일 아래 위치하므로)\\n    scrollToBottom() {\\n        const scrollHeight = this.messageList.scrollHeight;\\n        const height = this.messageList.clientHeight;\\n        const maxScrollTop = scrollHeight - height;\\n        this.messageList.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\\n    }\\n\\n    //스크롤 제일 아래로\\n    componentDidUpdate() {\\n        this.scrollToBottom();\\n    }\\n    componentDidMount() {\\n        this.scrollToBottom();\\n    }\\n\\n    //날짜를 형식에 맞춰서 문자열로 리턴\\n    getDate = (timestamp) => {\\n        var date = new Date(timestamp);\\n        return date.getFullYear() + '/' + (date.getMonth()+1) + '/' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes();\\n    }\\n\\n    //프로필 사진을 얻기 위해\\n    getOnePhoto = (fileName, username) => {\\n        if (fileName === \\\"\\\" || fileName == null)\\n            return <Avatar size='large'>{username}</Avatar>\\n        else\\n            return <Avatar size='large' src={serverUrl + '/photo/download?filename=' + fileName} />\\n    }\\n\\n    render() {\\n        return (\\n            <div className='list'\\n                ref={(div) => {\\n                    this.messageList = div;\\n                }}\\n            >\\n\\n                {/* 리스트의 개별 원소들을 출력 */}\\n                <List\\n                    itemLayout=\\\"horizontal\\\"\\n                    dataSource={this.props.comments}\\n                    renderItem={item => (\\n                        <List.Item>\\n                            <List.Item.Meta\\n                                avatar={this.getOnePhoto(item.profile, item.username)}\\n                                title={\\n                                    <span>\\n                                        <b>{item.username}</b>\\n                                        <span id=\\\"date\\\">\\n                                            {this.getDate(item.createdtime)}\\n                                        </span>\\n                                        <span className='rightAlign'>\\n                                            <CommentDeleteButton \\n                                                deleteComment={this.props.deleteComment}\\n                                                commentUserID={item.userID}\\n                                                commentID={item.commentID}\\n                                                comment={item}\\n                                                />\\n                                        </span>\\n                                    </span>\\n                                }\\n                                description={item.content}\\n                            />\\n                        </List.Item>\\n                    )}\\n                />\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default Comment;\",\"import React, { Component } from 'react';\\nimport { Modal, Button } from 'antd';\\n\\nimport { getToken } from '../authentication';\\nimport CommentForm from './CommentForm';\\nimport Comment from './Comment';\\nimport { serverUrl } from '../setting'\\n\\nclass CommentModal extends Component {\\n  state = {\\n    visible: false,\\n    articleID: this.props.articleID,\\n    comments: []\\n  };\\n\\n  //버튼 눌렀을 때, visible state를 바꿔 주어 렌더링 한다음, 댓글을 불러와서 state에 저장\\n  showModal = () => {\\n    this.setState({\\n      visible: true,\\n    });\\n    this.loadComments()\\n  };\\n\\n  //댓글 창 없애주기\\n  handleOk = e => {\\n    this.setState({\\n      visible: false,\\n    });\\n  };\\n  handleCancel = e => {\\n    this.setState({\\n      visible: false,\\n    });\\n  };\\n\\n  //댓글 불러오기\\n  loadComments = () => {\\n    //http요청\\n    const requesturl = serverUrl + '/comment/' + this.props.articleID;\\n    fetch(requesturl, {\\n      method: 'GET',\\n      headers: {\\n        'token': getToken()\\n      }\\n    })\\n      .then(response => {\\n        if (response.status === 200) {\\n          //성공 시\\n          return response.json()\\n        } else {\\n          //실패\\n          return null;\\n        }\\n      }).then(response => {\\n        this.setState({ comments: response })\\n      })\\n  }\\n\\n  //새로 입력한 댓글을 리스트의 맨뒤에 넣어주어 렌더링\\n  addComment = (comment) => {\\n    let comments = this.state.comments\\n    comments.push(comment)\\n    this.setState({ comments: comments })\\n  }\\n\\n  //삭제한 소식을 state의 리스트에서 삭제해 주어 다시 렌더링\\n  deleteComment = (comment) => {\\n    let comments = this.state.comments\\n    comments.splice(comments.indexOf(comment), 1);\\n    this.setState({ comments: comments })\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button type=\\\"default\\\" icon=\\\"message\\\" onClick={this.showModal}>댓글</Button>\\n        <Modal\\n          title=\\\"댓글\\\"\\n          visible={this.state.visible}\\n          onOk={this.handleOk}\\n          onCancel={this.handleCancel}\\n          width=\\\"750px\\\"\\n          footer={null}\\n        >\\n          <Comment articleID={this.state.articleID} comments={this.state.comments} deleteComment={this.deleteComment} />\\n          <CommentForm loadComments={this.loadComments} articleID={this.state.articleID} addComment={this.addComment} />\\n        </Modal>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default CommentModal;\",\"import React, { Component } from 'react';\\nimport { Link } from \\\"react-router-dom\\\";\\nimport { Avatar, Icon, Row, Col, Button, Popconfirm, message } from 'antd';\\nimport FbImageLibrary from 'react-fb-image-grid'\\n\\nimport CommentModal from './CommentModal';\\nimport { history } from '../History';\\nimport { getToken, getUser } from '../authentication';\\nimport { serverUrl } from '../setting'\\n\\nimport './Article.css';\\n\\nclass Article extends Component {\\n\\n    state = {\\n    };\\n\\n    constructor(props) {\\n        super(props)\\n\\n        //liked를 \\\"true\\\" or \\\"false\\\"로 받음\\n        this.state = {\\n            articleUserID: this.props.article.userID,\\n            articleUsername: this.props.article.username,\\n            articleUserprofile: this.props.article.profile,\\n            articleID: this.props.article.articleID,\\n            content: this.props.article.content.split('<br>').map((line, i) => {\\n                return (<span key={i}>{line}<br /></span>);\\n            }), //줄바꾸기 변환 : 글 입력할 때 db에는 \\\\n을 <br>로 바꾸어 저장 한 다음에 이걸 다시 줄바꿈 해서 출력해줘야 하므로\\n            like: this.props.article.like,\\n            liked: this.props.article.liked, // \\\"true\\\" 혹은 \\\"false\\\"의 문자열로 받아옴\\n            photo: this.props.article.photo,\\n            createdtime: this.props.article.createdtime\\n        };\\n    }\\n\\n    //좋아요 클릭했을 때 : 취소 혹은 좋아요\\n    likeClick = () => {\\n        fetch( serverUrl + \\\"/liked/\\\" + this.state.articleID + \\\"/\\\" + getUser().userID, {\\n            method: 'PUT',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n        if (this.state.liked === \\\"true\\\") {\\n            //좋아요 취소\\n            this.setState({\\n                like: this.state.like - 1,\\n                liked: \\\"false\\\"\\n            })\\n        } else {\\n            //좋아요\\n            this.setState({\\n                like: this.state.like + 1,\\n                liked: \\\"true\\\"\\n            })\\n        }\\n    }\\n\\n    //소식에 등록되어 있는 여러개의 사진 받아와서 FbImageLibrary로 출력\\n    getPhoto = (photoArr) => {\\n        if (photoArr === null || photoArr === [] || photoArr == \\\"\\\") {\\n            return null;\\n        }\\n        let result = []\\n        photoArr.map(photo => result.push(serverUrl + '/photo/download?filename=' + photo))\\n        return (<FbImageLibrary images={result} />);\\n    }\\n\\n    //프로필 사진을 받아오기\\n    getOnePhoto = (fileName, username) => {\\n        if (fileName === \\\"\\\" || fileName === null)\\n            return <Avatar size='large'>{username}</Avatar>\\n        else\\n            return <Avatar size='large' src={serverUrl + '/photo/download?filename=' + fileName} />\\n    }\\n\\n    //날짜를 형식에 맞춰서 문자열로 리턴\\n    getDate = (timestamp) => {\\n        var date = new Date(timestamp);\\n        return date.getFullYear() + '/' + (date.getMonth()+1) + '/' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes();\\n    }\\n\\n    //글 삭제\\n    confirm = (e) => {\\n        fetch(serverUrl + \\\"/article/\\\" + this.state.articleID + \\\"/\\\" + getUser().userID, {\\n            method: 'DELETE',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    message.success(\\\"소식이 삭제 되었습니다.\\\")\\n                    this.props.deleteArticle(this.props.article)\\n                } else {\\n                    //오류 처리\\n                }\\n            })\\n    }\\n    \\n    //글 삭제 안함\\n    cancel = (e) => {\\n        console.log(e);\\n    }\\n\\n    //소식 삭제 버튼\\n    deleteButton = (userID, articleUserID) => {\\n        if (userID === articleUserID) {\\n            return (\\n                <Popconfirm\\n                    title=\\\"이 소식을 삭제하시겠습니까?\\\"\\n                    onConfirm={this.confirm}\\n                    onCancel={this.cancel}\\n                    okText=\\\"Yes\\\"\\n                    cancelText=\\\"No\\\"\\n                >\\n                    <Button type='default' shape='circle' size='small'>X</Button>\\n                </Popconfirm>\\n            )\\n        } else {\\n            return null\\n        }\\n    }\\n\\n    //이름클릭했을 때 : 소식 모아보기로 이동\\n    clickName = () => {\\n        history.push('/home/' + this.state.articleUserID)\\n    }\\n\\n    render() {\\n\\n        return (\\n            <div id='box'>\\n                {/* 타이틀 */}\\n                <div>\\n                    {/* 사진 */}\\n                    <div className='inline' >\\n                        {this.getOnePhoto(this.state.articleUserprofile, this.state.articleUsername)}\\n                    </div>\\n                    {/* 제목 */}\\n                    <div className='inline title marginLeftRight'>\\n                        <Link to='#' onClick={this.clickName} ><b>{this.state.articleUsername}</b></Link>\\n                    </div>\\n                    {/* 삭제표시 */}\\n                    <div className='inline rightAlign'>\\n                        {this.deleteButton(getUser().userID, this.state.articleUserID)}\\n                    </div>\\n                </div>\\n\\n                {/* 날짜 */}\\n                <div className='marginTopBottom date'>\\n                    {this.getDate(this.state.createdtime)}\\n                </div>\\n\\n                {/* 본문 */}\\n                <div className='marginTopBottom'>\\n                    <b>{this.state.content}</b>\\n                </div>\\n\\n                {/* 사진 */}\\n                <div>\\n                    {this.getPhoto(this.state.photo)}\\n                </div>\\n\\n                {/* 좋아요 카운트*/}\\n                <div className='marginTopBottom'>\\n                    <Icon type=\\\"like\\\" theme=\\\"twoTone\\\" twoToneColor=\\\"#eb2f96\\\" width='200px' />\\n                    <span className='marginLeftRight'>{this.state.like}</span>\\n                </div>\\n\\n                {/* 좋아요 버튼 및 댓글 버튼 */}\\n                <div className='marginTopBottom'>\\n                    <Row>\\n                        <Col span={12}>\\n                            <center><Button type={this.state.liked === \\\"true\\\" ? \\\"primary\\\" : \\\"default\\\"} icon=\\\"like\\\" onClick={this.likeClick}>좋아요</Button></center>\\n                        </Col>\\n                        <Col span={12}>\\n                            <center><CommentModal articleID={this.state.articleID} /></center>\\n                        </Col>\\n                    </Row>\\n                </div>\\n\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default Article;\",\"import React, { Component } from 'react';\\nimport Article from './Article';\\n\\nclass ArticleArray extends Component {\\n\\n    shouldComponentUpdate(){\\n        return true;\\n    }\\n\\n    //글 삭제 되었을 때 배열에서 삭제 해 줌\\n    deleteArticle = (article) => {\\n        this.props.deleteArticle(article);\\n    }\\n\\n    render() {\\n\\n        //배열을 받아 각자 뿌려줌\\n        return (\\n            <div>\\n                {this.props.articles.map(\\n                    article => (<Article key={article.articleID} article={article} deleteArticle={this.deleteArticle} />)\\n                )}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default ArticleArray\",\"import React, { Component } from 'react';\\nimport { Form, Icon, Input, Button, Upload, Modal, message } from 'antd';\\n\\nimport { getUser, getToken } from '../authentication';\\nimport { serverUrl } from '../setting'\\n\\nimport './ArticleForm.css';\\n\\nfunction getBase64(file) {\\n    return new Promise((resolve, reject) => {\\n        const reader = new FileReader();\\n        reader.readAsDataURL(file);\\n        reader.onload = () => resolve(reader.result);\\n        reader.onerror = error => reject(error);\\n    });\\n}\\n\\nconst { TextArea } = Input;\\n\\nclass ArticleForm extends Component {\\n\\n    state = {\\n        previewVisible: false,\\n        previewImage: '',\\n        fileList: [\\n        ],\\n    };\\n\\n    //유저아이디\\n    userID = getUser().userID\\n\\n    //사진 업로드용\\n    handleCancel = () => this.setState({ previewVisible: false });\\n\\n    handlePreview = async file => {\\n        if (!file.url && !file.preview) {\\n            file.preview = await getBase64(file.originFileObj);\\n        }\\n\\n        this.setState({\\n            previewImage: file.url || file.preview,\\n            previewVisible: true,\\n        });\\n    };\\n\\n    handleChange = ({ fileList }) => this.setState({ fileList });\\n\\n\\n    //글쓰기 버튼 눌렀을 떄\\n    handleSubmit = e => {\\n        e.preventDefault();\\n        this.props.form.validateFields((err, values) => {\\n            if (!err) {\\n                if (values.content.length > 250) {\\n                    message.error(\\\"말이 너무 깁니다!\\\")\\n                } else {\\n                    //파일명을 /로 묶어주기\\n                    //db에는 파일명이 저장됨. 파일명의 리스트를 만들어서 그들 사이를 /로 조인해줌. 나중에 split해서 쓸 것임\\n                    let fileList = []\\n                    this.state.fileList.map(file => fileList.push(file.response.name))\\n                    let fileNames = fileList.join('/')\\n\\n                    //폼 묶어주기\\n                    let article = {\\n                        'userID': this.userID,\\n                        'content': values.content.replace(/\\\\n/gi, '<br>'), //줄바꿈 표시를 <br/>로 바꿔줌\\n                        'photo': fileNames\\n                    }\\n\\n                    //요청\\n                    fetch(serverUrl + '/article', {\\n                        method: 'POST',\\n                        headers: {\\n                            'Content-Type': 'application/json',\\n                            'token': getToken()\\n                        },\\n                        body: JSON.stringify(article)\\n                    }).then(response => {\\n                        if (response.status === 200) {\\n                            //글올리기 성공\\n                            response.json().then(rsp => {\\n                                message.success(\\\"소식이 성공적으로 공유 되었습니다.\\\")\\n                                this.props.form.resetFields()\\n                                this.props.addArticle(rsp)\\n                                this.handleCancel();\\n                            })\\n                        } else {\\n                            console.log(\\\"글올리기 실패\\\")\\n                        }\\n                    });\\n                }\\n            }\\n        });\\n    };\\n\\n    render() {\\n\\n        //사진 업로드용\\n        const { previewVisible, previewImage, fileList } = this.state;\\n        const uploadButton = (\\n            <div>\\n                <Icon type=\\\"plus\\\" />\\n                <div className=\\\"ant-upload-text\\\">Upload</div>\\n            </div>\\n        );\\n\\n        const { getFieldDecorator } = this.props.form;\\n\\n        return (\\n            <div className=\\\"articleform\\\" id='box'>\\n\\n                {/* 타이틀 */}\\n                <center>당신의 소식을 친구들에게 알려주세요!</center> <br />\\n\\n                {/* 폼 */}\\n                <Form onSubmit={this.handleSubmit} className=\\\"article-form\\\">\\n\\n                    {/* 글 작성 폼*/}\\n                    <Form.Item>\\n                        {getFieldDecorator('content', {\\n                            rules: [{ required: true, message: '한마디를 작성 해 주세요!' }],\\n                        })(\\n                            <TextArea\\n                                placeholder=\\\"오늘 무슨 일이 일어났나요?\\\"\\n                                autosize={{ minRows: 5, maxRows: 6 }}\\n                            />,\\n                        )}\\n                    </Form.Item>\\n\\n                    {/* 사진 업로드 폼 */}\\n                    <Form.Item>\\n                        {getFieldDecorator('photo', {\\n                            rules: [{ required: false }],\\n                        })(\\n                            <div className=\\\"clearfix\\\">\\n                                <Upload\\n                                    name=\\\"file\\\"\\n                                    action={serverUrl + \\\"/photo/upload/\\\" + this.userID}\\n                                    listType=\\\"picture-card\\\"\\n                                    fileList={fileList}\\n                                    onPreview={this.handlePreview}\\n                                    onChange={this.handleChange}\\n                                >\\n                                    {fileList.length >= 5 ? null : uploadButton}\\n                                </Upload>\\n                                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\\n                                    <img alt=\\\"example\\\" style={{ width: '100%' }} src={previewImage} />\\n                                </Modal>\\n                            </div>\\n                        )}\\n                    </Form.Item>\\n\\n                    {/* 업로드 버튼 */}\\n                    <Form.Item>\\n                        <center>\\n                            <Button type=\\\"primary\\\" htmlType=\\\"submit\\\" className=\\\"article-form-button\\\" >\\n                                Upload\\n                            </Button>\\n                        </center>\\n                    </Form.Item>\\n\\n                </Form>\\n\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default Form.create()(ArticleForm);\\n\",\"import React, { Component } from 'react';\\nimport ArticleArray from './ArticleArray';\\nimport { getUser, getToken } from '../authentication';\\nimport ArticleForm from './ArticleForm';\\n\\nimport { serverUrl } from '../setting'\\n\\nclass Timeline extends Component {\\n    state = {\\n        articles: []\\n    }\\n\\n    constructor(props) {\\n        super(props)\\n        \\n        this.loadingArticles()\\n    }\\n\\n    shouldComponentUpdate(props) {\\n        return true\\n      }\\n    \\n    //소식 목록 로딩\\n    //ArticleArray 컴포넌트에서 하지 않고 timeline에서 하는 이유는 ?\\n    //form에서 입력받은 소식을 업데이트 해줘야 하므로, 여기서 state를 바꿔주어야 한다. \\n    loadingArticles = () => {\\n        const requesturl = serverUrl + '/article/timeline/' + getUser().userID\\n        fetch(requesturl, {\\n            method: 'GET',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status ===200){\\n                    return response.json();\\n                } else {\\n                    console.log('소식 불러오기 에러!')\\n                    return [];\\n                }\\n            }).then(response => this.setState({articles : response}))\\n    }\\n\\n    //새로 입력한 글 소식 리스트의 맨앞에 넣어주어 렌더링\\n    addArticle = (article) => {\\n        let articles = this.state.articles\\n        articles.unshift(article)\\n        this.setState({articles : articles})\\n    }\\n\\n    //삭제한 글 state의 리스트에서 삭제해 주어 다시 렌더링\\n    deleteArticle = (article) => {\\n        let articles = this.state.articles\\n        articles.splice(articles.indexOf(article),1);\\n        this.setState({articles : articles})\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <ArticleForm addArticle={this.addArticle} />\\n                <ArticleArray articles={this.state.articles} deleteArticle={this.deleteArticle} />\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default Timeline;\",\"import React, { Component } from 'react';\\nimport { Form, Icon, Popover, Button, Upload, Modal, message } from 'antd';\\n\\nimport { getUser, getToken } from '../authentication';\\nimport { serverUrl } from '../setting'\\n\\n//사진 업로드\\nfunction getBase64(file) {\\n    return new Promise((resolve, reject) => {\\n        const reader = new FileReader();\\n        reader.readAsDataURL(file);\\n        reader.onload = () => resolve(reader.result);\\n        reader.onerror = error => reject(error);\\n    });\\n}\\n\\nclass ChangeProfile extends Component {\\n\\n    state = {\\n        previewVisible: false,\\n        previewImage: '',\\n        fileList: [\\n\\n        ],\\n        visible: false,\\n    };\\n\\n    //유저아이디\\n    userID = getUser().userID\\n\\n    //사진 취소 \\n    handleCancel = () => this.setState({ previewVisible: false });\\n\\n    //프리뷰\\n    handlePreview = async file => {\\n        if (!file.url && !file.preview) {\\n            file.preview = await getBase64(file.originFileObj);\\n        }\\n\\n        this.setState({\\n            previewImage: file.url || file.preview,\\n            previewVisible: true,\\n        });\\n    };\\n\\n    //파일 추가되었을 때\\n    handleChange = ({ fileList }) => this.setState({ fileList });\\n\\n    //업로드 버튼 눌렀을 때\\n    handleSubmit = e => {\\n        e.preventDefault();\\n        this.props.form.validateFields((err, values) => {\\n            if (!err) {\\n                let user = {\\n                    'id': this.userID,\\n                    'profile': this.state.fileList[0].response.name\\n                }\\n                //http요청\\n                fetch(serverUrl + '/user/profile', {\\n                    method: 'PUT',\\n                    headers: {\\n                        'Content-Type': 'application/json',\\n                        'token': getToken()\\n                    },\\n                    body: JSON.stringify(user)\\n                }).then(response => {\\n                    if (response.status === 200) {\\n                        //사진 업로드 성공\\n                        message.success('프로필 사진 업로드에 성공하였습니다.')\\n                        this.props.form.resetFields()\\n                        this.hide()\\n                    } else {\\n                        console.log(\\\"글올리기 실패\\\")\\n                    }\\n                });\\n            }\\n        });\\n    };\\n\\n    //폼 없애기\\n    hide = () => {\\n        this.setState({\\n            visible: false,\\n        });\\n    };\\n\\n    //폼 보이기\\n    handleVisibleChange = visible => {\\n        this.setState({ visible });\\n    };\\n\\n    render() {\\n        const { previewVisible, previewImage, fileList } = this.state;\\n        const { getFieldDecorator } = this.props.form;\\n\\n        //업로드 버튼\\n        const uploadButton = (\\n            <div>\\n                <Icon type=\\\"plus\\\" />\\n                <div className=\\\"ant-upload-text\\\">Upload</div>\\n            </div>\\n        );\\n\\n        return (\\n\\n            <Popover\\n                content={\\n                    <div className=\\\"articleform\\\" id='box'>\\n\\n                        {/* 폼 */}\\n                        <Form onSubmit={this.handleSubmit} className=\\\"article-form\\\">\\n\\n                            {/* 사진 업로드 폼 */}\\n                            <Form.Item>\\n                                {getFieldDecorator('photo', {\\n                                    rules: [{ required: false }],\\n                                })(\\n                                    <div className=\\\"clearfix\\\">\\n                                        <Upload\\n                                            name=\\\"file\\\"\\n                                            action={serverUrl + \\\"/photo/upload/\\\" + this.userID}\\n                                            listType=\\\"picture-card\\\"\\n                                            fileList={fileList}\\n                                            onPreview={this.handlePreview}\\n                                            onChange={this.handleChange}\\n                                        >\\n                                            {fileList.length >= 1 ? null : uploadButton}\\n                                        </Upload>\\n                                        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\\n                                            <img alt=\\\"example\\\" style={{ width: '100%' }} src={previewImage} />\\n                                        </Modal>\\n                                    </div>\\n                                )}\\n                            </Form.Item>\\n\\n                            {/* 버튼 */}\\n                            <Form.Item>\\n                                <center>\\n                                    <Button type=\\\"primary\\\" htmlType=\\\"submit\\\" className=\\\"article-form-button\\\" >\\n                                        Upload\\n                                    </Button>\\n                                </center>\\n                            </Form.Item>\\n\\n                        </Form>\\n                    </div>\\n\\n                }\\n                title=\\\"프로필 사진 변경\\\"\\n                trigger=\\\"click\\\"\\n                visible={this.state.visible}\\n                onVisibleChange={this.handleVisibleChange}\\n            >\\n                {/* 이 폼을 열기 위한 버튼 */}\\n                <Button type=\\\"default\\\" icon=\\\"smile\\\" shape=\\\"circle\\\" />\\n            </Popover>\\n\\n        );\\n    }\\n}\\n\\nexport default Form.create()(ChangeProfile);\",\"import React, { Component } from 'react';\\nimport { Button, Avatar } from 'antd';\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nimport ChangeProfile from './ChangeProfile';\\nimport { serverUrl } from '../setting'\\nimport { history } from '../History';\\nimport { logout, getUser, getToken } from '../authentication';\\n\\nimport './Header.css';\\nimport './Box.css';\\n\\nclass Header extends Component {\\n\\n    state = {\\n        user: {}\\n    }\\n\\n    constructor(props) {\\n        super(props);\\n        this.loadingUser();\\n    }\\n\\n    //현재 로그인 된 유저의 정보\\n    loadingUser = () => {\\n        const userID = getUser().userID\\n        const requesturl = serverUrl + '/user/getinfo/' + userID\\n        fetch(requesturl, {\\n            method: 'GET',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    return response.json();\\n                } else {\\n                    console.log('유저 정보 불러오기 에러!')\\n                    return [];\\n                }\\n            }).then(response => this.setState({ user: response }))\\n    }\\n\\n    //프로필 사진을 받아오기\\n    getOnePhoto = (fileName, username) => {\\n        if (fileName === \\\"\\\" || fileName == null)\\n            return <Avatar size='large'>{username}</Avatar>\\n        else\\n            return <Avatar size='large' src={serverUrl + '/photo/download?filename=' + fileName} />\\n    }\\n\\n    //로그아웃\\n    logOut = () => {\\n        logout()\\n        history.push('/login')\\n    }\\n\\n    //프로필 : 사진 + 이름으로 구성\\n    getProfile = () => {\\n        if (this.state.user === {}) {\\n            return null;\\n        } else {\\n            return (\\n            <span>\\n                <span id='margin'>{this.getOnePhoto(this.state.user.profile, this.state.user.username)}</span>\\n                <Link to='#' onClick={this.toHome} ><span id='margin' className='link'>{this.state.user.username}</span></Link>\\n            </span>);\\n        }\\n    }\\n\\n    toHome = () => {\\n        history.push('/home/' + getUser().userID)\\n    }\\n\\n    render() {\\n        return (\\n            <div className='Header'>\\n                {/* 로고 텍스트 ( 클릭하면 타임라인으로 이동) */}\\n                <div className=\\\"left-box\\\">\\n                    <b className='logo'><Link to='/main' id='color'>TIMELINE</Link></b>\\n                </div>\\n\\n                {/* 로그인 정보 + 프로필 변경 + 로그아웃 버튼 */}\\n                <div className=\\\"right-box\\\">\\n                    {/* 로그인 정보 */}\\n                    <b>{this.getProfile()}</b>\\n                    {/* 프로필 변경 */}\\n                    <span id='margin'><ChangeProfile /></span>\\n                    {/* 로그아웃 버튼 */}\\n                    <span id='margin'><Button type=\\\"danger\\\" icon=\\\"poweroff\\\" onClick={this.logOut} shape=\\\"circle\\\" /></span>\\n                </div>\\n                \\n            </div>\\n        );\\n    }\\n}\\n\\nexport default Header;\",\"import React, { Component } from 'react';\\nimport { Avatar, Button, message, Popconfirm } from 'antd';\\n\\nimport ArticleArray from './ArticleArray';\\nimport { getUser, getToken } from '../authentication';\\nimport { serverUrl } from '../setting'\\n\\nimport './Box.css';\\n\\nclass Home extends Component {\\n    state = {\\n        articles: [],\\n        user: {},\\n        relationship: 1\\n    }\\n\\n    constructor(props) {\\n        super(props)\\n\\n        //누구의 소식 모아보긴지 파라미터를 통해 얻음ㅁ\\n        const { userID } = this.props.match.params\\n        this.loadingUser(userID);\\n        this.loadingArticles(userID)\\n        this.loadingRelationship(userID);\\n    }\\n\\n    shouldComponentUpdate(props) {\\n        return true\\n    }\\n\\n    //현재 페이지 내에서 파라미터만 변경되었을 경우 (소식 모아보기 -> 다른사람 소식 모아보기)\\n    componentWillReceiveProps(newProps){\\n        if (this.props.match.params !== newProps.match.params){\\n            const { userID } = newProps.match.params;\\n            this.loadingUser(userID);\\n            this.loadingArticles(userID)\\n            this.loadingRelationship(userID);    \\n        }\\n    }\\n\\n    //나와의 관계가 무엇인지?\\n    loadingRelationship = (others) => {\\n        const requesturl = serverUrl + '/friend/request/check/' + getUser().userID + '/' + others\\n        fetch(requesturl, {\\n            method: 'GET',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    return response.json();\\n                } else {\\n                    console.log('관계 불러오기 에러!')\\n                    return [];\\n                }\\n            }).then(response => this.setState({ relationship: response }))\\n\\n    }\\n\\n    //해당 사람의 프로필 얻어오기\\n    loadingUser = ( others) => {\\n        const requesturl = serverUrl + '/user/getinfo/' + others\\n        fetch(requesturl, {\\n            method: 'GET',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    return response.json();\\n                } else {\\n                    console.log('유저 정보 불러오기 에러!')\\n                    return [];\\n                }\\n            }).then(response => this.setState({ user: response }))\\n    }\\n\\n    //해당 사람의 소식 모아보기\\n    loadingArticles = (others) => {\\n        const requesturl = serverUrl + '/article/home/' + others + '/' + getUser().userID\\n        fetch(requesturl, {\\n            method: 'GET',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    return response.json();\\n                } else {\\n                    console.log('소식 불러오기 에러!')\\n                    return [];\\n                }\\n            }).then(response => this.setState({ articles: response }))\\n    }\\n\\n    //삭제한 글 state의 리스트에서 삭제해 주어 다시 렌더링\\n    deleteArticle = (article) => {\\n        let articles = this.state.articles\\n        articles.splice(articles.indexOf(article), 1);\\n        this.setState({ articles: articles })\\n    }\\n\\n    //프로필 사진을 받아오기\\n    getOnePhoto = (fileName, username) => {\\n        if (fileName === \\\"\\\" || fileName == null)\\n            return <Avatar size='large'>{username}</Avatar>\\n        else\\n            return <Avatar size='large' src={serverUrl + '/photo/download?filename=' + fileName} />\\n    }\\n\\n    //그사람과의 관계에 따라 버튼이 달라짐\\n    getButton = () => {\\n        const { userID } = this.props.match.params\\n        if (getUser().userID == userID) {\\n            return null;\\n        } else if (this.state.relationship === 1) {\\n            //이미 친구인 상태\\n            return (\\n                <Popconfirm\\n                    title=\\\"정말 친구 관계를 끊으시겠습니까?\\\"\\n                    onConfirm={this.confirm}\\n                    onCancel={this.cancel}\\n                    okText=\\\"Yes\\\"\\n                    cancelText=\\\"No\\\"\\n                >\\n\\n                    <Button type=\\\"danger\\\" size=\\\"small\\\" ghost>친구끊기</Button>\\n                </Popconfirm>\\n            )\\n        } else if (this.state.relationship === 2) {\\n            //이미 친구요청 보낸  상태\\n            return (\\n                <Button size=\\\"small\\\" disabled>이미신청했음</Button>\\n            )\\n        } else if (this.state.relationship === 3) {\\n            //이미 친구요청 받은 상태\\n            return (\\n                <Button size=\\\"small\\\" disabled>친구요청받음</Button>\\n            )\\n        } else {\\n            return (\\n                <Button type=\\\"primary\\\" size=\\\"small\\\" onClick={this.sendRequest} ghost>친구신청</Button>\\n            )\\n        }\\n    }\\n\\n    //친구 요청을 보낼 떄\\n    sendRequest = () => {\\n        const { userID } = this.props.match.params\\n        fetch(serverUrl + \\\"/friend/request/\\\"+getUser().userID+\\\"/\\\"+userID, {\\n            method: 'POST',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    message.success(\\\"친구 요청을 보냈습니다!\\\")\\n                    this.setState({relationship : 2})\\n                } else {\\n                    //오류 처리\\n                    console.log(\\\"error!\\\")\\n                }\\n            })\\n    }\\n\\n    //친구 취소할 때\\n    confirm = (e) => {\\n        const { userID } = this.props.match.params;\\n        const requesturl = serverUrl + '/friends/' + userID + '/' + getUser().userID;\\n        fetch(requesturl, {\\n            method: 'DELETE',\\n            headers: {\\n                'token': getToken()\\n            }\\n        })\\n            .then(response => {\\n                if (response.status === 200) {\\n                    message.success('더이상 친구관계가 아닙니다');\\n                    this.setState({relationship : 4});\\n                } else {\\n                    console.log('친구 삭제')\\n                    return [];\\n                }\\n            })\\n\\n    }\\n\\n    cancel = (e) => {\\n\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div id='box'>\\n                    <span id='margin'>{this.getOnePhoto(this.state.user.profile, this.state.user.username)}</span>\\n                    <span id='margin'><b>{this.state.user.username}</b> 의 소식 모아보기</span>\\n                    <span id='margin'>{this.getButton()}</span>\\n                </div>\\n                <ArticleArray articles={this.state.articles} deleteArticle={this.deleteArticle} />\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default Home;\",\"import React, { Component } from 'react';\\nimport { Layout, Row, Col } from 'antd';\\nimport { Route, Switch } from \\\"react-router-dom\\\";\\n\\nimport Friend from './Friend';\\nimport Timeline from './Timeline';\\nimport Header from './Header';\\nimport Home from './Home';\\n\\nimport './Main.css';\\n\\nconst { Footer, Content } = Layout;\\n\\nclass Main extends Component {\\n\\n    render() {\\n        return (\\n            <div>\\n                <Layout>\\n                    <Header/>\\n                    <Content >\\n                        <div className='MarginTop'>\\n                        <Row>\\n                            <Col span={2}></Col>\\n                            <Col span={12}>\\n                                <Switch>\\n                                    <Route path ='/' exact component ={Timeline} />\\n                                    <Route path='/main' exact component={Timeline} />\\n                                    <Route path='/home/:userID' exact component={Home} />\\n                                </Switch>\\n                            </Col>\\n                            <Col span={1}></Col>\\n                            <Col span={7}><Friend /></Col>\\n                            <Col span={2}></Col>\\n                        </Row>\\n                        </div>\\n                    </Content>\\n                    <Footer>\\n                        <div className='footer'>\\n                            Copyright 2019. Jung Yeongmo All rights reserved.\\n                        </div>\\n                    </Footer>\\n                </Layout>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default Main;\",\"import React, {Component} from 'react';\\nimport {history} from './History';\\nimport { Router, Route, Switch } from \\\"react-router-dom\\\";\\n\\nimport { PrivateRoute } from './PrivateRoute';\\nimport LoginAndRegister from './components/LoginAndRegister';\\nimport Main from './components/Main';\\n\\nimport './App.css';\\n\\nclass App extends Component {\\n  \\n  render() {\\n    return (\\n      <div>\\n        <Router history={history}>\\n          <Switch>\\n            <Route path='/login' exact component={LoginAndRegister} /> \\n            <Route path='/register' exact component={LoginAndRegister} />\\n            <Route path='/login/forgot' exact component={LoginAndRegister} />\\n            <PrivateRoute path='/' exact component={Main} />\\n            <PrivateRoute path='/main' exact component={Main} />\\n            <PrivateRoute path='/home/:userID' exact component={Main} />\\n          </Switch>\\n        </Router>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{136:function(e,t,a){},231:function(e,t,a){e.exports=a(473)},236:function(e,t,a){},371:function(e,t,a){},410:function(e,t,a){},411:function(e,t,a){},413:function(e,t,a){},415:function(e,t,a){},470:function(e,t,a){},471:function(e,t,a){},472:function(e,t,a){},473:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),l=a(6),s=a.n(l),o=(a(236),a(10)),i=a(11),c=a(13),u=a(12),m=a(14),p=a(31),d=Object(p.a)(),h=a(54),f=a(228),g=function(e){var t=e.component,a=Object(f.a)(e,[\"component\"]);return r.a.createElement(h.b,Object.assign({},a,{render:function(e){return localStorage.getItem(\"USER\")&&localStorage.getItem(\"token\")?r.a.createElement(t,e):r.a.createElement(h.a,{to:{pathname:\"/login\",state:{from:e.location}}})}}))},E=a(484),v=a(481),b=a(482),y=a(9),O=a(37),j=a(22),w=function(e){var t=e.user,a=e.token;localStorage.setItem(\"USER\",JSON.stringify(t)),localStorage.setItem(\"token\",a)},k=function(){var e=localStorage.getItem(\"USER\");try{return JSON.parse(e)}catch(t){return null}},I=function(){localStorage.removeItem(\"USER\"),localStorage.removeItem(\"token\")},S=function(){try{return localStorage.getItem(\"token\")}catch(e){return null}},C=\"http://localhost:8080\",D=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),l=0;l<n;l++)r[l]=arguments[l];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(r)))).handleSubmit=function(e){e.preventDefault(),a.props.form.validateFields(function(e,t){e||fetch(C+\"/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(t)}).then(function(e){var t=e.status;200===t?e.json().then(function(e){w(e),E.a.success(e.user.username+\"\\ub2d8 \\ud658\\uc601\\ud569\\ub2c8\\ub2e4!\"),d.push(\"/main\")}):401===t&&(E.a.error(\"\\ub85c\\uadf8\\uc778\\uc5d0 \\uc2e4\\ud328 \\ud558\\uc600\\uc2b5\\ub2c8\\ub2e4. \\uc774\\uba54\\uc77c \\ud639\\uc740 \\ube44\\ubc00\\ubc88\\ud638\\ub97c \\ub2e4\\uc2dc \\ud655\\uc778 \\ud574 \\uc8fc\\uc138\\uc694.\"),console.log(\"fail!\"))})})},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=this.props.form.getFieldDecorator;return r.a.createElement(v.a,{onSubmit:this.handleSubmit,className:\"form\"},r.a.createElement(v.a.Item,null,e(\"email\",{rules:[{required:!0,message:\"\\uc774\\uba54\\uc77c\\uc744 \\uc785\\ub825 \\ud574 \\uc8fc\\uc138\\uc694!\"}]})(r.a.createElement(b.a,{prefix:r.a.createElement(y.a,{type:\"mail\",style:{color:\"rgba(0,0,0,.25)\"}}),placeholder:\"Email\"}))),r.a.createElement(v.a.Item,null,e(\"password\",{rules:[{required:!0,message:\"\\ube44\\ubc00\\ubc88\\ud638\\ub97c \\uc785\\ub825 \\ud574 \\uc8fc\\uc138\\uc694!\"}]})(r.a.createElement(b.a,{prefix:r.a.createElement(y.a,{type:\"lock\",style:{color:\"rgba(0,0,0,.25)\"}}),type:\"password\",placeholder:\"Password\"}))),r.a.createElement(v.a.Item,null,r.a.createElement(j.a,{to:\"/login/forgot\",className:\"login-form-forgot\"},\"Forgot password\"),r.a.createElement(O.a,{type:\"primary\",htmlType:\"submit\",className:\"button\"},\"Log in\"),\"Or \",r.a.createElement(j.a,{to:\"/register\"},\"register now!\")))}}]),t}(n.Component),T=v.a.create()(D),x=a(86),N=x.a.Option,A=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),l=0;l<n;l++)r[l]=arguments[l];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(r)))).handleSubmit=function(e){e.preventDefault(),a.props.form.validateFields(function(e,t){if(e)E.a.error(\"\\ub450 \\ube44\\ubc00\\ubc88\\ud638\\uac00 \\uac19\\uc740\\uc9c0 \\ud655\\uc778 \\ud574 \\uc8fc\\uc138\\uc694!\");else{var a={email:t.email,username:t.username,password:t.password,question:t.question,answer:t.answer};fetch(C+\"/regist\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(a)}).then(function(e){200===e.status?(E.a.success(\"\\ud68c\\uc6d0\\uc774 \\ub418\\uc2e0 \\uac83\\uc744 \\ud658\\uc601\\ud569\\ub2c8\\ub2e4!\"),d.push(\"/login\")):403===e.status&&E.a.error(\"\\uac19\\uc740 \\uc774\\uba54\\uc77c\\uc744 \\uc0ac\\uc6a9\\ud558\\ub294 \\uc0ac\\uc6a9\\uc790\\uac00 \\uc774\\ubbf8 \\uc874\\uc7ac\\ud569\\ub2c8\\ub2e4!\")})}})},a.compareToFirstPassword=function(e,t,n){var r=a.props.form;t&&t!==r.getFieldValue(\"password\")?n(\"\\ub450 \\ube44\\ubc00\\ubc88\\ud638\\uac00 \\uc77c\\uce58\\ud558\\uc9c0 \\uc54a\\uc2b5\\ub2c8\\ub2e4!\"):n()},a.validateToNextPassword=function(e,t,n){a.props.form.validateFields([\"confirm\"],{force:!0}),n()},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=this.props.form.getFieldDecorator;return r.a.createElement(v.a,{onSubmit:this.handleSubmit,className:\"form\"},r.a.createElement(v.a.Item,null,e(\"email\",{rules:[{required:!0,message:\"\\uc774\\uba54\\uc77c \\uc8fc\\uc18c\\ub97c \\uc785\\ub825 \\ud574 \\uc8fc\\uc138\\uc694!\"}]})(r.a.createElement(b.a,{prefix:r.a.createElement(y.a,{type:\"mail\",style:{color:\"rgba(0,0,0,.25)\"}}),placeholder:\"Email Address\"}))),r.a.createElement(v.a.Item,null,e(\"username\",{rules:[{required:!0,message:\"\\uc774\\ub984\\uc744 \\uc785\\ub825 \\ud574 \\uc8fc\\uc138\\uc694!\"}]})(r.a.createElement(b.a,{prefix:r.a.createElement(y.a,{type:\"user\",style:{color:\"rgba(0,0,0,.25)\"}}),placeholder:\"Username\"}))),r.a.createElement(v.a.Item,{hasFeedback:!0},e(\"password\",{rules:[{required:!0,message:\"\\ube44\\ubc00\\ubc88\\ud638\\ub97c \\uc785\\ub825 \\ud574 \\uc8fc\\uc138\\uc694!\"},{validator:this.validateToNextPassword}]})(r.a.createElement(b.a.Password,{prefix:r.a.createElement(y.a,{type:\"lock\",style:{color:\"rgba(0,0,0,.25)\"}}),placeholder:\"Password\"}))),r.a.createElement(v.a.Item,{hasFeedback:!0},e(\"confirm\",{rules:[{required:!0,message:\"\\ube44\\ubc00\\ubc88\\ud638\\ub97c \\ub2e4\\uc2dc \\ud55c\\ubc88 \\uc785\\ub825 \\ud574 \\uc8fc\\uc138\\uc694!\"},{validator:this.compareToFirstPassword}]})(r.a.createElement(b.a.Password,{prefix:r.a.createElement(y.a,{type:\"lock\",style:{color:\"rgba(0,0,0,.25)\"}}),placeholder:\"Confirm password\",onBlur:this.handleConfirmBlur}))),r.a.createElement(v.a.Item,{hasFeedback:!0},e(\"question\",{rules:[{required:!0,message:\"\\ube44\\ubc00\\ubc88\\ud638 \\ucd08\\uae30\\ud654 \\uc2dc \\uc0ac\\uc6a9\\ub420 \\uc9c8\\ubb38\\uc744 \\uace8\\ub77c\\uc8fc\\uc138\\uc694!\"}]})(r.a.createElement(x.a,{placeholder:\"Password reset question\"},r.a.createElement(N,{value:\"\\ubcf4\\ubb3c 1\\ud638\\ub294?\"},\"\\ubcf4\\ubb3c 1\\ud638\\ub294?\"),r.a.createElement(N,{value:\"\\uc5c4\\ub9c8\\uc758 \\uc774\\ub984\\uc740?\"},\"\\uc5c4\\ub9c8\\uc758 \\uc774\\ub984\\uc740?\"),r.a.createElement(N,{value:\"\\uc544\\ube60\\uc758 \\uc774\\ub984\\uc740?\"},\"\\uc544\\ube60\\uc758 \\uc774\\ub984\\uc740?\"),r.a.createElement(N,{value:\"\\ucd9c\\uc2e0 \\ucd08\\ub4f1\\ud559\\uad50\\uc758 \\uc774\\ub984\\uc740?\"},\"\\ucd9c\\uc2e0 \\ucd08\\ub4f1\\ud559\\uad50\\uc758 \\uc774\\ub984\\uc740?\")))),r.a.createElement(v.a.Item,null,e(\"answer\",{rules:[{required:!0,message:\"\\uc9c8\\ubb38\\uc5d0 \\ub300\\ud55c \\uc815\\ub2f5\\uc744 \\uc785\\ub825 \\ud574 \\uc8fc\\uc138\\uc694!\"}]})(r.a.createElement(b.a,{prefix:r.a.createElement(y.a,{type:\"question\",style:{color:\"rgba(0,0,0,.25)\"}}),placeholder:\"Answer\"}))),r.a.createElement(v.a.Item,null,r.a.createElement(O.a,{type:\"primary\",htmlType:\"submit\",className:\"button\"},\"Register Now!\"),\"Or \",r.a.createElement(j.a,{to:\"/login\"},\"login now!\")))}}]),t}(n.Component),q=v.a.create()(A),F=(a(371),function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,l=new Array(n),s=0;s<n;s++)l[s]=arguments[s];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(l)))).state={visibleEmail:!0,visibleQuestion:!1,visibleReset:!1,question:\"\",email:\"\"},a.emailSubmit=function(e){e.preventDefault(),a.props.form.validateFields(function(e,t){e||fetch(C+\"/login/forgot/question\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(t)}).then(function(e){var n=e.status;200===n?e.json().then(function(e){console.log(\"@@@@@@\"),console.log(e),a.setState({question:e.question,visibleEmail:!1,visibleQuestion:!0,email:t.email})}):403===n&&E.a.error(\"\\uc774\\uba54\\uc77c\\uc774 \\uc874\\uc7ac\\ud558\\uc9c0 \\uc54a\\uc2b5\\ub2c8\\ub2e4!\")})})},a.emailForm=function(){var e=a.props.form.getFieldDecorator;return r.a.createElement(\"span\",null,r.a.createElement(v.a,{onSubmit:a.emailSubmit,className:\"form\"},r.a.createElement(v.a.Item,null,\"\\uc774\\uba54\\uc77c \\uc8fc\\uc18c\\ub97c \\uc785\\ub825 \\ud574 \\uc8fc\\uc138\\uc694\",e(\"email\",{rules:[{required:!0,message:\"\\uc774\\uba54\\uc77c \\uc8fc\\uc18c\\ub97c \\uc785\\ub825 \\ud574 \\uc8fc\\uc138\\uc694!\"}]})(r.a.createElement(b.a,{prefix:r.a.createElement(y.a,{type:\"mail\",style:{color:\"rgba(0,0,0,.25)\"}}),placeholder:\"Email\"}))),r.a.createElement(v.a.Item,null,r.a.createElement(O.a,{type:\"primary\",htmlType:\"submit\",className:\"button\"},\"Submit Email Address\"),\"Or \",r.a.createElement(j.a,{to:\"/login\"},\"login now!\"))))},a.questionSubmit=function(e){e.preventDefault(),a.props.form.validateFields(function(e,t){e||fetch(C+\"/login/forgot/answer\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({answer:t.answer,email:a.state.email})}).then(function(e){var t=e.status;200===t?a.setState({visibleQuestion:!1,visibleReset:!0}):403===t&&E.a.error(\"\\uc815\\ub2f5\\uc774 \\uc77c\\uce58\\ud558\\uc9c0 \\uc54a\\uc2b5\\ub2c8\\ub2e4!\")})})},a.questionForm=function(){var e=a.props.form.getFieldDecorator;return r.a.createElement(\"span\",null,r.a.createElement(v.a,{onSubmit:a.questionSubmit,className:\"form\"},r.a.createElement(v.a.Item,null,a.state.question,e(\"answer\",{rules:[{required:!0,message:\"\\ub300\\ub2f5\\uc744 \\uc785\\ub825 \\ud574 \\uc8fc\\uc138\\uc694!\"}]})(r.a.createElement(b.a,{prefix:r.a.createElement(y.a,{type:\"question\",style:{color:\"rgba(0,0,0,.25)\"}}),placeholder:\"Answer\"}))),r.a.createElement(v.a.Item,null,r.a.createElement(O.a,{type:\"primary\",htmlType:\"submit\",className:\"button\"},\"Submit Answer\"),\"Or \",r.a.createElement(j.a,{to:\"/login\"},\"login now!\"))))},a.compareToFirstPassword=function(e,t,n){var r=a.props.form;t&&t!==r.getFieldValue(\"password\")?n(\"\\ub450 \\ube44\\ubc00\\ubc88\\ud638\\uac00 \\uc77c\\uce58\\ud558\\uc9c0 \\uc54a\\uc2b5\\ub2c8\\ub2e4!\"):n()},a.validateToNextPassword=function(e,t,n){a.props.form.validateFields([\"confirm\"],{force:!0}),n()},a.resetSubmit=function(e){e.preventDefault(),a.props.form.validateFields(function(e,t){e||(console.log(\"Received values of form: \",t),fetch(C+\"/login/forgot/reset\",{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:a.state.email,password:t.password})}).then(function(e){var t=e.status;200===t?(E.a.success(\"\\ube44\\ubc00\\ubc88\\ud638 \\ubcc0\\uacbd\\uc5d0 \\uc131\\uacf5\\ud558\\uc600\\uc2b5\\ub2c8\\ub2e4. \\ub85c\\uadf8\\uc778 \\ud398\\uc774\\uc9c0\\ub85c \\ub3cc\\uc544\\uac11\\ub2c8\\ub2e4!\"),d.push(\"/login\")):console.log(t)}))})},a.resetForm=function(){var e=a.props.form.getFieldDecorator;return r.a.createElement(\"span\",null,r.a.createElement(v.a,{onSubmit:a.resetSubmit,className:\"form\"},\"\\uc0c8\\ub85c\\uc6b4 \\ube44\\ubc00\\ubc88\\ud638\\ub97c \\uc785\\ub825\\ud574 \\uc8fc\\uc138\\uc694\",r.a.createElement(v.a.Item,{hasFeedback:!0},e(\"password\",{rules:[{required:!0,message:\"\\ube44\\ubc00\\ubc88\\ud638\\ub97c \\uc785\\ub825 \\ud574 \\uc8fc\\uc138\\uc694!\"},{validator:a.validateToNextPassword}]})(r.a.createElement(b.a.Password,{prefix:r.a.createElement(y.a,{type:\"lock\",style:{color:\"rgba(0,0,0,.25)\"}}),placeholder:\"Password\"}))),r.a.createElement(v.a.Item,{hasFeedback:!0},e(\"confirm\",{rules:[{required:!0,message:\"\\ube44\\ubc00\\ubc88\\ud638\\ub97c \\ub2e4\\uc2dc \\ud55c\\ubc88 \\uc785\\ub825 \\ud574 \\uc8fc\\uc138\\uc694!\"},{validator:a.compareToFirstPassword}]})(r.a.createElement(b.a.Password,{prefix:r.a.createElement(y.a,{type:\"lock\",style:{color:\"rgba(0,0,0,.25)\"}}),placeholder:\"Confirm password\",onBlur:a.handleConfirmBlur}))),r.a.createElement(v.a.Item,null,r.a.createElement(O.a,{type:\"primary\",htmlType:\"submit\",className:\"button\"},\"Reset Password\"),\"Or \",r.a.createElement(j.a,{to:\"/login\"},\"login now!\"))))},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,this.state.visibleEmail&&this.emailForm(),this.state.visibleQuestion&&this.questionForm(),this.state.visibleReset&&this.resetForm())}}]),t}(n.Component)),P=v.a.create()(F),L=function(e){function t(){return Object(o.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"login\"},r.a.createElement(\"h1\",{id:\"loginHeadline\"},\"TIMELINE\"),r.a.createElement(\"div\",{style:{margin:\"10px 0\"}},r.a.createElement(h.d,null,r.a.createElement(h.b,{path:\"/login\",exact:!0,component:T}),r.a.createElement(h.b,{path:\"/register\",excat:!0,component:q}),r.a.createElement(h.b,{path:\"/login/forgot\",exact:!0,component:P})))))}}]),t}(n.Component),U=a(485),R=a(476),B=a(477),z=a(474),J=a(475),V=(a(99),function(e){function t(e){var a;Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={relationship:4},a.getOnePhoto=function(e,t){return\"\"===e||null==e?r.a.createElement(z.a,{size:\"large\"},t):r.a.createElement(z.a,{size:\"large\",src:C+\"/photo/download?filename=\"+e})},a.getButton=function(){return\"request\"===a.props.from?r.a.createElement(\"span\",null,r.a.createElement(O.a,{type:\"primary\",shape:\"circle\",size:\"small\",onClick:a.acceptRequest},\"O\"),r.a.createElement(O.a,{type:\"danger\",shape:\"circle\",size:\"small\",onClick:a.denyRequest},\"X\")):k().userID===a.props.friend.id?null:1===a.state.relationship?r.a.createElement(J.a,{title:\"\\uc815\\ub9d0 \\uce5c\\uad6c \\uad00\\uacc4\\ub97c \\ub04a\\uc73c\\uc2dc\\uaca0\\uc2b5\\ub2c8\\uae4c?\",onConfirm:a.confirm,onCancel:a.cancel,okText:\"Yes\",cancelText:\"No\"},r.a.createElement(O.a,{type:\"danger\",size:\"small\",ghost:!0},\"\\uce5c\\uad6c\\ub04a\\uae30\")):2===a.state.relationship?r.a.createElement(O.a,{size:\"small\",disabled:!0},\"\\uc774\\ubbf8\\uc2e0\\uccad\\ud588\\uc74c\"):3===a.state.relationship?r.a.createElement(O.a,{size:\"small\",disabled:!0},\"\\uce5c\\uad6c\\uc694\\uccad\\ubc1b\\uc74c\"):r.a.createElement(O.a,{type:\"primary\",size:\"small\",onClick:a.sendRequest,ghost:!0},\"\\uce5c\\uad6c\\uc2e0\\uccad\")},a.confirm=function(e){console.log(e);var t=C+\"/friends/\"+a.props.friend.id+\"/\"+k().userID;fetch(t,{method:\"DELETE\",headers:{token:S()}}).then(function(e){200===e.status?(E.a.success(\"\\ub354\\uc774\\uc0c1 \\uce5c\\uad6c\\uad00\\uacc4\\uac00 \\uc544\\ub2d9\\ub2c8\\ub2e4\"),a.setState({relationship:4})):console.log(\"\\uce5c\\uad6c \\uc0ad\\uc81c \\uc2e4\\ud328\")})},a.cancel=function(e){console.log(e)},a.sendRequest=function(){fetch(C+\"/friend/request/\"+k().userID+\"/\"+a.props.friend.id,{method:\"POST\",headers:{token:S()}}).then(function(e){200===e.status?(E.a.success(\"\\uce5c\\uad6c \\uc694\\uccad\\uc744 \\ubcf4\\ub0c8\\uc2b5\\ub2c8\\ub2e4!\"),a.setState({relationship:2})):console.log(\"error!\")})},a.acceptRequest=function(){fetch(C+\"/friend/request/response/1/\"+a.props.friend.id+\"/\"+k().userID,{method:\"GET\",headers:{token:S()}}).then(function(e){200===e.status?(E.a.success(\"\\uc9c0\\uae08\\ubd80\\ud130 \\ub450\\ubd84\\uc740 \\uce5c\\uad6c\\uc0ac\\uc785\\ub2c8\\ub2e4!\"),a.deleteUnit()):console.log(\"error!\")})},a.denyRequest=function(){fetch(C+\"/friend/request/response/2/\"+a.props.friend.id+\"/\"+k().userID,{method:\"GET\",headers:{token:S()}}).then(function(e){200===e.status?(E.a.success(\"\\uce5c\\uad6c \\uc2e0\\uccad\\uc744 \\uac70\\uc808 \\ud558\\uc600\\uc2b5\\ub2c8\\ub2e4.\"),a.deleteUnit()):console.log(\"error!\")})},a.deleteUnit=function(){a.props.deleteArray(a.props.friend)};var n=C+\"/friend/request/check/\"+k().userID+\"/\"+a.props.friend.id;return fetch(n,{method:\"GET\",headers:{token:S()}}).then(function(e){return 200===e.status?e.json():(console.log(\"\\uad00\\uacc4 \\ubd88\\ub7ec\\uc624\\uae30 \\uc5d0\\ub7ec!\"),[])}).then(function(e){return a.setState({relationship:e})}),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=this.props.friend.profile,t=this.props.friend.id,a=this.props.friend.username,n=\"/home/\"+t;return r.a.createElement(\"div\",{className:\"marginTopBottom\"},r.a.createElement(\"span\",null,this.getOnePhoto(e,a),r.a.createElement(\"span\",{className:\"marginLeftRight\"},r.a.createElement(j.a,{to:n},a))),r.a.createElement(\"span\",{className:\"rightAlign\"},this.getButton()))}}]),t}(n.Component)),G=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),l=0;l<n;l++)r[l]=arguments[l];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(r)))).deleteArray=function(e){a.props.deleteArray(e)},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"shouldComponentUpdate\",value:function(){return!0}},{key:\"render\",value:function(){var e=this;return r.a.createElement(\"div\",null,this.props.friends.map(function(t){return r.a.createElement(V,{key:t.id,friend:t,deleteArray:e.deleteArray,from:e.props.from})}))}}]),t}(n.Component),M=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={requestList:[]},a.loadingFriendRequests=function(){var e=C+\"/friend/request/\"+k().userID;fetch(e,{method:\"GET\",headers:{token:S()}}).then(function(e){return 200===e.status?e.json():(console.log(\"\\uce5c\\uad6c\\uc2e0\\uccad \\ubd88\\ub7ec\\uc624\\uae30 \\uc5d0\\ub7ec!\"),[])}).then(function(e){a.setState({requestList:e})})},a.deleteArray=function(e){var t=a.state.requestList;t.splice(t.indexOf(e),1),a.setState({requestList:t})},a.getArray=function(){return null===a.state.requestList||a.state.requestList===[]?r.a.createElement(\"div\",{className:\"marginTopBottom grayColor\"},\"\\uce5c\\uad6c \\uc694\\uccad\\uc774 \\uc5c6\\uc2b5\\ub2c8\\ub2e4.\"):r.a.createElement(G,{friends:a.state.requestList,from:\"request\",deleteArray:a.deleteArray})},a.loadingFriendRequests(),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,\"\\uce5c\\uad6c \\uc694\\uccad\",this.getArray())}}]),t}(n.Component),H=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={suggestList:[]},a.loadingFriendSuggests=function(){var e=C+\"/friend/suggest/\"+k().userID;fetch(e,{method:\"GET\",headers:{token:S()}}).then(function(e){return 200===e.status?e.json():(console.log(\"\\uce5c\\uad6c\\ucd94\\ucc9c \\ubd88\\ub7ec\\uc624\\uae30 \\uc5d0\\ub7ec!\"),[])}).then(function(e){a.setState({suggestList:e})})},a.deleteArray=function(e){var t=a.state.suggestList;t.splice(t.indexOf(e),1),a.setState({suggestList:t})},a.getArray=function(){return null===a.state.suggestList||a.state.suggestList===[]?r.a.createElement(\"div\",{className:\"marginTopBottom grayColor\"},\"\\uce5c\\uad6c \\ucd94\\ucc9c\\uc774 \\uc5c6\\uc2b5\\ub2c8\\ub2e4.\"):r.a.createElement(G,{friends:a.state.suggestList,from:\"suggest\",deleteArray:a.deleteArray})},a.loadingFriendSuggests(),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,\"\\uce5c\\uad6c \\ucd94\\ucc9c\",this.getArray())}}]),t}(n.Component),Y=b.a.Search,Q=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,l=new Array(n),s=0;s<n;s++)l[s]=arguments[s];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(l)))).state={searchList:[]},a.deleteArray=function(e){var t=a.state.searchList;t.splice(t.indexOf(e),1),a.setState({searchList:t})},a.searchForm=function(){return r.a.createElement(Y,{placeholder:\"\\ucc3e\\uace0 \\uc2f6\\uc740 \\uce5c\\uad6c \\uc774\\ub984\",onSearch:function(e){\"\"!==e&&fetch(C+\"/friend/search/\"+e,{method:\"GET\",headers:{token:S()}}).then(function(e){return 200===e.status?e.json():(console.log(\"\\uce5c\\uad6c\\uac80\\uc0c9 \\uc5d0\\ub7ec!\"),[])}).then(function(e){a.setState({searchList:e})})},enterButton:!0})},a.getArray=function(){return null===a.state.searchList||a.state.searchList===[]?r.a.createElement(\"div\",{className:\"marginTopBottom grayColor\"},\"\\uac80\\uc0c9 \\uacb0\\uacfc\\uac00 \\uc5c6\\uc2b5\\ub2c8\\ub2e4\"):r.a.createElement(G,{friends:a.state.searchList,from:\"search\",deleteArray:a.deleteArray})},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,\"\\uce5c\\uad6c \\uac80\\uc0c9\",r.a.createElement(\"div\",{className:\"marginTopBottom\"},this.searchForm()),this.getArray())}}]),t}(n.Component),W=(a(136),function(e){function t(){return Object(o.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{id:\"box\"},r.a.createElement(M,null)),r.a.createElement(\"div\",{id:\"box\"},r.a.createElement(H,null)),r.a.createElement(\"div\",{id:\"box\"},r.a.createElement(Q,null)))}}]),t}(n.Component)),X=a(227),$=a(483),K=(a(410),function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),l=0;l<n;l++)r[l]=arguments[l];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(r)))).handleSubmit=function(e){e.preventDefault(),a.props.form.validateFields(function(e,t){if(!e)if(t.comment.length>100)E.a.error(\"\\ub313\\uae00 \\uae38\\uc774\\uac00 \\ub108\\ubb34 \\uae41\\ub2c8\\ub2e4!\");else{var n={articleID:a.props.articleID,userID:k().userID,content:t.comment};fetch(C+\"/comment\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",token:S()},body:JSON.stringify(n)}).then(function(e){return 200===e.status?(E.a.success(\"\\ub313\\uae00\\uc774 \\uc5c5\\ub85c\\ub4dc \\ub418\\uc5c8\\uc2b5\\ub2c8\\ub2e4.\"),a.props.form.resetFields(),e.json()):null}).then(function(e){a.props.addComment(e)})}})},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=this.props.form.getFieldDecorator;return r.a.createElement(\"div\",null,r.a.createElement(v.a,{layout:\"inline\",onSubmit:this.handleSubmit},r.a.createElement(v.a.Item,null,e(\"comment\",{rules:[{required:!0,message:\"\\ub313\\uae00\\uc744 \\uc785\\ub825 \\ud574 \\uc8fc\\uc138\\uc694!\"}]})(r.a.createElement(b.a,{prefix:r.a.createElement(y.a,{type:\"message\",style:{color:\"rgba(0,0,0,.25)\"}}),placeholder:\"Comment\",onPressEnter:this.handleSubmit}))),r.a.createElement(v.a.Item,null,r.a.createElement(O.a,{type:\"default\",htmlType:\"submit\"},\"Submit\"))))}}]),t}(n.Component)),Z=v.a.create()(K),_=a(480),ee=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,l=new Array(n),s=0;s<n;s++)l[s]=arguments[s];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(l)))).confirm=function(e){fetch(C+\"/comment/\"+a.props.commentID,{method:\"DELETE\",headers:{token:S()}}).then(function(e){200===e.status&&(a.props.deleteComment(a.props.comment),E.a.success(\"\\ub313\\uae00 \\uc0ad\\uc81c\\uac00 \\uc644\\ub8cc \\ub418\\uc5c8\\uc2b5\\ub2c8\\ub2e4!\"))})},a.cancel=function(e){console.log(e)},a.deleteButton=function(){return k().userID===a.props.commentUserID?r.a.createElement(J.a,{title:\"\\uc774 \\ub313\\uae00\\uc744 \\uc0ad\\uc81c\\ud558\\uc2dc\\uaca0\\uc2b5\\ub2c8\\uae4c?\",onConfirm:a.confirm,onCancel:a.cancel,okText:\"Yes\",cancelText:\"No\"},r.a.createElement(O.a,{type:\"default\",shape:\"circle\",size:\"small\"},\"X\")):null},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"span\",null,this.deleteButton())}}]),t}(n.Component),te=(a(411),function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,l=new Array(n),s=0;s<n;s++)l[s]=arguments[s];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(l)))).getDate=function(e){var t=new Date(e);return t.getFullYear()+\"/\"+(t.getMonth()+1)+\"/\"+t.getDate()+\" \"+t.getHours()+\":\"+t.getMinutes()},a.getOnePhoto=function(e,t){return\"\"===e||null==e?r.a.createElement(z.a,{size:\"large\"},t):r.a.createElement(z.a,{size:\"large\",src:C+\"/photo/download?filename=\"+e})},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"scrollToBottom\",value:function(){var e=this.messageList.scrollHeight-this.messageList.clientHeight;this.messageList.scrollTop=e>0?e:0}},{key:\"componentDidUpdate\",value:function(){this.scrollToBottom()}},{key:\"componentDidMount\",value:function(){this.scrollToBottom()}},{key:\"render\",value:function(){var e=this;return r.a.createElement(\"div\",{className:\"list\",ref:function(t){e.messageList=t}},r.a.createElement(_.a,{itemLayout:\"horizontal\",dataSource:this.props.comments,renderItem:function(t){return r.a.createElement(_.a.Item,null,r.a.createElement(_.a.Item.Meta,{avatar:e.getOnePhoto(t.profile,t.username),title:r.a.createElement(\"span\",null,r.a.createElement(\"b\",null,t.username),r.a.createElement(\"span\",{id:\"date\"},e.getDate(t.createdtime)),r.a.createElement(\"span\",{className:\"rightAlign\"},r.a.createElement(ee,{deleteComment:e.props.deleteComment,commentUserID:t.userID,commentID:t.commentID,comment:t}))),description:t.content}))}}))}}]),t}(n.Component)),ae=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),l=0;l<n;l++)r[l]=arguments[l];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(r)))).state={visible:!1,articleID:a.props.articleID,comments:[]},a.showModal=function(){a.setState({visible:!0}),a.loadComments()},a.handleOk=function(e){a.setState({visible:!1})},a.handleCancel=function(e){a.setState({visible:!1})},a.loadComments=function(){var e=C+\"/comment/\"+a.props.articleID;fetch(e,{method:\"GET\",headers:{token:S()}}).then(function(e){return 200===e.status?e.json():null}).then(function(e){a.setState({comments:e})})},a.addComment=function(e){var t=a.state.comments;t.push(e),a.setState({comments:t})},a.deleteComment=function(e){var t=a.state.comments;t.splice(t.indexOf(e),1),a.setState({comments:t})},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(O.a,{type:\"default\",icon:\"message\",onClick:this.showModal},\"\\ub313\\uae00\"),r.a.createElement($.a,{title:\"\\ub313\\uae00\",visible:this.state.visible,onOk:this.handleOk,onCancel:this.handleCancel,width:\"750px\",footer:null},r.a.createElement(te,{articleID:this.state.articleID,comments:this.state.comments,deleteComment:this.deleteComment}),r.a.createElement(Z,{loadComments:this.loadComments,articleID:this.state.articleID,addComment:this.addComment})))}}]),t}(n.Component),ne=(a(413),function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={},a.likeClick=function(){fetch(C+\"/liked/\"+a.state.articleID+\"/\"+k().userID,{method:\"PUT\",headers:{token:S()}}),\"true\"===a.state.liked?a.setState({like:a.state.like-1,liked:\"false\"}):a.setState({like:a.state.like+1,liked:\"true\"})},a.getPhoto=function(e){if(null===e||e===[]||\"\"==e)return null;var t=[];return e.map(function(e){return t.push(C+\"/photo/download?filename=\"+e)}),r.a.createElement(X.a,{images:t})},a.getOnePhoto=function(e,t){return\"\"===e||null===e?r.a.createElement(z.a,{size:\"large\"},t):r.a.createElement(z.a,{size:\"large\",src:C+\"/photo/download?filename=\"+e})},a.getDate=function(e){var t=new Date(e);return t.getFullYear()+\"/\"+(t.getMonth()+1)+\"/\"+t.getDate()+\" \"+t.getHours()+\":\"+t.getMinutes()},a.confirm=function(e){fetch(C+\"/article/\"+a.state.articleID+\"/\"+k().userID,{method:\"DELETE\",headers:{token:S()}}).then(function(e){200===e.status&&(E.a.success(\"\\uc18c\\uc2dd\\uc774 \\uc0ad\\uc81c \\ub418\\uc5c8\\uc2b5\\ub2c8\\ub2e4.\"),a.props.deleteArticle(a.props.article))})},a.cancel=function(e){console.log(e)},a.deleteButton=function(e,t){return e===t?r.a.createElement(J.a,{title:\"\\uc774 \\uc18c\\uc2dd\\uc744 \\uc0ad\\uc81c\\ud558\\uc2dc\\uaca0\\uc2b5\\ub2c8\\uae4c?\",onConfirm:a.confirm,onCancel:a.cancel,okText:\"Yes\",cancelText:\"No\"},r.a.createElement(O.a,{type:\"default\",shape:\"circle\",size:\"small\"},\"X\")):null},a.clickName=function(){d.push(\"/home/\"+a.state.articleUserID)},a.state={articleUserID:a.props.article.userID,articleUsername:a.props.article.username,articleUserprofile:a.props.article.profile,articleID:a.props.article.articleID,content:a.props.article.content.split(\"<br>\").map(function(e,t){return r.a.createElement(\"span\",{key:t},e,r.a.createElement(\"br\",null))}),like:a.props.article.like,liked:a.props.article.liked,photo:a.props.article.photo,createdtime:a.props.article.createdtime},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{id:\"box\"},r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"inline\"},this.getOnePhoto(this.state.articleUserprofile,this.state.articleUsername)),r.a.createElement(\"div\",{className:\"inline title marginLeftRight\"},r.a.createElement(j.a,{to:\"#\",onClick:this.clickName},r.a.createElement(\"b\",null,this.state.articleUsername))),r.a.createElement(\"div\",{className:\"inline rightAlign\"},this.deleteButton(k().userID,this.state.articleUserID))),r.a.createElement(\"div\",{className:\"marginTopBottom date\"},this.getDate(this.state.createdtime)),r.a.createElement(\"div\",{className:\"marginTopBottom\"},r.a.createElement(\"b\",null,this.state.content)),r.a.createElement(\"div\",null,this.getPhoto(this.state.photo)),r.a.createElement(\"div\",{className:\"marginTopBottom\"},r.a.createElement(y.a,{type:\"like\",theme:\"twoTone\",twoToneColor:\"#eb2f96\",width:\"200px\"}),r.a.createElement(\"span\",{className:\"marginLeftRight\"},this.state.like)),r.a.createElement(\"div\",{className:\"marginTopBottom\"},r.a.createElement(R.a,null,r.a.createElement(B.a,{span:12},r.a.createElement(\"center\",null,r.a.createElement(O.a,{type:\"true\"===this.state.liked?\"primary\":\"default\",icon:\"like\",onClick:this.likeClick},\"\\uc88b\\uc544\\uc694\"))),r.a.createElement(B.a,{span:12},r.a.createElement(\"center\",null,r.a.createElement(ae,{articleID:this.state.articleID}))))))}}]),t}(n.Component)),re=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),l=0;l<n;l++)r[l]=arguments[l];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(r)))).deleteArticle=function(e){a.props.deleteArticle(e)},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"shouldComponentUpdate\",value:function(){return!0}},{key:\"render\",value:function(){var e=this;return r.a.createElement(\"div\",null,this.props.articles.map(function(t){return r.a.createElement(ne,{key:t.articleID,article:t,deleteArticle:e.deleteArticle})}))}}]),t}(n.Component),le=a(72),se=a.n(le),oe=a(111),ie=a(479);a(415);function ce(e){return new Promise(function(t,a){var n=new FileReader;n.readAsDataURL(e),n.onload=function(){return t(n.result)},n.onerror=function(e){return a(e)}})}var ue=b.a.TextArea,me=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),l=0;l<n;l++)r[l]=arguments[l];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(r)))).state={previewVisible:!1,previewImage:\"\",fileList:[]},a.userID=k().userID,a.handleCancel=function(){return a.setState({previewVisible:!1})},a.handlePreview=function(){var e=Object(oe.a)(se.a.mark(function e(t){return se.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(t.url||t.preview){e.next=4;break}return e.next=3,ce(t.originFileObj);case 3:t.preview=e.sent;case 4:a.setState({previewImage:t.url||t.preview,previewVisible:!0});case 5:case\"end\":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),a.handleChange=function(e){var t=e.fileList;return a.setState({fileList:t})},a.handleSubmit=function(e){e.preventDefault(),a.props.form.validateFields(function(e,t){if(!e)if(t.content.length>250)E.a.error(\"\\ub9d0\\uc774 \\ub108\\ubb34 \\uae41\\ub2c8\\ub2e4!\");else{var n=[];a.state.fileList.map(function(e){return n.push(e.response.name)});var r=n.join(\"/\"),l={userID:a.userID,content:t.content.replace(/\\n/gi,\"<br>\"),photo:r};fetch(C+\"/article\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",token:S()},body:JSON.stringify(l)}).then(function(e){200===e.status?e.json().then(function(e){E.a.success(\"\\uc18c\\uc2dd\\uc774 \\uc131\\uacf5\\uc801\\uc73c\\ub85c \\uacf5\\uc720 \\ub418\\uc5c8\\uc2b5\\ub2c8\\ub2e4.\"),a.props.form.resetFields(),a.props.addArticle(e),a.handleCancel()}):console.log(\"\\uae00\\uc62c\\ub9ac\\uae30 \\uc2e4\\ud328\")})}})},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=this.state,t=e.previewVisible,a=e.previewImage,n=e.fileList,l=r.a.createElement(\"div\",null,r.a.createElement(y.a,{type:\"plus\"}),r.a.createElement(\"div\",{className:\"ant-upload-text\"},\"Upload\")),s=this.props.form.getFieldDecorator;return r.a.createElement(\"div\",{className:\"articleform\",id:\"box\"},r.a.createElement(\"center\",null,\"\\ub2f9\\uc2e0\\uc758 \\uc18c\\uc2dd\\uc744 \\uce5c\\uad6c\\ub4e4\\uc5d0\\uac8c \\uc54c\\ub824\\uc8fc\\uc138\\uc694!\"),\" \",r.a.createElement(\"br\",null),r.a.createElement(v.a,{onSubmit:this.handleSubmit,className:\"article-form\"},r.a.createElement(v.a.Item,null,s(\"content\",{rules:[{required:!0,message:\"\\ud55c\\ub9c8\\ub514\\ub97c \\uc791\\uc131 \\ud574 \\uc8fc\\uc138\\uc694!\"}]})(r.a.createElement(ue,{placeholder:\"\\uc624\\ub298 \\ubb34\\uc2a8 \\uc77c\\uc774 \\uc77c\\uc5b4\\ub0ac\\ub098\\uc694?\",autosize:{minRows:5,maxRows:6}}))),r.a.createElement(v.a.Item,null,s(\"photo\",{rules:[{required:!1}]})(r.a.createElement(\"div\",{className:\"clearfix\"},r.a.createElement(ie.a,{name:\"file\",action:C+\"/photo/upload/\"+this.userID,listType:\"picture-card\",fileList:n,onPreview:this.handlePreview,onChange:this.handleChange},n.length>=5?null:l),r.a.createElement($.a,{visible:t,footer:null,onCancel:this.handleCancel},r.a.createElement(\"img\",{alt:\"example\",style:{width:\"100%\"},src:a}))))),r.a.createElement(v.a.Item,null,r.a.createElement(\"center\",null,r.a.createElement(O.a,{type:\"primary\",htmlType:\"submit\",className:\"article-form-button\"},\"Upload\")))))}}]),t}(n.Component),pe=v.a.create()(me),de=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={articles:[]},a.loadingArticles=function(){var e=C+\"/article/timeline/\"+k().userID;fetch(e,{method:\"GET\",headers:{token:S()}}).then(function(e){return 200===e.status?e.json():(console.log(\"\\uc18c\\uc2dd \\ubd88\\ub7ec\\uc624\\uae30 \\uc5d0\\ub7ec!\"),[])}).then(function(e){return a.setState({articles:e})})},a.addArticle=function(e){var t=a.state.articles;t.unshift(e),a.setState({articles:t})},a.deleteArticle=function(e){var t=a.state.articles;t.splice(t.indexOf(e),1),a.setState({articles:t})},a.loadingArticles(),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"shouldComponentUpdate\",value:function(e){return!0}},{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(pe,{addArticle:this.addArticle}),r.a.createElement(re,{articles:this.state.articles,deleteArticle:this.deleteArticle}))}}]),t}(n.Component),he=a(478);function fe(e){return new Promise(function(t,a){var n=new FileReader;n.readAsDataURL(e),n.onload=function(){return t(n.result)},n.onerror=function(e){return a(e)}})}var ge=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),l=0;l<n;l++)r[l]=arguments[l];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(r)))).state={previewVisible:!1,previewImage:\"\",fileList:[],visible:!1},a.userID=k().userID,a.handleCancel=function(){return a.setState({previewVisible:!1})},a.handlePreview=function(){var e=Object(oe.a)(se.a.mark(function e(t){return se.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(t.url||t.preview){e.next=4;break}return e.next=3,fe(t.originFileObj);case 3:t.preview=e.sent;case 4:a.setState({previewImage:t.url||t.preview,previewVisible:!0});case 5:case\"end\":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),a.handleChange=function(e){var t=e.fileList;return a.setState({fileList:t})},a.handleSubmit=function(e){e.preventDefault(),a.props.form.validateFields(function(e,t){if(!e){var n={id:a.userID,profile:a.state.fileList[0].response.name};fetch(C+\"/user/profile\",{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",token:S()},body:JSON.stringify(n)}).then(function(e){200===e.status?(E.a.success(\"\\ud504\\ub85c\\ud544 \\uc0ac\\uc9c4 \\uc5c5\\ub85c\\ub4dc\\uc5d0 \\uc131\\uacf5\\ud558\\uc600\\uc2b5\\ub2c8\\ub2e4.\"),a.props.form.resetFields(),a.hide()):console.log(\"\\uae00\\uc62c\\ub9ac\\uae30 \\uc2e4\\ud328\")})}})},a.hide=function(){a.setState({visible:!1})},a.handleVisibleChange=function(e){a.setState({visible:e})},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=this.state,t=e.previewVisible,a=e.previewImage,n=e.fileList,l=this.props.form.getFieldDecorator,s=r.a.createElement(\"div\",null,r.a.createElement(y.a,{type:\"plus\"}),r.a.createElement(\"div\",{className:\"ant-upload-text\"},\"Upload\"));return r.a.createElement(he.a,{content:r.a.createElement(\"div\",{className:\"articleform\",id:\"box\"},r.a.createElement(v.a,{onSubmit:this.handleSubmit,className:\"article-form\"},r.a.createElement(v.a.Item,null,l(\"photo\",{rules:[{required:!1}]})(r.a.createElement(\"div\",{className:\"clearfix\"},r.a.createElement(ie.a,{name:\"file\",action:C+\"/photo/upload/\"+this.userID,listType:\"picture-card\",fileList:n,onPreview:this.handlePreview,onChange:this.handleChange},n.length>=1?null:s),r.a.createElement($.a,{visible:t,footer:null,onCancel:this.handleCancel},r.a.createElement(\"img\",{alt:\"example\",style:{width:\"100%\"},src:a}))))),r.a.createElement(v.a.Item,null,r.a.createElement(\"center\",null,r.a.createElement(O.a,{type:\"primary\",htmlType:\"submit\",className:\"article-form-button\"},\"Upload\"))))),title:\"\\ud504\\ub85c\\ud544 \\uc0ac\\uc9c4 \\ubcc0\\uacbd\",trigger:\"click\",visible:this.state.visible,onVisibleChange:this.handleVisibleChange},r.a.createElement(O.a,{type:\"default\",icon:\"smile\",shape:\"circle\"}))}}]),t}(n.Component),Ee=v.a.create()(ge),ve=(a(470),function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={user:{}},a.loadingUser=function(){var e=k().userID;fetch(C+\"/user/getinfo/\"+e,{method:\"GET\",headers:{token:S()}}).then(function(e){return 200===e.status?e.json():(console.log(\"\\uc720\\uc800 \\uc815\\ubcf4 \\ubd88\\ub7ec\\uc624\\uae30 \\uc5d0\\ub7ec!\"),[])}).then(function(e){return a.setState({user:e})})},a.getOnePhoto=function(e,t){return\"\"===e||null==e?r.a.createElement(z.a,{size:\"large\"},t):r.a.createElement(z.a,{size:\"large\",src:C+\"/photo/download?filename=\"+e})},a.logOut=function(){I(),d.push(\"/login\")},a.getProfile=function(){return a.state.user==={}?null:r.a.createElement(\"span\",null,r.a.createElement(\"span\",{id:\"margin\"},a.getOnePhoto(a.state.user.profile,a.state.user.username)),r.a.createElement(j.a,{to:\"#\",onClick:a.toHome},r.a.createElement(\"span\",{id:\"margin\",className:\"link\"},a.state.user.username)))},a.toHome=function(){d.push(\"/home/\"+k().userID)},a.loadingUser(),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"Header\"},r.a.createElement(\"div\",{className:\"left-box\"},r.a.createElement(\"b\",{className:\"logo\"},r.a.createElement(j.a,{to:\"/main\",id:\"color\"},\"TIMELINE\"))),r.a.createElement(\"div\",{className:\"right-box\"},r.a.createElement(\"b\",null,this.getProfile()),r.a.createElement(\"span\",{id:\"margin\"},r.a.createElement(Ee,null)),r.a.createElement(\"span\",{id:\"margin\"},r.a.createElement(O.a,{type:\"danger\",icon:\"poweroff\",onClick:this.logOut,shape:\"circle\"}))))}}]),t}(n.Component)),be=function(e){function t(e){var a;Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={articles:[],user:{},relationship:1},a.loadingRelationship=function(e){var t=C+\"/friend/request/check/\"+k().userID+\"/\"+e;fetch(t,{method:\"GET\",headers:{token:S()}}).then(function(e){return 200===e.status?e.json():(console.log(\"\\uad00\\uacc4 \\ubd88\\ub7ec\\uc624\\uae30 \\uc5d0\\ub7ec!\"),[])}).then(function(e){return a.setState({relationship:e})})},a.loadingUser=function(e){fetch(C+\"/user/getinfo/\"+e,{method:\"GET\",headers:{token:S()}}).then(function(e){return 200===e.status?e.json():(console.log(\"\\uc720\\uc800 \\uc815\\ubcf4 \\ubd88\\ub7ec\\uc624\\uae30 \\uc5d0\\ub7ec!\"),[])}).then(function(e){return a.setState({user:e})})},a.loadingArticles=function(e){var t=C+\"/article/home/\"+e+\"/\"+k().userID;fetch(t,{method:\"GET\",headers:{token:S()}}).then(function(e){return 200===e.status?e.json():(console.log(\"\\uc18c\\uc2dd \\ubd88\\ub7ec\\uc624\\uae30 \\uc5d0\\ub7ec!\"),[])}).then(function(e){return a.setState({articles:e})})},a.deleteArticle=function(e){var t=a.state.articles;t.splice(t.indexOf(e),1),a.setState({articles:t})},a.getOnePhoto=function(e,t){return\"\"===e||null==e?r.a.createElement(z.a,{size:\"large\"},t):r.a.createElement(z.a,{size:\"large\",src:C+\"/photo/download?filename=\"+e})},a.getButton=function(){var e=a.props.match.params.userID;return k().userID==e?null:1===a.state.relationship?r.a.createElement(J.a,{title:\"\\uc815\\ub9d0 \\uce5c\\uad6c \\uad00\\uacc4\\ub97c \\ub04a\\uc73c\\uc2dc\\uaca0\\uc2b5\\ub2c8\\uae4c?\",onConfirm:a.confirm,onCancel:a.cancel,okText:\"Yes\",cancelText:\"No\"},r.a.createElement(O.a,{type:\"danger\",size:\"small\",ghost:!0},\"\\uce5c\\uad6c\\ub04a\\uae30\")):2===a.state.relationship?r.a.createElement(O.a,{size:\"small\",disabled:!0},\"\\uc774\\ubbf8\\uc2e0\\uccad\\ud588\\uc74c\"):3===a.state.relationship?r.a.createElement(O.a,{size:\"small\",disabled:!0},\"\\uce5c\\uad6c\\uc694\\uccad\\ubc1b\\uc74c\"):r.a.createElement(O.a,{type:\"primary\",size:\"small\",onClick:a.sendRequest,ghost:!0},\"\\uce5c\\uad6c\\uc2e0\\uccad\")},a.sendRequest=function(){var e=a.props.match.params.userID;fetch(C+\"/friend/request/\"+k().userID+\"/\"+e,{method:\"POST\",headers:{token:S()}}).then(function(e){200===e.status?(E.a.success(\"\\uce5c\\uad6c \\uc694\\uccad\\uc744 \\ubcf4\\ub0c8\\uc2b5\\ub2c8\\ub2e4!\"),a.setState({relationship:2})):console.log(\"error!\")})},a.confirm=function(e){var t=a.props.match.params.userID,n=C+\"/friends/\"+t+\"/\"+k().userID;fetch(n,{method:\"DELETE\",headers:{token:S()}}).then(function(e){if(200!==e.status)return console.log(\"\\uce5c\\uad6c \\uc0ad\\uc81c\"),[];E.a.success(\"\\ub354\\uc774\\uc0c1 \\uce5c\\uad6c\\uad00\\uacc4\\uac00 \\uc544\\ub2d9\\ub2c8\\ub2e4\"),a.setState({relationship:4})})},a.cancel=function(e){};var n=a.props.match.params.userID;return a.loadingUser(n),a.loadingArticles(n),a.loadingRelationship(n),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"shouldComponentUpdate\",value:function(e){return!0}},{key:\"componentWillReceiveProps\",value:function(e){if(this.props.match.params!==e.match.params){var t=e.match.params.userID;this.loadingUser(t),this.loadingArticles(t),this.loadingRelationship(t)}}},{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{id:\"box\"},r.a.createElement(\"span\",{id:\"margin\"},this.getOnePhoto(this.state.user.profile,this.state.user.username)),r.a.createElement(\"span\",{id:\"margin\"},r.a.createElement(\"b\",null,this.state.user.username),\" \\uc758 \\uc18c\\uc2dd \\ubaa8\\uc544\\ubcf4\\uae30\"),r.a.createElement(\"span\",{id:\"margin\"},this.getButton())),r.a.createElement(re,{articles:this.state.articles,deleteArticle:this.deleteArticle}))}}]),t}(n.Component),ye=(a(471),U.a.Footer),Oe=U.a.Content,je=function(e){function t(){return Object(o.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(U.a,null,r.a.createElement(ve,null),r.a.createElement(Oe,null,r.a.createElement(\"div\",{className:\"MarginTop\"},r.a.createElement(R.a,null,r.a.createElement(B.a,{span:2}),r.a.createElement(B.a,{span:12},r.a.createElement(h.d,null,r.a.createElement(h.b,{path:\"/\",exact:!0,component:de}),r.a.createElement(h.b,{path:\"/main\",exact:!0,component:de}),r.a.createElement(h.b,{path:\"/home/:userID\",exact:!0,component:be}))),r.a.createElement(B.a,{span:1}),r.a.createElement(B.a,{span:7},r.a.createElement(W,null)),r.a.createElement(B.a,{span:2})))),r.a.createElement(ye,null,r.a.createElement(\"div\",{className:\"footer\"},\"Copyright 2019. Jung Yeongmo All rights reserved.\"))))}}]),t}(n.Component),we=(a(472),function(e){function t(){return Object(o.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(h.c,{history:d},r.a.createElement(h.d,null,r.a.createElement(h.b,{path:\"/login\",exact:!0,component:L}),r.a.createElement(h.b,{path:\"/register\",exact:!0,component:L}),r.a.createElement(h.b,{path:\"/login/forgot\",exact:!0,component:L}),r.a.createElement(g,{path:\"/\",exact:!0,component:je}),r.a.createElement(g,{path:\"/main\",exact:!0,component:je}),r.a.createElement(g,{path:\"/home/:userID\",exact:!0,component:je}))))}}]),t}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(we,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},99:function(e,t,a){}},[[231,1,2]]]);","extractedComments":[]}