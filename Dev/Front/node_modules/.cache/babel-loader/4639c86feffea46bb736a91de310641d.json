{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Article.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Avatar, Icon, Row, Col, Button, Popconfirm, message } from 'antd';\nimport FbImageLibrary from 'react-fb-image-grid';\nimport CommentModal from './CommentModal';\nimport { history } from '../History';\nimport { getToken, getUser } from '../authentication';\nimport { serverUrl } from '../setting';\nimport './Article.css';\n\nclass Article extends Component {\n  constructor(props) {\n    super(props); //liked를 \"true\" or \"false\"로 받음\n\n    this.state = {};\n\n    this.likeClick = () => {\n      fetch(serverUrl + \"liked/\" + this.state.articleID + \"/\" + getUser().userID, {\n        method: 'PUT',\n        headers: {\n          'token': getToken()\n        }\n      });\n\n      if (this.state.liked === \"true\") {\n        //좋아요 취소\n        this.setState({\n          like: this.state.like - 1,\n          liked: \"false\"\n        });\n      } else {\n        //좋아요\n        this.setState({\n          like: this.state.like + 1,\n          liked: \"true\"\n        });\n      }\n    };\n\n    this.getPhoto = photoArr => {\n      if (photoArr === null || photoArr === [] || photoArr == \"\") {\n        return null;\n      }\n\n      let result = [];\n      photoArr.map(photo => result.push(serverUrl + 'photo/download?filename=' + photo));\n      return React.createElement(FbImageLibrary, {\n        images: result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    };\n\n    this.getOnePhoto = (fileName, username) => {\n      if (fileName === \"\" || fileName === null) return React.createElement(Avatar, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, username);else return React.createElement(Avatar, {\n        size: \"large\",\n        src: serverUrl + 'photo/download?filename=' + fileName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    };\n\n    this.getDate = timestamp => {\n      var date = new Date(timestamp);\n      return date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes();\n    };\n\n    this.confirm = e => {\n      fetch(serverUrl + \"article/\" + this.state.articleID + \"/\" + getUser().userID, {\n        method: 'DELETE',\n        headers: {\n          'token': getToken()\n        }\n      }).then(response => {\n        if (response.status === 200) {\n          message.success(\"소식이 삭제 되었습니다.\");\n          this.props.deleteArticle(this.props.article);\n        } else {//오류 처리\n        }\n      });\n    };\n\n    this.cancel = e => {\n      console.log(e);\n    };\n\n    this.deleteButton = (userID, articleUserID) => {\n      if (userID === articleUserID) {\n        return React.createElement(Popconfirm, {\n          title: \"\\uC774 \\uC18C\\uC2DD\\uC744 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\",\n          onConfirm: this.confirm,\n          onCancel: this.cancel,\n          okText: \"Yes\",\n          cancelText: \"No\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"default\",\n          shape: \"circle\",\n          size: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"X\"));\n      } else {\n        return null;\n      }\n    };\n\n    this.clickName = () => {\n      history.push('/home/' + this.state.articleUserID);\n    };\n\n    this.state = {\n      articleUserID: this.props.article.userID,\n      articleUsername: this.props.article.username,\n      articleUserprofile: this.props.article.profile,\n      articleID: this.props.article.articleID,\n      content: this.props.article.content.split('<br>').map((line, i) => {\n        return React.createElement(\"span\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, line, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }));\n      }),\n      //줄바꾸기 변환 : 글 입력할 때 db에는 \\n을 <br>로 바꾸어 저장 한 다음에 이걸 다시 줄바꿈 해서 출력해줘야 하므로\n      like: this.props.article.like,\n      liked: this.props.article.liked,\n      // \"true\" 혹은 \"false\"의 문자열로 받아옴\n      photo: this.props.article.photo,\n      createdtime: this.props.article.createdtime\n    };\n  } //좋아요 클릭했을 때 : 취소 혹은 좋아요\n\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.getOnePhoto(this.state.articleUserprofile, this.state.articleUsername)), React.createElement(\"div\", {\n      className: \"inline title marginLeftRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"#\",\n      onClick: this.clickName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.state.articleUsername))), React.createElement(\"div\", {\n      className: \"inline rightAlign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.deleteButton(getUser().userID, this.state.articleUserID))), React.createElement(\"div\", {\n      className: \"marginTopBottom date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.getDate(this.state.createdtime)), React.createElement(\"div\", {\n      className: \"marginTopBottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.content)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.getPhoto(this.state.photo)), React.createElement(\"div\", {\n      className: \"marginTopBottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"like\",\n      theme: \"twoTone\",\n      twoToneColor: \"#eb2f96\",\n      width: \"200px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"marginLeftRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.like)), React.createElement(\"div\", {\n      className: \"marginTopBottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: this.state.liked === \"true\" ? \"primary\" : \"default\",\n      icon: \"like\",\n      onClick: this.likeClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"\\uC88B\\uC544\\uC694\"))), React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(CommentModal, {\n      articleID: this.state.articleID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Article;","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Article.js"],"names":["React","Component","Link","Avatar","Icon","Row","Col","Button","Popconfirm","message","FbImageLibrary","CommentModal","history","getToken","getUser","serverUrl","Article","constructor","props","state","likeClick","fetch","articleID","userID","method","headers","liked","setState","like","getPhoto","photoArr","result","map","photo","push","getOnePhoto","fileName","username","getDate","timestamp","date","Date","getFullYear","getMonth","getHours","getMinutes","confirm","e","then","response","status","success","deleteArticle","article","cancel","console","log","deleteButton","articleUserID","clickName","articleUsername","articleUserprofile","profile","content","split","line","i","createdtime","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,MAAjC,EAAyCC,UAAzC,EAAqDC,OAArD,QAAoE,MAApE;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,mBAAlC;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAO,eAAP;;AAEA,MAAMC,OAAN,SAAsBf,SAAtB,CAAgC;AAK5BgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AAHe,SAHnBC,KAGmB,GAHX,EAGW;;AAAA,SAoBnBC,SApBmB,GAoBP,MAAM;AACdC,MAAAA,KAAK,CAAEN,SAAS,GAAG,QAAZ,GAAuB,KAAKI,KAAL,CAAWG,SAAlC,GAA8C,GAA9C,GAAoDR,OAAO,GAAGS,MAAhE,EAAwE;AACzEC,QAAAA,MAAM,EAAE,KADiE;AAEzEC,QAAAA,OAAO,EAAE;AACL,mBAASZ,QAAQ;AADZ;AAFgE,OAAxE,CAAL;;AAMA,UAAI,KAAKM,KAAL,CAAWO,KAAX,KAAqB,MAAzB,EAAiC;AAC7B;AACA,aAAKC,QAAL,CAAc;AACVC,UAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWS,IAAX,GAAkB,CADd;AAEVF,UAAAA,KAAK,EAAE;AAFG,SAAd;AAIH,OAND,MAMO;AACH;AACA,aAAKC,QAAL,CAAc;AACVC,UAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWS,IAAX,GAAkB,CADd;AAEVF,UAAAA,KAAK,EAAE;AAFG,SAAd;AAIH;AACJ,KAxCkB;;AAAA,SA2CnBG,QA3CmB,GA2CPC,QAAD,IAAc;AACrB,UAAIA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,EAAlC,IAAwCA,QAAQ,IAAI,EAAxD,EAA4D;AACxD,eAAO,IAAP;AACH;;AACD,UAAIC,MAAM,GAAG,EAAb;AACAD,MAAAA,QAAQ,CAACE,GAAT,CAAaC,KAAK,IAAIF,MAAM,CAACG,IAAP,CAAYnB,SAAS,GAAG,0BAAZ,GAAyCkB,KAArD,CAAtB;AACA,aAAQ,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAEF,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH,KAlDkB;;AAAA,SAqDnBI,WArDmB,GAqDL,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClC,UAAID,QAAQ,KAAK,EAAb,IAAmBA,QAAQ,KAAK,IAApC,EACI,OAAO,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBC,QAAtB,CAAP,CADJ,KAGI,OAAO,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,GAAG,EAAEtB,SAAS,GAAG,0BAAZ,GAAyCqB,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACP,KA1DkB;;AAAA,SA6DnBE,OA7DmB,GA6DRC,SAAD,IAAe;AACrB,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAT,CAAX;AACA,aAAOC,IAAI,CAACE,WAAL,KAAqB,GAArB,IAA4BF,IAAI,CAACG,QAAL,KAAgB,CAA5C,IAAiD,GAAjD,GAAuDH,IAAI,CAACF,OAAL,EAAvD,GAAwE,GAAxE,GAA8EE,IAAI,CAACI,QAAL,EAA9E,GAAgG,GAAhG,GAAsGJ,IAAI,CAACK,UAAL,EAA7G;AACH,KAhEkB;;AAAA,SAmEnBC,OAnEmB,GAmERC,CAAD,IAAO;AACb1B,MAAAA,KAAK,CAACN,SAAS,GAAG,UAAZ,GAAyB,KAAKI,KAAL,CAAWG,SAApC,GAAgD,GAAhD,GAAsDR,OAAO,GAAGS,MAAjE,EAAyE;AAC1EC,QAAAA,MAAM,EAAE,QADkE;AAE1EC,QAAAA,OAAO,EAAE;AACL,mBAASZ,QAAQ;AADZ;AAFiE,OAAzE,CAAL,CAMKmC,IANL,CAMUC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBzC,UAAAA,OAAO,CAAC0C,OAAR,CAAgB,eAAhB;AACA,eAAKjC,KAAL,CAAWkC,aAAX,CAAyB,KAAKlC,KAAL,CAAWmC,OAApC;AACH,SAHD,MAGO,CACH;AACH;AACJ,OAbL;AAcH,KAlFkB;;AAAA,SAqFnBC,MArFmB,GAqFTP,CAAD,IAAO;AACZQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,CAAZ;AACH,KAvFkB;;AAAA,SA0FnBU,YA1FmB,GA0FJ,CAAClC,MAAD,EAASmC,aAAT,KAA2B;AACtC,UAAInC,MAAM,KAAKmC,aAAf,EAA8B;AAC1B,eACI,oBAAC,UAAD;AACI,UAAA,KAAK,EAAC,6EADV;AAEI,UAAA,SAAS,EAAE,KAAKZ,OAFpB;AAGI,UAAA,QAAQ,EAAE,KAAKQ,MAHnB;AAII,UAAA,MAAM,EAAC,KAJX;AAKI,UAAA,UAAU,EAAC,IALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOI,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,KAAK,EAAC,QAA7B;AAAsC,UAAA,IAAI,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPJ,CADJ;AAWH,OAZD,MAYO;AACH,eAAO,IAAP;AACH;AACJ,KA1GkB;;AAAA,SA6GnBK,SA7GmB,GA6GP,MAAM;AACd/C,MAAAA,OAAO,CAACsB,IAAR,CAAa,WAAW,KAAKf,KAAL,CAAWuC,aAAnC;AACH,KA/GkB;;AAIf,SAAKvC,KAAL,GAAa;AACTuC,MAAAA,aAAa,EAAE,KAAKxC,KAAL,CAAWmC,OAAX,CAAmB9B,MADzB;AAETqC,MAAAA,eAAe,EAAE,KAAK1C,KAAL,CAAWmC,OAAX,CAAmBhB,QAF3B;AAGTwB,MAAAA,kBAAkB,EAAE,KAAK3C,KAAL,CAAWmC,OAAX,CAAmBS,OAH9B;AAITxC,MAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWmC,OAAX,CAAmB/B,SAJrB;AAKTyC,MAAAA,OAAO,EAAE,KAAK7C,KAAL,CAAWmC,OAAX,CAAmBU,OAAnB,CAA2BC,KAA3B,CAAiC,MAAjC,EAAyChC,GAAzC,CAA6C,CAACiC,IAAD,EAAOC,CAAP,KAAa;AAC/D,eAAQ;AAAM,UAAA,GAAG,EAAEA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeD,IAAf,EAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApB,CAAR;AACH,OAFQ,CALA;AAOL;AACJrC,MAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWmC,OAAX,CAAmBzB,IARhB;AASTF,MAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWmC,OAAX,CAAmB3B,KATjB;AASwB;AACjCO,MAAAA,KAAK,EAAE,KAAKf,KAAL,CAAWmC,OAAX,CAAmBpB,KAVjB;AAWTkC,MAAAA,WAAW,EAAE,KAAKjD,KAAL,CAAWmC,OAAX,CAAmBc;AAXvB,KAAb;AAaH,GAtB2B,CAwB5B;;;AA8FAC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjC,WAAL,CAAiB,KAAKhB,KAAL,CAAW0C,kBAA5B,EAAgD,KAAK1C,KAAL,CAAWyC,eAA3D,CADL,CAFJ,EAMI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,OAAO,EAAE,KAAKD,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKxC,KAAL,CAAWyC,eAAf,CAAvC,CADJ,CANJ,EAUI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,YAAL,CAAkB3C,OAAO,GAAGS,MAA5B,EAAoC,KAAKJ,KAAL,CAAWuC,aAA/C,CADL,CAVJ,CAFJ,EAkBI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKpB,OAAL,CAAa,KAAKnB,KAAL,CAAWgD,WAAxB,CADL,CAlBJ,EAuBI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKhD,KAAL,CAAW4C,OAAf,CADJ,CAvBJ,EA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlC,QAAL,CAAc,KAAKV,KAAL,CAAWc,KAAzB,CADL,CA5BJ,EAiCI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAC,SAAxB;AAAkC,MAAA,YAAY,EAAC,SAA/C;AAAyD,MAAA,KAAK,EAAC,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKd,KAAL,CAAWS,IAA9C,CAFJ,CAjCJ,EAuCI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWO,KAAX,KAAqB,MAArB,GAA8B,SAA9B,GAA0C,SAAxD;AAAmE,MAAA,IAAI,EAAC,MAAxE;AAA+E,MAAA,OAAO,EAAE,KAAKN,SAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAR,CADJ,CADJ,EAII,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWG,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CADJ,CAJJ,CADJ,CAvCJ,CADJ;AAqDH;;AA7K2B;;AAgLhC,eAAeN,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Avatar, Icon, Row, Col, Button, Popconfirm, message } from 'antd';\nimport FbImageLibrary from 'react-fb-image-grid'\n\nimport CommentModal from './CommentModal';\nimport { history } from '../History';\nimport { getToken, getUser } from '../authentication';\nimport { serverUrl } from '../setting'\n\nimport './Article.css';\n\nclass Article extends Component {\n\n    state = {\n    };\n\n    constructor(props) {\n        super(props)\n\n        //liked를 \"true\" or \"false\"로 받음\n        this.state = {\n            articleUserID: this.props.article.userID,\n            articleUsername: this.props.article.username,\n            articleUserprofile: this.props.article.profile,\n            articleID: this.props.article.articleID,\n            content: this.props.article.content.split('<br>').map((line, i) => {\n                return (<span key={i}>{line}<br /></span>);\n            }), //줄바꾸기 변환 : 글 입력할 때 db에는 \\n을 <br>로 바꾸어 저장 한 다음에 이걸 다시 줄바꿈 해서 출력해줘야 하므로\n            like: this.props.article.like,\n            liked: this.props.article.liked, // \"true\" 혹은 \"false\"의 문자열로 받아옴\n            photo: this.props.article.photo,\n            createdtime: this.props.article.createdtime\n        };\n    }\n\n    //좋아요 클릭했을 때 : 취소 혹은 좋아요\n    likeClick = () => {\n        fetch( serverUrl + \"liked/\" + this.state.articleID + \"/\" + getUser().userID, {\n            method: 'PUT',\n            headers: {\n                'token': getToken()\n            }\n        })\n        if (this.state.liked === \"true\") {\n            //좋아요 취소\n            this.setState({\n                like: this.state.like - 1,\n                liked: \"false\"\n            })\n        } else {\n            //좋아요\n            this.setState({\n                like: this.state.like + 1,\n                liked: \"true\"\n            })\n        }\n    }\n\n    //소식에 등록되어 있는 여러개의 사진 받아와서 FbImageLibrary로 출력\n    getPhoto = (photoArr) => {\n        if (photoArr === null || photoArr === [] || photoArr == \"\") {\n            return null;\n        }\n        let result = []\n        photoArr.map(photo => result.push(serverUrl + 'photo/download?filename=' + photo))\n        return (<FbImageLibrary images={result} />);\n    }\n\n    //프로필 사진을 받아오기\n    getOnePhoto = (fileName, username) => {\n        if (fileName === \"\" || fileName === null)\n            return <Avatar size='large'>{username}</Avatar>\n        else\n            return <Avatar size='large' src={serverUrl + 'photo/download?filename=' + fileName} />\n    }\n\n    //날짜를 형식에 맞춰서 문자열로 리턴\n    getDate = (timestamp) => {\n        var date = new Date(timestamp);\n        return date.getFullYear() + '/' + (date.getMonth()+1) + '/' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes();\n    }\n\n    //글 삭제\n    confirm = (e) => {\n        fetch(serverUrl + \"article/\" + this.state.articleID + \"/\" + getUser().userID, {\n            method: 'DELETE',\n            headers: {\n                'token': getToken()\n            }\n        })\n            .then(response => {\n                if (response.status === 200) {\n                    message.success(\"소식이 삭제 되었습니다.\")\n                    this.props.deleteArticle(this.props.article)\n                } else {\n                    //오류 처리\n                }\n            })\n    }\n    \n    //글 삭제 안함\n    cancel = (e) => {\n        console.log(e);\n    }\n\n    //소식 삭제 버튼\n    deleteButton = (userID, articleUserID) => {\n        if (userID === articleUserID) {\n            return (\n                <Popconfirm\n                    title=\"이 소식을 삭제하시겠습니까?\"\n                    onConfirm={this.confirm}\n                    onCancel={this.cancel}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                >\n                    <Button type='default' shape='circle' size='small'>X</Button>\n                </Popconfirm>\n            )\n        } else {\n            return null\n        }\n    }\n\n    //이름클릭했을 때 : 소식 모아보기로 이동\n    clickName = () => {\n        history.push('/home/' + this.state.articleUserID)\n    }\n\n    render() {\n\n        return (\n            <div id='box'>\n                {/* 타이틀 */}\n                <div>\n                    {/* 사진 */}\n                    <div className='inline' >\n                        {this.getOnePhoto(this.state.articleUserprofile, this.state.articleUsername)}\n                    </div>\n                    {/* 제목 */}\n                    <div className='inline title marginLeftRight'>\n                        <Link to='#' onClick={this.clickName} ><b>{this.state.articleUsername}</b></Link>\n                    </div>\n                    {/* 삭제표시 */}\n                    <div className='inline rightAlign'>\n                        {this.deleteButton(getUser().userID, this.state.articleUserID)}\n                    </div>\n                </div>\n\n                {/* 날짜 */}\n                <div className='marginTopBottom date'>\n                    {this.getDate(this.state.createdtime)}\n                </div>\n\n                {/* 본문 */}\n                <div className='marginTopBottom'>\n                    <b>{this.state.content}</b>\n                </div>\n\n                {/* 사진 */}\n                <div>\n                    {this.getPhoto(this.state.photo)}\n                </div>\n\n                {/* 좋아요 카운트*/}\n                <div className='marginTopBottom'>\n                    <Icon type=\"like\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" width='200px' />\n                    <span className='marginLeftRight'>{this.state.like}</span>\n                </div>\n\n                {/* 좋아요 버튼 및 댓글 버튼 */}\n                <div className='marginTopBottom'>\n                    <Row>\n                        <Col span={12}>\n                            <center><Button type={this.state.liked === \"true\" ? \"primary\" : \"default\"} icon=\"like\" onClick={this.likeClick}>좋아요</Button></center>\n                        </Col>\n                        <Col span={12}>\n                            <center><CommentModal articleID={this.state.articleID} /></center>\n                        </Col>\n                    </Row>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Article;"]},"metadata":{},"sourceType":"module"}