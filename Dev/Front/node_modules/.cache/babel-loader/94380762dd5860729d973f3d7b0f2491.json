{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Comment.js\";\nimport React, { Component } from 'react';\nimport { List, Avatar } from 'antd';\nimport CommentDeleteButton from './CommentDeleteButton';\nimport { serverUrl } from '../setting';\nimport './Comment.css';\n\nclass Comment extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getDate = timestamp => {\n      var date = new Date(timestamp);\n      return date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes();\n    };\n\n    this.getOnePhoto = (fileName, username) => {\n      if (fileName === \"\" || fileName == null) return React.createElement(Avatar, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, username);else return React.createElement(Avatar, {\n        size: \"large\",\n        src: serverUrl + '/photo/download?filename=' + fileName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    };\n  }\n\n  //스크롤을 댓글 제일 아래로 유지하기 위해 (최신 댓글이 제일 아래 위치하므로)\n  scrollToBottom() {\n    const scrollHeight = this.messageList.scrollHeight;\n    const height = this.messageList.clientHeight;\n    const maxScrollTop = scrollHeight - height;\n    this.messageList.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n  } //스크롤 제일 아래로\n\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n  } //날짜를 형식에 맞춰서 문자열로 리턴\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"list\",\n      ref: div => {\n        this.messageList = div;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: this.props.comments,\n      renderItem: item => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        avatar: this.getOnePhoto(item.profile, item.username),\n        title: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, item.username), React.createElement(\"span\", {\n          id: \"date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, this.getDate(item.createdtime)), React.createElement(\"span\", {\n          className: \"rightAlign\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(CommentDeleteButton, {\n          deleteComment: this.props.deleteComment,\n          commentUserID: item.userID,\n          commentID: item.commentID,\n          comment: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }))),\n        description: item.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Comment;","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Comment.js"],"names":["React","Component","List","Avatar","CommentDeleteButton","serverUrl","Comment","getDate","timestamp","date","Date","getFullYear","getMonth","getHours","getMinutes","getOnePhoto","fileName","username","scrollToBottom","scrollHeight","messageList","height","clientHeight","maxScrollTop","scrollTop","componentDidUpdate","componentDidMount","render","div","props","comments","item","profile","createdtime","deleteComment","userID","commentID","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { List, Avatar} from 'antd'\n\nimport CommentDeleteButton from './CommentDeleteButton';\nimport { serverUrl } from '../setting'\n\nimport './Comment.css'\n\nclass Comment extends Component {\n\n    //스크롤을 댓글 제일 아래로 유지하기 위해 (최신 댓글이 제일 아래 위치하므로)\n    scrollToBottom() {\n        const scrollHeight = this.messageList.scrollHeight;\n        const height = this.messageList.clientHeight;\n        const maxScrollTop = scrollHeight - height;\n        this.messageList.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n\n    //스크롤 제일 아래로\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n    componentDidMount() {\n        this.scrollToBottom();\n    }\n\n    //날짜를 형식에 맞춰서 문자열로 리턴\n    getDate = (timestamp) => {\n        var date = new Date(timestamp);\n        return date.getFullYear() + '/' + (date.getMonth()+1) + '/' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes();\n    }\n\n    //프로필 사진을 얻기 위해\n    getOnePhoto = (fileName, username) => {\n        if (fileName === \"\" || fileName == null)\n            return <Avatar size='large'>{username}</Avatar>\n        else\n            return <Avatar size='large' src={serverUrl + '/photo/download?filename=' + fileName} />\n    }\n\n    render() {\n        return (\n            <div className='list'\n                ref={(div) => {\n                    this.messageList = div;\n                }}\n            >\n\n                {/* 리스트의 개별 원소들을 출력 */}\n                <List\n                    itemLayout=\"horizontal\"\n                    dataSource={this.props.comments}\n                    renderItem={item => (\n                        <List.Item>\n                            <List.Item.Meta\n                                avatar={this.getOnePhoto(item.profile, item.username)}\n                                title={\n                                    <span>\n                                        <b>{item.username}</b>\n                                        <span id=\"date\">\n                                            {this.getDate(item.createdtime)}\n                                        </span>\n                                        <span className='rightAlign'>\n                                            <CommentDeleteButton \n                                                deleteComment={this.props.deleteComment}\n                                                commentUserID={item.userID}\n                                                commentID={item.commentID}\n                                                comment={item}\n                                                />\n                                        </span>\n                                    </span>\n                                }\n                                description={item.content}\n                            />\n                        </List.Item>\n                    )}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Comment;"]},"metadata":{},"sourceType":"module"}