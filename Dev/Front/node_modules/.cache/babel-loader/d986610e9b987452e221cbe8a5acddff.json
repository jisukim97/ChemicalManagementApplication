{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBB38\\uD601\\uC8FC\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\src\\\\components\\\\ChemicalInfo.js\";\nimport React, { Component } from 'react'; //약품 정보 중에서 약품 특성에 대한 박스\n\nclass ChemicalInfo extends Component {\n  constructor(props) {\n    super(props); // this.props.chemical.stockId에 해당되는거 백엔드에서 읽어와서 저장해주기\n\n    this.state = {\n      information: [{\n        name: \"벤젠\",\n        casNo: \"71-43-2\",\n        formula: \"C8H6\",\n        mw: 78.11,\n        mp: 5.5,\n        bp: 80.1\n      }, {\n        name: \"염산\",\n        casNo: \"7647-01-0\",\n        formula: \"HCl\",\n        mw: 36.46,\n        mp: -27.32,\n        bp: 110\n      }]\n    };\n    this.state = {\n      information: {\n        name: \"벤젠\",\n        casNo: \"71-43-2\",\n        formula: \"C8H6\",\n        mw: 78.11,\n        mp: 5.5,\n        bp: 80.1\n      }\n    };\n  }\n\n  render() {\n    const list = this.state.information(information => React.createElement(this, {\n      key: information.name,\n      information: information,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.name), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), \"cas No : \", this.state.information.casNo, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \"formula : \", this.state.formula, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), \"MW : \", this.state.mw, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), \"mp/bp : \", this.state.mp, \"/\", this.state.bp, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChemicalInfo;","map":{"version":3,"sources":["C:\\Users\\문혁주\\ChemicalManagementApplication\\Dev\\Front\\src\\components\\ChemicalInfo.js"],"names":["React","Component","ChemicalInfo","constructor","props","state","information","name","casNo","formula","mw","mp","bp","render","list","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAuBjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AAFe,SArBnBC,KAqBmB,GArBX;AACJC,MAAAA,WAAW,EAAE,CACT;AACIC,QAAAA,IAAI,EAAE,IADV;AAEIC,QAAAA,KAAK,EAAE,SAFX;AAGIC,QAAAA,OAAO,EAAE,MAHb;AAIIC,QAAAA,EAAE,EAAE,KAJR;AAKIC,QAAAA,EAAE,EAAE,GALR;AAMIC,QAAAA,EAAE,EAAE;AANR,OADS,EAST;AACIL,QAAAA,IAAI,EAAE,IADV;AAEIC,QAAAA,KAAK,EAAE,WAFX;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,EAAE,EAAE,KAJR;AAKIC,QAAAA,EAAE,EAAE,CAAC,KALT;AAMIC,QAAAA,EAAE,EAAE;AANR,OATS;AADT,KAqBW;AAGf,SAAKP,KAAL,GAAa;AACTC,MAAAA,WAAW,EACP;AACIC,QAAAA,IAAI,EAAE,IADV;AAEIC,QAAAA,KAAK,EAAE,SAFX;AAGIC,QAAAA,OAAO,EAAE,MAHb;AAIIC,QAAAA,EAAE,EAAE,KAJR;AAKIC,QAAAA,EAAE,EAAE,GALR;AAMIC,QAAAA,EAAE,EAAE;AANR;AAFK,KAAb;AAYH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKT,KAAL,CAAWC,WAAX,CACTA,WAAW,IAAK;AAAM,MAAA,GAAG,EAAEA,WAAW,CAACC,IAAvB;AAA6B,MAAA,WAAW,EAAED,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADP,CAAb;AAIA,WACI;AAAK,MAAA,KAAK,EAAE;AAAES,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKV,KAAL,CAAWE,IAAf,CADJ,OAC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7B,eAEc,KAAKF,KAAL,CAAWC,WAAX,CAAuBE,KAFrC,OAE4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF5C,gBAGe,KAAKH,KAAL,CAAWI,OAH1B,OAGmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHnC,WAIU,KAAKJ,KAAL,CAAWK,EAJrB,OAIyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJzB,cAKa,KAAKL,KAAL,CAAWM,EALxB,OAK6B,KAAKN,KAAL,CAAWO,EALxC,OAK4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAL5C,CADJ;AASH;;AAtDgC;;AAyDrC,eAAeV,YAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n//약품 정보 중에서 약품 특성에 대한 박스\r\nclass ChemicalInfo extends Component {\r\n\r\n    state = {\r\n        information: [\r\n            {\r\n                name: \"벤젠\",\r\n                casNo: \"71-43-2\",\r\n                formula: \"C8H6\",\r\n                mw: 78.11,\r\n                mp: 5.5,\r\n                bp: 80.1\r\n            }, \r\n            {\r\n                name: \"염산\",\r\n                casNo: \"7647-01-0\",\r\n                formula: \"HCl\",\r\n                mw: 36.46,\r\n                mp: -27.32,\r\n                bp: 110\r\n            }\r\n        ]\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.props.chemical.stockId에 해당되는거 백엔드에서 읽어와서 저장해주기\r\n        this.state = {\r\n            information: \r\n                {\r\n                    name: \"벤젠\",\r\n                    casNo: \"71-43-2\",\r\n                    formula: \"C8H6\",\r\n                    mw: 78.11,\r\n                    mp: 5.5,\r\n                    bp: 80.1\r\n                }\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const list = this.state.information(\r\n            information => (<this key={information.name} information={information}/>)\r\n          );\r\n\r\n        return (\r\n            <div style={{ margin: 10 }}>\r\n                <b>{this.state.name}</b> <br />\r\n                cas No : {this.state.information.casNo} <br />\r\n                formula : {this.state.formula} <br />\r\n                MW : {this.state.mw} <br />\r\n                mp/bp : {this.state.mp}/{this.state.bp} <br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChemicalInfo;"]},"metadata":{},"sourceType":"module"}