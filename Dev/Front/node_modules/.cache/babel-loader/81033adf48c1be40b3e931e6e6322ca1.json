{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD55C\\uBE48\\\\Desktop\\\\\\uC735\\uC885\\uC124\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\src\\\\components\\\\Add.js\";\nimport React, { Component } from 'react';\nimport { Input, Select, message } from 'antd';\nimport { serverUrl } from '../setting';\nimport { getUser } from '../authentication';\nimport { history } from '../History';\nimport './Box.css';\nconst Search = Input.Search;\nconst Option = Select.Option;\n\nclass Add extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visibleChemicalName: true,\n      visiblePlaceSelect: false,\n      chemicalName: \"\",\n      place: \"\",\n      placeList: []\n    };\n\n    this.chemicalNameForm = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Search, {\n        placeholder: \"\\uC57D\\uD488 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        enterButton: \"\\uAC80\\uC0C9\",\n        size: \"large\",\n        onSearch: value => {\n          fetch(serverUrl + '/chemical/request', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(response => {\n            const result = response.status;\n\n            if (result === 200) {\n              //성공하였을 경우 : 리스트에 저장\n              response.json().then(response => {\n                console.log(response);\n                this.setState({\n                  placeList: response\n                });\n                this.setState({\n                  visiblePlaceSelect: true,\n                  chemicalName: value\n                });\n              });\n            } else {//내부 오류\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    };\n\n    this.getPlaceSuggest = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Select, {\n        defaultValue: \"\\uCD94\\uCC9C\\uB41C \\uC7A5\\uC18C \\uC911 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\",\n        style: {\n          width: 300\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: this.state.placeList[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.state.placeList[0]), React.createElement(Option, {\n        value: this.state.placeList[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.placeList[1]), React.createElement(Option, {\n        value: this.state.placeList[2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.placeList[2])));\n    };\n\n    this.handleChange = value => {\n      console.log(value);\n      console.log(getUser().id);\n      fetch(serverUrl + '/chemical/add/' + getUser().id, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.chemicalName,\n          place: value\n        })\n      }).then(response => {\n        const result = response.status;\n\n        if (result === 200) {\n          //성공하였을 경우 \n          message.success('성공적으로 추가되었습니다');\n          history.push('/main');\n        } else {//내부 오류\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" \", this.state.visibleChemicalName && this.chemicalNameForm(), \" \"), React.createElement(\"div\", {\n      className: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" \", this.state.visiblePlaceSelect && this.getPlaceSuggest(), \" \"));\n  }\n\n}\n\nexport default Add;","map":{"version":3,"sources":["C:\\Users\\한빈\\Desktop\\융종설\\ChemicalManagementApplication\\Dev\\Front\\src\\components\\Add.js"],"names":["React","Component","Input","Select","message","serverUrl","getUser","history","Search","Option","Add","state","visibleChemicalName","visiblePlaceSelect","chemicalName","place","placeList","chemicalNameForm","value","fetch","method","headers","then","response","result","status","json","console","log","setState","getPlaceSuggest","width","handleChange","id","body","JSON","stringify","name","success","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input, Select, message } from 'antd';\r\nimport { serverUrl } from '../setting'\r\nimport { getUser } from '../authentication';\r\n\r\nimport { history } from '../History';\r\n\r\nimport './Box.css'\r\n\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\n\r\nclass Add extends Component {\r\n\r\n    state = {\r\n        visibleChemicalName: true,\r\n        visiblePlaceSelect: false,\r\n        chemicalName :\"\",\r\n        place:\"\",\r\n        placeList : []\r\n    }\r\n\r\n    chemicalNameForm = () => {\r\n        return (\r\n            <div>\r\n                <Search\r\n                    placeholder=\"약품 이름을 입력해주세요\"\r\n                    enterButton=\"검색\"\r\n                    size=\"large\"\r\n                    onSearch={value => {\r\n                        fetch(serverUrl + '/chemical/request', {\r\n                            method: 'GET',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                        })\r\n                            .then(response => {\r\n                                const result = response.status;\r\n                                if (result === 200) {\r\n                                    //성공하였을 경우 : 리스트에 저장\r\n                                    response.json().then(response => {\r\n                                        console.log(response)\r\n                                        this.setState({placeList : response})\r\n                                        this.setState({visiblePlaceSelect : true, chemicalName : value})\r\n                                    })\r\n                                } else {\r\n                                    //내부 오류\r\n                                }\r\n                            })                \r\n                        }\r\n                    }\r\n                />    \r\n            </div>\r\n        )\r\n    }\r\n\r\n    getPlaceSuggest = () => {\r\n        return (\r\n            <div>\r\n                <Select defaultValue=\"추천된 장소 중 선택해주세요\" style={{ width: 300 }} onChange={this.handleChange}>\r\n                    <Option value={this.state.placeList[0]}>{this.state.placeList[0]}</Option>\r\n                    <Option value={this.state.placeList[1]}>{this.state.placeList[1]}</Option>\r\n                    <Option value={this.state.placeList[2]}>{this.state.placeList[2]}</Option>\r\n                </Select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChange = (value) => {\r\n        console.log(value)\r\n        console.log(getUser().id)\r\n        \r\n        fetch(serverUrl + '/chemical/add/' + getUser().id, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body : JSON.stringify({name : this.state.chemicalName, place : value})\r\n        })\r\n            .then(response => {\r\n                const result = response.status;\r\n                if (result === 200) {\r\n                    //성공하였을 경우 \r\n                    message.success('성공적으로 추가되었습니다');\r\n                    history.push('/main')\r\n                } else {\r\n                    //내부 오류\r\n                }\r\n            })                \r\n        }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id='box'>\r\n                <div className='middle'> {this.state.visibleChemicalName && this.chemicalNameForm()} </div>\r\n                <div className='middle'> {this.state.visiblePlaceSelect && this.getPlaceSuggest()} </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Add;"]},"metadata":{},"sourceType":"module"}