{"ast":null,"code":"var _jsxFileName = \"/Users/Jennifer/Documents/GitHub/ChemicalManagementApplication/Dev/Front/src/components/Chemical.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button } from 'antd';\nimport ChemicalInfo from './ChemicalInfo'; //화학 약품 하나에 대한 거 (my Lab 화면 중에)\n\nclass Chemical extends Component {\n  constructor(props) {\n    super(props); //props로 넘어온 stockId에 해당하는 stock의 정보를 불러와준다\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = e => {\n      //두번쩨걸 닫고 첫번째 창을 켠다\n      console.log(e);\n      this.setState({\n        visible: true,\n        visible2: false\n      });\n    };\n\n    this.handleCancel = e => {\n      //둘다 닫는다\n      console.log(e);\n      this.setState({\n        visible: false,\n        visible2: false\n      });\n    };\n\n    this.handleRemove = id => {\n      // 삭제 버튼이 클릭되면 MyLab에서 해당되는 stockId를 찾아 그것을 삭제한다.\n      alert(\"폐기하기를 누르셨습니다.\");\n      /*  const chemicals = MyLab.state;\n        if (MyLab.state.chemicals === id.chemicals) //내가 눌렀던 약품의 chemicals.StockId를 찾는다.\n            //slice 전후로 데이터를 복사하고, 우리가 찾는 index (누른 index)는 제외시킨다.\n            this.setState({\n                chemicals: [\n                    ...chemicals.slice(0, 4),\n                    ...chemicals.slice(4 + 1, chemicals.lenght)\n                ]\n            });\n        */\n    };\n\n    this.handleChoosePlace = () => {\n      this.setState({\n        visible: false,\n        visible2: true\n      });\n      alert(\"보관장소를 선택합니다.\");\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        volume: e.target.value\n      });\n    };\n\n    this.handleUpdate = e => {\n      alert(this.state.volume + \"만큼을 줄입니다.\");\n      console.log(this.state.volume);\n      this.setState({\n        volume: 3\n      });\n    };\n\n    let stockId = this.props.stockId; //여기서 백엔드에서 받아와서 이렇게 stock을 만들어 주면 됨\n\n    let stock = {\n      id: stockId,\n      nickname: \"닉네임\",\n      putDate: \"2019/10/31\",\n      expireDate: \"2019/10/31\",\n      volume: 100,\n      remainingVolume: 50,\n      chemical: {\n        pH: 7,\n        name: \"벤젠\",\n        casNo: \"71-43-2\",\n        formula: \"C8H6\",\n        mw: 78.11,\n        mp: 5.5,\n        bp: 80.1\n      }\n    };\n    this.state = {\n      visible: false,\n      visible2: false,\n      stock: stock\n    };\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Button, {\n      Button: true,\n      shape: \"circle\",\n      icon: \"fire\",\n      onClick: this.showModal,\n      style: {\n        fontSize: '25px'\n      },\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      title: \"\\uC57D\\uD488 \\uC815\\uBCF4\",\n      visible: this.state.visible,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(ChemicalInfo, {\n      chemical: this.state.stock.chemical,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"\\uC774 \\uC7AC\\uACE0\\uC5D0 \\uB300\\uD55C \\uC815\\uBCF4\"), \"\\uB123\\uC740\\uB0A0\\uC9DC : \", this.state.stock.putDate, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), \"\\uC720\\uD6A8\\uAE30\\uAC04 : \", this.state.stock.expireDate, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), \"\\uB0A8\\uC740\\uC6A9\\uB7C9 : \", this.state.stock.volume, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"\\uC0AC\\uC6A9\\uB7C9 \\uC5C5\\uB370\\uC774\\uD2B8 \\uD3FC\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleChoosePlace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"\\uC7A5\\uC18C \\uC218\\uC815\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      title: \"\\uC7A5\\uC18C \\uC218\\uC815\",\n      visible: this.state.visible2,\n      onOk: this.handleOk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"ok\\uB97C \\uB20C\\uB7EC\\uC11C \\uCC3D\\uC744 \\uB2EB\\uC73C\\uC138\\uC694\")), React.createElement(\"button\", {\n      onClick: this.handleRemove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"\\uD3D0\\uAE30 \\uD558\\uAE30\"))), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.stock.nickname));\n  }\n\n}\n\nexport default Chemical;","map":{"version":3,"sources":["/Users/Jennifer/Documents/GitHub/ChemicalManagementApplication/Dev/Front/src/components/Chemical.js"],"names":["React","Component","Modal","Button","ChemicalInfo","Chemical","constructor","props","showModal","setState","visible","handleOk","e","console","log","visible2","handleCancel","handleRemove","id","alert","handleChoosePlace","handleChange","volume","target","value","handleUpdate","state","stockId","stock","nickname","putDate","expireDate","remainingVolume","chemical","pH","name","casNo","formula","mw","mp","bp","render","fontSize","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button } from 'antd';\n\nimport ChemicalInfo from './ChemicalInfo';\n\n//화학 약품 하나에 대한 거 (my Lab 화면 중에)\nclass Chemical extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        //props로 넘어온 stockId에 해당하는 stock의 정보를 불러와준다\n        let stockId = this.props.stockId\n        //여기서 백엔드에서 받아와서 이렇게 stock을 만들어 주면 됨\n        let stock = {\n            id : stockId,\n            nickname : \"닉네임\",\n            putDate : \"2019/10/31\",\n            expireDate : \"2019/10/31\",\n            volume : 100,\n            remainingVolume: 50,\n            chemical: {\n                pH: 7,\n                name: \"벤젠\",\n                casNo: \"71-43-2\",\n                formula: \"C8H6\",\n                mw: 78.11,\n                mp: 5.5,\n                bp: 80.1\n            }\n        }\n        this.state = {\n            visible: false,\n            visible2: false,\n            stock : stock\n        }\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => { //두번쩨걸 닫고 첫번째 창을 켠다\n        console.log(e);\n        this.setState({\n            visible: true,\n            visible2: false,\n        });\n    };\n\n    handleCancel = e => { //둘다 닫는다\n        console.log(e);\n        this.setState({\n            visible: false,\n            visible2: false,\n        });\n    };\n\n\n\n    handleRemove = (id) => {\n        // 삭제 버튼이 클릭되면 MyLab에서 해당되는 stockId를 찾아 그것을 삭제한다.\n        alert(\"폐기하기를 누르셨습니다.\");\n        /*  const chemicals = MyLab.state;\n          if (MyLab.state.chemicals === id.chemicals) //내가 눌렀던 약품의 chemicals.StockId를 찾는다.\n              //slice 전후로 데이터를 복사하고, 우리가 찾는 index (누른 index)는 제외시킨다.\n              this.setState({\n                  chemicals: [\n                      ...chemicals.slice(0, 4),\n                      ...chemicals.slice(4 + 1, chemicals.lenght)\n                  ]\n              });\n          */\n    }\n\n\n    handleChoosePlace = () => {\n        this.setState({\n            visible: false,\n            visible2: true,\n        })\n        alert(\"보관장소를 선택합니다.\");\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            volume: e.target.value\n        })\n    }\n\n    handleUpdate = (e) => {\n        alert(this.state.volume + \"만큼을 줄입니다.\");\n        console.log(this.state.volume)\n        this.setState({\n         volume : 3\n        })\n    }\n\n    render() {\n\n        return (\n            <span>\n                <center>\n                    {/* 버튼 */}\n                    <Button Button shape=\"circle\" icon=\"fire\" onClick={this.showModal} style={{ fontSize: '25px' }} size=\"large\" />\n                    {/* 뜨는 창 */}\n                    <Modal\n                        title=\"약품 정보\"\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}\n                    >\n                        {/* 정보 출력  */}\n                        <ChemicalInfo chemical={this.state.stock.chemical} />\n\n                        <div style={{ margin: 10 }}>\n                            <h3>이 재고에 대한 정보</h3>\n                            넣은날짜 : {this.state.stock.putDate} <br />\n                            유효기간 : {this.state.stock.expireDate} <br />\n                            남은용량 : {this.state.stock.volume} <br/>\n                        </div>\n\n                        {/* 이부분 antd로 바꾸기 */}\n                        {/*\n                        <input\n                            type=\"text\"\n                            name=\"사용량\"\n                            placeholder=\"사용량을 적으세요\"\n                            value={this.state.volume} //이만큼이 까일 것이다.\n                            onChange={this.handleChange}>\n                        </input>\n                        <button onClick={this.handleUpdate}  >사용량 업데이트</button><br />\n                        */}\n                        <div>\n                            사용량 업데이트 폼\n                        </div>\n                        \n                        <span>\n                            <Button onClick={this.handleChoosePlace} >장소 수정</Button><br />\n                            <Modal title=\"장소 수정\"\n                                visible={this.state.visible2}\n                                onOk={this.handleOk}>\n                                ok를 눌러서 창을 닫으세요\n                            </Modal>\n                        </span>\n                        <button onClick={this.handleRemove}>폐기 하기</button>\n                    </Modal>\n                </center>\n                <center>\n                    {this.state.stock.nickname}\n                </center>\n            </span>\n        );\n    }\n}\n\nexport default Chemical;"]},"metadata":{},"sourceType":"module"}