{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\git\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\src\\\\components\\\\Apparatus.js\";\nimport React, { Component } from 'react';\nimport { Typography, Icon, Row, Col, Button, Modal, Divider, Table, Card, List, Input, Form, TimePicker, message } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport moment from 'moment';\nimport { getUser, getLab } from '../authentication';\nconst Title = Typography.Title;\n\nclass Apparatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.showModal_0 = () => {\n      console.log(this.state.visible_0);\n      this.setState({\n        visible_0: true\n      });\n    };\n\n    this.handleOk_0 = e => {\n      console.log(e);\n      this.handleRemove_2();\n      this.setState({\n        visible_0: false\n      });\n    };\n\n    this.handleCancel_0 = e => {\n      console.log(e);\n      this.setState({\n        visible_0: false\n      });\n    };\n\n    this.showModal_1 = () => {\n      console.log(this.state.visible_1);\n      this.setState({\n        visible_1: true\n      });\n    };\n\n    this.handleOk_1 = e => {\n      console.log(e);\n      this.setState({\n        visible_1: false\n      });\n    };\n\n    this.handleCancel_1 = e => {\n      console.log(e);\n      this.setState({\n        visible_1: false\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log(values);\n          fetch('http://13.124.122.246:8080/apparatus/' + this.state.menu, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(values) //여기에다가 body 넣어주기\n\n          }).then(response => {\n            if (response === 200) {\n              return response.json();\n            } else {// 오류 난 경우 처리 \n            }\n          }).then(response => {\n            this.setStatus({\n              apparatusList: response\n            });\n          });\n        }\n      });\n    };\n\n    this.showModal_2 = () => {\n      console.log(this.state.visible_2);\n      this.setState({\n        visible_2: true\n      });\n    };\n\n    this.handleOk_2 = e => {\n      console.log(e);\n      this.setState({\n        visible_2: false\n      });\n    };\n\n    this.handleCancel_2 = e => {\n      console.log(e);\n      this.setState({\n        visible_2: false\n      });\n    };\n\n    this.showModal_3 = () => {\n      console.log(this.state.visible_3);\n      this.setState({\n        visible_3: true\n      });\n    };\n\n    this.handleOk_3 = e => {\n      console.log(e);\n      this.handleRemove();\n      this.setState({\n        visible_3: false\n      });\n    };\n\n    this.handleCancel_3 = e => {\n      console.log(e);\n      this.setState({\n        visible_3: false\n      });\n    };\n\n    this.getUrl = id => {\n      const url = '/apparatus/' + id;\n      return url;\n    };\n\n    this.goToLeft = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      newday.setDate(newday.getDate() - 1);\n      var yy = newday.getFullYear();\n      yy += '';\n      yy = yy.substring(2, 4);\n      var mm = newday.getMonth();\n      var dd = newday.getDate();\n      var todayInfo = yy + mm + dd;\n      fetch('http://13.124.122.246:8080/schedule/apparatus/' + this.state.menu + '/' + todayInfo, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        } //안고쳐도 됨\n\n      }).then(response => {\n        if (response === 200) {\n          return response.json();\n        } else {// 오류 난 경우 처리 \n        }\n      }).then(response => {\n        this.setStatus({\n          todayDate: newday,\n          realReservationList: response\n        });\n      });\n    };\n\n    this.goToRight = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      newday.setDate(newday.getDate() + 1);\n      var yy = newday.getFullYear();\n      yy += '';\n      yy = yy.substring(2, 4);\n      var mm = newday.getMonth();\n      var dd = newday.getDate();\n      var todayInfo = yy + mm + dd;\n      fetch('http://13.124.122.246:8080/schedule/apparatus/' + this.state.menu + '/' + todayInfo, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        } //안고쳐도 됨\n\n      }).then(response => {\n        if (response === 200) {\n          return response.json();\n        } else {// 오류 난 경우 처리 \n        }\n      }).then(response => {\n        this.setStatus({\n          todayDate: newday,\n          realReservationList: response\n        });\n      });\n    };\n\n    this.makeMonth = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      return newday.getMonth() + 1;\n    };\n\n    this.makeDate = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      return newday.getDate();\n    };\n\n    this.getApparNameNow = () => {\n      var n = this.state.menu;\n      var newList = this.state.apparatusList.filter(one => one.id == n);\n\n      if (newList.length > 0) {\n        var m = newList[0].nickname;\n      } else {\n        var m = '';\n      } // 없어지는 순간의 오류를 막기 위한 else구문\n\n\n      return m;\n    };\n\n    this.handleRemove = () => {\n      var newList = [];\n      newList = this.state.reservationList;\n      var del = 0;\n\n      for (var i = 0; i < newList.length; i++) {\n        if (newList[i].user == getUser().id) {\n          //유저 네임은 로그인 정보 받아오는 걸로 바꾸기\n          del = i;\n          break;\n        }\n      }\n\n      newList.splice(del, 1);\n      this.setState({\n        reservationList: newList\n      }, () => {\n        this.setState({\n          realReservationList: this.getRealReservationList()\n        });\n      });\n    };\n\n    this.handleRemove_2 = () => {\n      var newList = [];\n      newList = this.state.apparatusList.filter(one => one.id != this.state.menu);\n      fetch('http://13.124.122.246:8080/apparatus/' + this.labId + '/' + this.state.menu, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        } //안고쳐도 됨\n\n      }).then(response => {\n        if (response === 200) {\n          return response.json();\n        } else {// 오류 난 경우 처리 \n        }\n      }).then(response => {\n        this.setStatus({\n          apparatusList: newList\n        });\n      });\n    };\n\n    this.checkMyReservation = () => {\n      var newList = [];\n      newList = this.state.realReservationList;\n      var present = false;\n\n      for (var i = 0; i < newList.length; i++) {\n        if (newList[i].user == 'Yeong mo') {\n          //login user정보 오면 넣기\n          present = true;\n          break;\n        }\n      }\n\n      return present;\n    };\n\n    this.checkReservtionDate = () => {\n      var nowMonth = this.getMonth();\n      var nowDate = this.getDate();\n      var isPast = false;\n\n      if (this.today.getMonth() >= nowMonth && this.today.getDate() > nowDate) {\n        isPast = true;\n      }\n\n      return isPast;\n    };\n\n    const apparatusId = this.props.match.params.apparatusId; //현재 랩 id로 기기 리스트 받아와서 변수에 저장하기 \n    //오늘 날짜 받아오기\n\n    var today = new Date();\n    this.state = {\n      menu: apparatusId,\n      todayDate: today,\n      realReservationList: [],\n      visible_0: false,\n      // '기기 삭제' 모달\n      visible_1: false,\n      //'기기등록하기' 모달\n      visible_2: false,\n      // '기기예약하기' 모달\n      visible_3: false,\n      // '본인 예약 삭제확인' 모달\n      visible_4: false,\n      // '예약 중복' 모달\n      visible_5: false,\n      // '예약 삭제 오류 - 지난 날짜 삭제 안됨' 모달 \n      format: 'HH:mm',\n      columns: [{\n        title: 'Time',\n        dataIndex: 'time',\n        key: 'time'\n      }, {\n        title: 'User',\n        dataIndex: 'user',\n        key: 'user'\n      }],\n      userId: getUser().id,\n      labId: getLab().id,\n      apparatusList: [{\n        id: 1,\n        nickname: \"apparatus1\"\n      }, {\n        id: 2,\n        nickname: \"apparatus2\"\n      }, {\n        id: 3,\n        nickname: \"apparatus3\"\n      }, {\n        id: 4,\n        nickname: \"apparatus4\"\n      }, {\n        id: 5,\n        nickname: \"apparatus5\"\n      }],\n      reservationList: [{\n        apparatusId: 1,\n        month: 11,\n        date: 24,\n        startTime: 8,\n        endTime: 11,\n        user: 'Yeong mo'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 24,\n        startTime: 8,\n        endTime: 10,\n        user: 'Joo young'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 24,\n        startTime: 13,\n        endTime: 16,\n        user: 'Yeong mo'\n      }, {\n        apparatusId: 1,\n        month: 11,\n        date: 24,\n        startTime: 11,\n        endTime: 13,\n        user: 'Eun mu'\n      }, {\n        apparatusId: 1,\n        month: 11,\n        date: 25,\n        startTime: 8,\n        endTime: 10,\n        user: 'Ji su'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 25,\n        startTime: 11,\n        endTime: 13,\n        user: 'Hyeok ju'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 25,\n        startTime: 14,\n        endTime: 17,\n        user: 'Han bin'\n      }, {\n        apparatusId: 1,\n        month: 11,\n        date: 25,\n        startTime: 16,\n        endTime: 18,\n        user: 'Yeong mo'\n      }, {\n        apparatusId: 1,\n        month: 11,\n        date: 26,\n        startTime: 9,\n        endTime: 13,\n        user: 'Ji su'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 26,\n        startTime: 9,\n        endTime: 10,\n        user: 'Joo young'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 26,\n        startTime: 10,\n        endTime: 11,\n        user: 'Hyeok ju'\n      }, {\n        apparatusId: 4,\n        month: 11,\n        date: 26,\n        startTime: 11,\n        endTime: 12,\n        user: 'Yeong mo'\n      }]\n    };\n  } //'기기 삭제'버튼에 대한 메소드\n\n\n  shouldComponentUpdate(props) {\n    return true;\n  } //현재 페이지 내에서 파라미터만 변경되었을 경우\n\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.match.params !== newProps.match.params) {\n      const apparatusId = this.props.match.params.apparatusId;\n      this.setState({\n        menu: apparatusId\n      }, () => {\n        //클릭한 기기 ID에 대해서 예약 리스트 받아와서 STATE에 저장 \n        this.setState({\n          realReservationList: []\n        });\n      });\n    }\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(Title, {\n      style: {\n        marginBottom: 35\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \"Apparatus\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 6,\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(List, {\n      grid: {\n        gutter: 16,\n        column: 1\n      },\n      dataSource: this.state.apparatusList,\n      renderItem: item => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: this.getUrl(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, item.nickname))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.showModal_1,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, \"\\uC608\\uC57D \\uD558\\uAE30\"), React.createElement(Modal, {\n      title: \"new Apparatus \\uB4F1\\uB85D \\uD558\\uAE30\",\n      visible: this.state.visible_1,\n      onOk: this.handleOk_1,\n      onCancel: this.handleCancel_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, \"\\uB4F1\\uB85D\\uD560 \\uAE30\\uAE30: \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, \"\\uB4F1\\uB85D\\uC790: \", getUser().id)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.showModal_0,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, \" \", \"\\uAE30\\uAE30 \\uC0AD\\uC81C\"), React.createElement(Modal, {\n      title: \"Apparatus \\uC0AD\\uC81C \\uD558\\uAE30\",\n      visible: this.state.visible_0,\n      onOk: this.handleOk_0,\n      onCancel: this.handleCancel_0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, \" ---------- \\uD574\\uB2F9 \\uAE30\\uAE30\\uB97C \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C? ---------\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, \"\\uC120\\uD0DD\\uD55C \\uAE30\\uAE30: \", this.getApparNameNow(), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, \"\\uB4F1\\uB85D\\uC790: Yeong mo \"), \" \")), React.createElement(Col, {\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(Row, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"link\",\n      onClick: this.goToLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    })), this.makeMonth(), \"\\uC6D4 \", this.makeDate(), \"\\uC77C\", React.createElement(Button, {\n      type: \"link\",\n      onClick: this.goToRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(Table, {\n      size: \"small\",\n      dataSource: this.state.realReservationList,\n      columns: this.state.columns,\n      scroll: {\n        y: 240\n      },\n      pagination: {\n        pageSize: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    })), React.createElement(Row, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.showModal_2,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, \"\\uC608\\uC57D \\uD558\\uAE30\"), React.createElement(Modal, {\n      title: \"my Apparatus \\uC608\\uC57D \\uD558\\uAE30\",\n      visible: this.state.visible_2,\n      onOk: this.handleOk_2,\n      onCancel: this.handleCancel_2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uD560 \\uAE30\\uAE30: \", this.getApparNameNow(), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uC790: Yeong mo\"), \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uD560 \\uC2DC\\uAC04: (\\uC608\\uC57D\\uC740 \\uD55C\\uC2DC\\uAC04 \\uB2E8\\uC704\\uB85C\\uB9CC \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4) \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }), \"from \", React.createElement(TimePicker, {\n      defaultValue: moment('12:00', this.state.format),\n      format: this.state.foramt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }), \" to \", React.createElement(TimePicker, {\n      defaultValue: moment('14:00', this.state.format),\n      format: this.state.foramt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      type: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }), this.checkMyReservation() && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.showModal_3,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, \"my\\uC608\\uC57D \\uC0AD\\uC81C\\uD558\\uAE30\"), React.createElement(Modal, {\n      title: \"my \\uC608\\uC57D \\uC0AD\\uC81C\\uD558\\uAE30\",\n      visible: this.state.visible_3,\n      onOk: this.handleOk_3,\n      onCancel: this.handleCancel_3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, \"   \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, \" ---- \\uC544\\uB798 \\uC815\\uBCF4\\uC758 \\uC608\\uC57D\\uC744 \\uC0AD\\uC81C \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C? ----\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, \"\\uC608\\uC57D \\uAE30\\uAE30: \", this.getApparNameNow(), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uC790: Yeong mo\"), \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, \"\\uC608\\uC57D \\uC2DC\\uAC04: \"))))))));\n  }\n\n}\n\nexport default Form.create()(Apparatus);","map":{"version":3,"sources":["C:\\Users\\user\\git\\ChemicalManagementApplication\\Dev\\Front\\src\\components\\Apparatus.js"],"names":["React","Component","Typography","Icon","Row","Col","Button","Modal","Divider","Table","Card","List","Input","Form","TimePicker","message","Link","moment","getUser","getLab","Title","Apparatus","constructor","props","state","showModal_0","console","log","visible_0","setState","handleOk_0","e","handleRemove_2","handleCancel_0","showModal_1","visible_1","handleOk_1","handleCancel_1","handleSubmit","preventDefault","form","validateFields","err","values","fetch","menu","method","headers","body","JSON","stringify","then","response","json","setStatus","apparatusList","showModal_2","visible_2","handleOk_2","handleCancel_2","showModal_3","visible_3","handleOk_3","handleRemove","handleCancel_3","getUrl","id","url","goToLeft","newday","Date","todayDate","setDate","getDate","yy","getFullYear","substring","mm","getMonth","dd","todayInfo","realReservationList","goToRight","makeMonth","makeDate","getApparNameNow","n","newList","filter","one","length","m","nickname","reservationList","del","i","user","splice","getRealReservationList","labId","checkMyReservation","present","checkReservtionDate","nowMonth","nowDate","isPast","today","apparatusId","match","params","visible_4","visible_5","format","columns","title","dataIndex","key","userId","month","date","startTime","endTime","shouldComponentUpdate","componentWillReceiveProps","newProps","render","getFieldDecorator","marginBottom","margin","gutter","column","item","y","pageSize","foramt","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,EAAqCC,MAArC,EAA6CC,KAA7C,EAAoDC,OAApD,EAA6DC,KAA7D,EAAmEC,IAAnE,EAAyEC,IAAzE,EAA+EC,KAA/E,EAAsFC,IAAtF,EAA4FC,UAA5F,EAAwGC,OAAxG,QAAsH,MAAtH;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;MAGQC,K,GAAUlB,U,CAAVkB,K;;AAER,MAAMC,SAAN,SAAwBpB,SAAxB,CAAkC;AAI9BqB,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAHlBC,KAGkB,GAHV,EAGU;;AAAA,SAyJlBC,WAzJkB,GAyJL,MAAK;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,SAAvB;AACA,WAAKC,QAAL,CAAc;AACVD,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA9JiB;;AAAA,SA+JlBE,UA/JkB,GA+JNC,CAAC,IAAG;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKC,cAAL;AACA,WAAKH,QAAL,CAAc;AACVD,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KArKiB;;AAAA,SAsKlBK,cAtKkB,GAsKFF,CAAC,IAAG;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVD,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA3KiB;;AAAA,SA6KlBM,WA7KkB,GA6KL,MAAK;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWW,SAAvB;AACA,WAAKN,QAAL,CAAc;AACVM,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAlLiB;;AAAA,SAmLlBC,UAnLkB,GAmLNL,CAAC,IAAG;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVM,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAxLiB;;AAAA,SAyLlBE,cAzLkB,GAyLFN,CAAC,IAAG;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVM,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA9LiB;;AAAA,SAiMlBG,YAjMkB,GAiMHP,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACQ,cAAF;AACA,WAAKhB,KAAL,CAAWiB,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAMC,MAAN,KAAgB;AAC3C,YAAI,CAACD,GAAL,EAAU;AACNhB,UAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAZ;AACAC,UAAAA,KAAK,CAAC,0CAAwC,KAAKpB,KAAL,CAAWqB,IAApD,EAA0D;AAC3DC,YAAAA,MAAM,EAAE,MADmD;AAE3DC,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB,aAFkD;AAG3DC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,MAAf,CAHqD,CAG9B;;AAH8B,WAA1D,CAAL,CAIGQ,IAJH,CAIQC,QAAQ,IAAI;AAChB,gBAAIA,QAAQ,KAAK,GAAjB,EAAsB;AAClB,qBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,aAFD,MAEO,CACH;AACH;AACJ,WAVD,EAUGF,IAVH,CAUQC,QAAQ,IAAI;AAChB,iBAAKE,SAAL,CAAe;AACXC,cAAAA,aAAa,EAAEH;AADJ,aAAf;AAGH,WAdD;AAeH;AACJ,OAnBD;AAoBH,KAvNiB;;AAAA,SA0NlBI,WA1NkB,GA0NL,MAAK;AACd9B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWiC,SAAvB;AACA,WAAK5B,QAAL,CAAc;AACV4B,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA/NiB;;AAAA,SAgOlBC,UAhOkB,GAgON3B,CAAC,IAAG;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACV4B,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KArOiB;;AAAA,SAsOlBE,cAtOkB,GAsOF5B,CAAC,IAAG;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACV4B,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA3OiB;;AAAA,SA6OlBG,WA7OkB,GA6OJ,MAAM;AAChBlC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWqC,SAAvB;AACA,WAAKhC,QAAL,CAAc;AACVgC,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAlPiB;;AAAA,SAmPlBC,UAnPkB,GAmPL/B,CAAC,IAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKgC,YAAL;AACA,WAAKlC,QAAL,CAAc;AACVgC,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAzPiB;;AAAA,SA0PlBG,cA1PkB,GA0PDjC,CAAC,IAAI;AAClBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVgC,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA/PiB;;AAAA,SAoRlBI,MApRkB,GAoRRC,EAAD,IAAQ;AACb,YAAMC,GAAG,GAAG,gBAAgBD,EAA5B;AACA,aAAQC,GAAR;AACH,KAvRiB;;AAAA,SA0RlBC,QA1RkB,GA0RP,MAAM;AACb,UAAIC,MAAM,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,MAAM,GAAG,KAAK7C,KAAL,CAAW+C,SAApB;AACAF,MAAAA,MAAM,CAACG,OAAP,CAAeH,MAAM,CAACI,OAAP,KAAiB,CAAhC;AACA,UAAIC,EAAE,GAAGL,MAAM,CAACM,WAAP,EAAT;AACAD,MAAAA,EAAE,IAAE,EAAJ;AACAA,MAAAA,EAAE,GAAGA,EAAE,CAACE,SAAH,CAAa,CAAb,EAAe,CAAf,CAAL;AACA,UAAIC,EAAE,GAAGR,MAAM,CAACS,QAAP,EAAT;AACA,UAAIC,EAAE,GAAGV,MAAM,CAACI,OAAP,EAAT;AACA,UAAIO,SAAS,GAAGN,EAAE,GAACG,EAAH,GAAME,EAAtB;AACAnC,MAAAA,KAAK,CAAC,mDAAiD,KAAKpB,KAAL,CAAWqB,IAA5D,GAAiE,GAAjE,GAAqEmC,SAAtE,EAAiF;AAClFlC,QAAAA,MAAM,EAAE,KAD0E;AAElFC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFyE,CAEjC;;AAFiC,OAAjF,CAAL,CAGGI,IAHH,CAGQC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,KAAK,GAAhB,EAAoB;AAChB,iBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,SAFD,MAEO,CACH;AACH;AACJ,OATD,EASGF,IATH,CASQC,QAAQ,IAAI;AAChB,aAAKE,SAAL,CAAe;AACXiB,UAAAA,SAAS,EAAGF,MADD;AAEXY,UAAAA,mBAAmB,EAAE7B;AAFV,SAAf;AAIH,OAdD;AAeH,KAnTiB;;AAAA,SAqTlB8B,SArTkB,GAqTN,MAAM;AACd,UAAIb,MAAM,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,MAAM,GAAG,KAAK7C,KAAL,CAAW+C,SAApB;AACAF,MAAAA,MAAM,CAACG,OAAP,CAAeH,MAAM,CAACI,OAAP,KAAiB,CAAhC;AACA,UAAIC,EAAE,GAAGL,MAAM,CAACM,WAAP,EAAT;AACAD,MAAAA,EAAE,IAAE,EAAJ;AACAA,MAAAA,EAAE,GAAGA,EAAE,CAACE,SAAH,CAAa,CAAb,EAAe,CAAf,CAAL;AACA,UAAIC,EAAE,GAAGR,MAAM,CAACS,QAAP,EAAT;AACA,UAAIC,EAAE,GAAGV,MAAM,CAACI,OAAP,EAAT;AACA,UAAIO,SAAS,GAAGN,EAAE,GAACG,EAAH,GAAME,EAAtB;AACAnC,MAAAA,KAAK,CAAC,mDAAiD,KAAKpB,KAAL,CAAWqB,IAA5D,GAAiE,GAAjE,GAAqEmC,SAAtE,EAAiF;AAClFlC,QAAAA,MAAM,EAAE,KAD0E;AAElFC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFyE,CAEjC;;AAFiC,OAAjF,CAAL,CAGGI,IAHH,CAGQC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,KAAK,GAAhB,EAAoB;AAChB,iBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,SAFD,MAEO,CACH;AACH;AACJ,OATD,EASGF,IATH,CASQC,QAAQ,IAAI;AAChB,aAAKE,SAAL,CAAe;AACXiB,UAAAA,SAAS,EAAGF,MADD;AAEXY,UAAAA,mBAAmB,EAAE7B;AAFV,SAAf;AAIH,OAdD;AAeH,KA9UiB;;AAAA,SAgVlB+B,SAhVkB,GAgVN,MAAM;AACd,UAAId,MAAM,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,MAAM,GAAG,KAAK7C,KAAL,CAAW+C,SAApB;AACA,aAAQF,MAAM,CAACS,QAAP,KAAkB,CAA1B;AACH,KApViB;;AAAA,SAqVlBM,QArVkB,GAqVP,MAAM;AACb,UAAIf,MAAM,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,MAAM,GAAG,KAAK7C,KAAL,CAAW+C,SAApB;AACA,aAAQF,MAAM,CAACI,OAAP,EAAR;AACH,KAzViB;;AAAA,SA2VlBY,eA3VkB,GA2VD,MAAI;AACjB,UAAIC,CAAC,GAAG,KAAK9D,KAAL,CAAWqB,IAAnB;AACA,UAAI0C,OAAO,GAAG,KAAK/D,KAAL,CAAW+B,aAAX,CAAyBiC,MAAzB,CAAgCC,GAAG,IAAIA,GAAG,CAACvB,EAAJ,IAAUoB,CAAjD,CAAd;;AACA,UAAGC,OAAO,CAACG,MAAR,GAAe,CAAlB,EAAoB;AAChB,YAAIC,CAAC,GAAGJ,OAAO,CAAC,CAAD,CAAP,CAAWK,QAAnB;AACH,OAFD,MAGK;AAAE,YAAID,CAAC,GAAG,EAAR;AAAW,OAND,CAME;;;AACnB,aAAQA,CAAR;AACH,KAnWiB;;AAAA,SAqWlB5B,YArWkB,GAqWL,MAAI;AACb,UAAIwB,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,GAAG,KAAK/D,KAAL,CAAWqE,eAArB;AACA,UAAIC,GAAG,GAAG,CAAV;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,OAAO,CAACG,MAA3B,EAAmCK,CAAC,EAApC,EAAuC;AACnC,YAAIR,OAAO,CAACQ,CAAD,CAAP,CAAWC,IAAX,IAAmB9E,OAAO,GAAGgD,EAAjC,EAAqC;AAAE;AACnC4B,UAAAA,GAAG,GAAGC,CAAN;AAAS;AACZ;AACJ;;AACDR,MAAAA,OAAO,CAACU,MAAR,CAAeH,GAAf,EAAmB,CAAnB;AACA,WAAKjE,QAAL,CAAc;AACVgE,QAAAA,eAAe,EAAEN;AADP,OAAd,EAEG,MAAM;AACL,aAAK1D,QAAL,CAAc;AACVoD,UAAAA,mBAAmB,EAAE,KAAKiB,sBAAL;AADX,SAAd;AAGH,OAND;AAOH,KAtXiB;;AAAA,SAwXlBlE,cAxXkB,GAwXH,MAAI;AACf,UAAIuD,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,GAAG,KAAK/D,KAAL,CAAW+B,aAAX,CAAyBiC,MAAzB,CAAgCC,GAAG,IAAIA,GAAG,CAACvB,EAAJ,IAAU,KAAK1C,KAAL,CAAWqB,IAA5D,CAAV;AACAD,MAAAA,KAAK,CAAC,0CAAwC,KAAKuD,KAA7C,GAAmD,GAAnD,GAAuD,KAAK3E,KAAL,CAAWqB,IAAnE,EAAyE;AAC1EC,QAAAA,MAAM,EAAE,QADkE;AAE1EC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFiE,CAEzB;;AAFyB,OAAzE,CAAL,CAGGI,IAHH,CAGQC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,KAAK,GAAhB,EAAoB;AAChB,iBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,SAFD,MAEO,CACH;AACH;AACJ,OATD,EASGF,IATH,CASQC,QAAQ,IAAI;AAChB,aAAKE,SAAL,CAAe;AACXC,UAAAA,aAAa,EAAGgC;AADL,SAAf;AAGH,OAbD;AAcH,KAzYiB;;AAAA,SA4YlBa,kBA5YkB,GA4YC,MAAI;AACnB,UAAIb,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,GAAG,KAAK/D,KAAL,CAAWyD,mBAArB;AACA,UAAIoB,OAAO,GAAG,KAAd;;AACA,WAAI,IAAIN,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACR,OAAO,CAACG,MAAvB,EAA+BK,CAAC,EAAhC,EAAmC;AAC/B,YAAGR,OAAO,CAACQ,CAAD,CAAP,CAAWC,IAAX,IAAmB,UAAtB,EAAiC;AAAE;AAC/BK,UAAAA,OAAO,GAAG,IAAV;AAAgB;AACnB;AACJ;;AACD,aAAQA,OAAR;AACH,KAtZiB;;AAAA,SAyZlBC,mBAzZkB,GAyZG,MAAK;AACtB,UAAIC,QAAQ,GAAG,KAAKzB,QAAL,EAAf;AACA,UAAI0B,OAAO,GAAG,KAAK/B,OAAL,EAAd;AACA,UAAIgC,MAAM,GAAG,KAAb;;AACA,UAAG,KAAKC,KAAL,CAAW5B,QAAX,MAAyByB,QAAzB,IAAqC,KAAKG,KAAL,CAAWjC,OAAX,KAAuB+B,OAA/D,EAAuE;AACnEC,QAAAA,MAAM,GAAG,IAAT;AACH;;AACD,aAAOA,MAAP;AACH,KAjaiB;;AAAA,UAENE,WAFM,GAEU,KAAKpF,KAAL,CAAWqF,KAAX,CAAiBC,MAF3B,CAENF,WAFM,EAGd;AACA;;AACA,QAAID,KAAK,GAAG,IAAIpC,IAAJ,EAAZ;AAEA,SAAK9C,KAAL,GAAa;AACTqB,MAAAA,IAAI,EAAE8D,WADG;AAETpC,MAAAA,SAAS,EAAEmC,KAFF;AAGTzB,MAAAA,mBAAmB,EAAE,EAHZ;AAITrD,MAAAA,SAAS,EAAE,KAJF;AAIS;AAClBO,MAAAA,SAAS,EAAE,KALF;AAKS;AAClBsB,MAAAA,SAAS,EAAE,KANF;AAMS;AAClBI,MAAAA,SAAS,EAAE,KAPF;AAOS;AAClBiD,MAAAA,SAAS,EAAE,KARF;AAQS;AAClBC,MAAAA,SAAS,EAAE,KATF;AASS;AAClBC,MAAAA,MAAM,EAAE,OAVC;AAWTC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,KAAK,EAAE,MADX;AAEIC,QAAAA,SAAS,EAAE,MAFf;AAGIC,QAAAA,GAAG,EAAE;AAHT,OADK,EAML;AACIF,QAAAA,KAAK,EAAE,MADX;AAEIC,QAAAA,SAAS,EAAE,MAFf;AAGIC,QAAAA,GAAG,EAAE;AAHT,OANK,CAXA;AAuBTC,MAAAA,MAAM,EAAEnG,OAAO,GAAGgD,EAvBT;AAwBTiC,MAAAA,KAAK,EAAEhF,MAAM,GAAG+C,EAxBP;AAyBTX,MAAAA,aAAa,EAAE,CACX;AACIW,QAAAA,EAAE,EAAE,CADR;AAEI0B,QAAAA,QAAQ,EAAE;AAFd,OADW,EAIR;AACC1B,QAAAA,EAAE,EAAE,CADL;AAEC0B,QAAAA,QAAQ,EAAE;AAFX,OAJQ,EAOR;AACC1B,QAAAA,EAAE,EAAE,CADL;AAEC0B,QAAAA,QAAQ,EAAE;AAFX,OAPQ,EAUR;AACC1B,QAAAA,EAAE,EAAE,CADL;AAEC0B,QAAAA,QAAQ,EAAE;AAFX,OAVQ,EAaR;AACC1B,QAAAA,EAAE,EAAE,CADL;AAEC0B,QAAAA,QAAQ,EAAE;AAFX,OAbQ,CAzBN;AA2CTC,MAAAA,eAAe,EAAC,CACZ;AACIc,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,CAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMIzB,QAAAA,IAAI,EAAE;AANV,OADY,EASZ;AACIW,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,CAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMIzB,QAAAA,IAAI,EAAE;AANV,OATY,EAiBZ;AACIW,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMIzB,QAAAA,IAAI,EAAE;AANV,OAjBY,EAyBZ;AACIW,QAAAA,WAAW,EAAC,CADhB;AAEIW,QAAAA,KAAK,EAAC,EAFV;AAGIC,QAAAA,IAAI,EAAC,EAHT;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMIzB,QAAAA,IAAI,EAAE;AANV,OAzBY,EAkCZ;AACIW,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,CAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMIzB,QAAAA,IAAI,EAAE;AANV,OAlCY,EA0CZ;AACIW,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMIzB,QAAAA,IAAI,EAAE;AANV,OA1CY,EAkDZ;AACIW,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMIzB,QAAAA,IAAI,EAAE;AANV,OAlDY,EA0DZ;AACIW,QAAAA,WAAW,EAAC,CADhB;AAEIW,QAAAA,KAAK,EAAC,EAFV;AAGIC,QAAAA,IAAI,EAAC,EAHT;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMIzB,QAAAA,IAAI,EAAE;AANV,OA1DY,EAkEZ;AACIW,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,CAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMIzB,QAAAA,IAAI,EAAE;AANV,OAlEY,EA0EZ;AACIW,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,CAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMIzB,QAAAA,IAAI,EAAE;AANV,OA1EY,EAkFZ;AACIW,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMIzB,QAAAA,IAAI,EAAE;AANV,OAlFY,EA0FZ;AACIW,QAAAA,WAAW,EAAC,CADhB;AAEIW,QAAAA,KAAK,EAAC,EAFV;AAGIC,QAAAA,IAAI,EAAC,EAHT;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMIzB,QAAAA,IAAI,EAAE;AANV,OA1FY;AA3CP,KAAb;AAgJH,GA3J6B,CA4J9B;;;AAwGA0B,EAAAA,qBAAqB,CAACnG,KAAD,EAAQ;AACzB,WAAO,IAAP;AACH,GAtQ6B,CAuQ9B;;;AACAoG,EAAAA,yBAAyB,CAACC,QAAD,EAAW;AAChC,QAAI,KAAKrG,KAAL,CAAWqF,KAAX,CAAiBC,MAAjB,KAA4Be,QAAQ,CAAChB,KAAT,CAAeC,MAA/C,EAAuD;AAAA,YAC3CF,WAD2C,GAC3B,KAAKpF,KAAL,CAAWqF,KAAX,CAAiBC,MADU,CAC3CF,WAD2C;AAEnD,WAAK9E,QAAL,CACI;AACIgB,QAAAA,IAAI,EAAE8D;AADV,OADJ,EAGO,MAAM;AACL;AACA,aAAK9E,QAAL,CAAc;AACVoD,UAAAA,mBAAmB,EAAC;AADV,SAAd;AAGH,OARL;AAUH;AACJ;;AAiJD4C,EAAAA,MAAM,GAAG;AAAA,UACGC,iBADH,GACyB,KAAKvG,KAAL,CAAWiB,IADpC,CACGsF,iBADH;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAR,CAFJ,EAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAG;AAAV,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OADV;AAEI,MAAA,UAAU,EAAE,KAAK1G,KAAL,CAAW+B,aAF3B;AAGI,MAAA,UAAU,EAAE4E,IAAI,IACZ,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,KAAKlE,MAAL,CAAYkE,IAAI,CAACjE,EAAjB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,MAAM,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BiE,IAAI,CAACvC,QAApC,CAAhC,CADJ,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAWI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAK1D,WAAtB;AAAmC,MAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAXJ,EAcY,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,yCADV;AAEI,MAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW,SAFxB;AAGI,MAAA,IAAI,EAAE,KAAKC,UAHf;AAII,MAAA,QAAQ,EAAE,KAAKC,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAASnB,OAAO,GAAGgD,EAAnB,CAPJ,CAdZ,EAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBJ,EAwBI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKzC,WAAtB;AAAmC,MAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAxBJ,EA2BI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,qCADV;AAEI,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWI,SAFxB;AAGI,MAAA,IAAI,EAAE,KAAKE,UAHf;AAII,MAAA,QAAQ,EAAE,KAAKG,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAY,KAAKoD,eAAL,EAAZ,MAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCARJ,MA3BJ,CADJ,EAuCI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAE,KAAKjB,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,CADJ,EAEK,KAAKe,SAAL,EAFL,aAEyB,KAAKC,QAAL,EAFzB,YAGI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAE,KAAKF,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6C,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7C,CAHJ,CADJ,CADA,EAQA,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,UAAU,EAAE,KAAK1D,KAAL,CAAWyD,mBAA3C;AAAgE,MAAA,OAAO,EAAE,KAAKzD,KAAL,CAAWyF,OAApF;AAA6F,MAAA,MAAM,EAAE;AAAEmB,QAAAA,CAAC,EAAE;AAAL,OAArG;AAAiH,MAAA,UAAU,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CARA,EAYA,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAK7E,WAAtB;AAAmC,MAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAII,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,wCADV;AAEI,MAAA,OAAO,EAAE,KAAKhC,KAAL,CAAWiC,SAFxB;AAGI,MAAA,IAAI,EAAE,KAAKC,UAHf;AAII,MAAA,QAAQ,EAAE,KAAKC,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAY,KAAK0B,eAAL,EAAZ,MANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAPJ,OAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4IAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC,EAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,WACS,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAEpE,MAAM,CAAC,OAAD,EAAU,KAAKO,KAAL,CAAWwF,MAArB,CAAhC;AAA8D,MAAA,MAAM,EAAE,KAAKxF,KAAL,CAAW8G,MAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADT,UACwG,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAErH,MAAM,CAAC,OAAD,EAAU,KAAKO,KAAL,CAAWwF,MAArB,CAAhC;AAA8D,MAAA,MAAM,EAAE,KAAKxF,KAAL,CAAW8G,MAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADxG,CARJ,CAJJ,EAeI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,EAgBM,KAAKlC,kBAAL,EAAD,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKxC,WAAtB;AAAmC,MAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADJ,EAII,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,0CADV;AAEI,MAAA,OAAO,EAAE,KAAKpC,KAAL,CAAWqC,SAFxB;AAGI,MAAA,IAAI,EAAE,KAAKC,UAHf;AAII,MAAA,QAAQ,EAAE,KAAKE,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0HANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAW,KAAKqB,eAAL,EAAX,MAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCARJ,OASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCATJ,CAJJ,CAjBR,CAZA,CAFR,CAvCJ,CAJJ,CADJ;AAoGH;;AA7gB6B;;AAghBlC,eAAexE,IAAI,CAAC0H,MAAL,GAAclH,SAAd,CAAf","sourcesContent":["import React, { Component } from 'react'; \r\nimport { Typography, Icon, Row, Col, Button, Modal, Divider, Table,Card, List, Input, Form, TimePicker, message} from 'antd'\r\nimport { Link } from \"react-router-dom\"; \r\nimport moment from 'moment';\r\nimport { getUser, getLab } from '../authentication';\r\n\r\n\r\nconst { Title } = Typography; \r\n\r\nclass Apparatus extends Component {\r\n    state = {\r\n        \r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        const { apparatusId } = this.props.match.params;\r\n        //현재 랩 id로 기기 리스트 받아와서 변수에 저장하기 \r\n        //오늘 날짜 받아오기\r\n        var today = new Date();\r\n      \r\n        this.state = {\r\n            menu: apparatusId,\r\n            todayDate: today,\r\n            realReservationList: [],\r\n            visible_0: false, // '기기 삭제' 모달\r\n            visible_1: false, //'기기등록하기' 모달\r\n            visible_2: false, // '기기예약하기' 모달\r\n            visible_3: false, // '본인 예약 삭제확인' 모달\r\n            visible_4: false, // '예약 중복' 모달\r\n            visible_5: false, // '예약 삭제 오류 - 지난 날짜 삭제 안됨' 모달 \r\n            format: 'HH:mm',\r\n            columns: [\r\n                {\r\n                    title: 'Time',\r\n                    dataIndex: 'time',\r\n                    key: 'time',\r\n                },\r\n                {\r\n                    title: 'User',\r\n                    dataIndex: 'user',\r\n                    key: 'user',\r\n                },\r\n            ],\r\n            userId: getUser().id,\r\n            labId: getLab().id,\r\n            apparatusList: [\r\n                {\r\n                    id: 1,\r\n                    nickname: \"apparatus1\" \r\n                }, {\r\n                    id: 2,\r\n                    nickname: \"apparatus2\"\r\n                }, {\r\n                    id: 3,\r\n                    nickname: \"apparatus3\"\r\n                }, {\r\n                    id: 4,\r\n                    nickname: \"apparatus4\"\r\n                }, {\r\n                    id: 5,\r\n                    nickname: \"apparatus5\"\r\n                }\r\n            ],\r\n            reservationList:[\r\n                {   \r\n                    apparatusId: 1,\r\n                    month: 11,\r\n                    date: 24,\r\n                    startTime: 8,\r\n                    endTime: 11,\r\n                    user: 'Yeong mo'\r\n                },\r\n                {   \r\n                    apparatusId: 2,\r\n                    month: 11,\r\n                    date: 24,\r\n                    startTime: 8,\r\n                    endTime: 10,\r\n                    user: 'Joo young'\r\n                },\r\n                {   \r\n                    apparatusId: 2,\r\n                    month: 11,\r\n                    date: 24,\r\n                    startTime: 13,\r\n                    endTime: 16,\r\n                    user: 'Yeong mo'\r\n                },\r\n                {\r\n                    apparatusId:1,\r\n                    month:11,\r\n                    date:24,\r\n                    startTime: 11,\r\n                    endTime: 13,\r\n                    user: 'Eun mu'\r\n                }, \r\n\r\n                {   \r\n                    apparatusId: 1,\r\n                    month: 11,\r\n                    date: 25,\r\n                    startTime: 8,\r\n                    endTime: 10,\r\n                    user: 'Ji su'\r\n                },\r\n                {   \r\n                    apparatusId: 2,\r\n                    month: 11,\r\n                    date: 25,\r\n                    startTime: 11,\r\n                    endTime: 13,\r\n                    user: 'Hyeok ju'\r\n                },\r\n                {   \r\n                    apparatusId: 2,\r\n                    month: 11,\r\n                    date: 25,\r\n                    startTime: 14,\r\n                    endTime: 17,\r\n                    user: 'Han bin'\r\n                },\r\n                {\r\n                    apparatusId:1,\r\n                    month:11,\r\n                    date:25,\r\n                    startTime: 16,\r\n                    endTime: 18,\r\n                    user: 'Yeong mo'\r\n                },\r\n                {   \r\n                    apparatusId: 1,\r\n                    month: 11,\r\n                    date: 26,\r\n                    startTime: 9,\r\n                    endTime: 13,\r\n                    user: 'Ji su'\r\n                },\r\n                {   \r\n                    apparatusId: 2,\r\n                    month: 11,\r\n                    date: 26,\r\n                    startTime: 9,\r\n                    endTime: 10,\r\n                    user: 'Joo young'\r\n                },\r\n                {   \r\n                    apparatusId: 2,\r\n                    month: 11,\r\n                    date: 26,\r\n                    startTime: 10,\r\n                    endTime: 11,\r\n                    user: 'Hyeok ju'\r\n                },\r\n                {\r\n                    apparatusId:4,\r\n                    month:11,\r\n                    date:26,\r\n                    startTime: 11,\r\n                    endTime: 12,\r\n                    user: 'Yeong mo'\r\n                }\r\n            ],\r\n           \r\n         }     \r\n    }    \r\n    //'기기 삭제'버튼에 대한 메소드\r\n    showModal_0 =()=> {\r\n        console.log(this.state.visible_0)\r\n        this.setState({\r\n            visible_0: true\r\n        })\r\n    }\r\n    handleOk_0 =e=> {\r\n        console.log(e);\r\n        this.handleRemove_2();\r\n        this.setState({\r\n            visible_0: false,\r\n        })\r\n    }\r\n    handleCancel_0 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_0: false,\r\n        })\r\n    }\r\n    //'기기 등록하기' 버튼 메소드\r\n    showModal_1 =()=> {\r\n        console.log(this.state.visible_1)\r\n        this.setState({\r\n            visible_1: true\r\n        })\r\n    }\r\n    handleOk_1 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_1: false,\r\n        })\r\n    }\r\n    handleCancel_1 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_1: false,\r\n        })\r\n    }\r\n\r\n    //'등록하기'버튼 입력받기?\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values)=> {\r\n            if (!err) {\r\n                console.log(values)\r\n                fetch('http://13.124.122.246:8080/apparatus/'+this.state.menu, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' }, \r\n                    body: JSON.stringify(values) //여기에다가 body 넣어주기\r\n                }).then(response => {\r\n                    if (response === 200) {\r\n                        return response.json()\r\n                    } else {\r\n                        // 오류 난 경우 처리 \r\n                    }\r\n                }).then(response => {\r\n                    this.setStatus({\r\n                        apparatusList: response\r\n                    })\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    //'예약하기'버튼에 대한 메소드\r\n    showModal_2 =()=> {\r\n        console.log(this.state.visible_2)\r\n        this.setState({\r\n            visible_2: true\r\n        })\r\n    }\r\n    handleOk_2 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_2: false,\r\n        })\r\n    }\r\n    handleCancel_2 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_2: false,\r\n        })\r\n    }\r\n    //'본인 예약 삭제'버튼에 대한 메소드\r\n    showModal_3 = () => {\r\n        console.log(this.state.visible_3)\r\n        this.setState({\r\n            visible_3: true\r\n        })\r\n    }\r\n    handleOk_3 = e => {\r\n        console.log(e);\r\n        this.handleRemove();\r\n        this.setState({\r\n            visible_3: false,\r\n        })\r\n    }\r\n    handleCancel_3 = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_3: false,\r\n        })\r\n    }\r\n    shouldComponentUpdate(props) {\r\n        return true\r\n    }\r\n    //현재 페이지 내에서 파라미터만 변경되었을 경우\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.match.params !== newProps.match.params) {\r\n            const { apparatusId } = this.props.match.params;\r\n            this.setState(\r\n                {\r\n                    menu: apparatusId\r\n                }, () => {\r\n                    //클릭한 기기 ID에 대해서 예약 리스트 받아와서 STATE에 저장 \r\n                    this.setState({\r\n                        realReservationList:[]\r\n                    })\r\n                }\r\n            )\r\n        }\r\n    }\r\n   \r\n    getUrl = (id) => {\r\n        const url = '/apparatus/' + id;\r\n        return (url)\r\n    }\r\n\r\n    //날짜 왼쪽으로 이동하면 해당 날짜에 해당하는 새로운 표출할 예약 필터링\r\n    goToLeft = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        newday.setDate(newday.getDate()-1);\r\n        var yy = newday.getFullYear();\r\n        yy+=''\r\n        yy = yy.substring(2,4);\r\n        var mm = newday.getMonth()\r\n        var dd = newday.getDate()\r\n        var todayInfo = yy+mm+dd ;\r\n        fetch('http://13.124.122.246:8080/schedule/apparatus/'+this.state.menu+'/'+todayInfo ,{ \r\n            method: 'GET', \r\n            headers: { 'Content-Type': 'application/json' }, //안고쳐도 됨\r\n        }).then(response => {\r\n            if(response === 200){\r\n                return response.json()\r\n            } else {\r\n                // 오류 난 경우 처리 \r\n            }\r\n        }).then(response => { \r\n            this.setStatus({ \r\n                todayDate : newday,\r\n                realReservationList: response\r\n            })\r\n        })\r\n    }\r\n    //날짜 오른쪽 으로 이동하면 해당 날짜에 해당하는 새로운 표출할 예약 필터링\r\n    goToRight = () => { \r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        newday.setDate(newday.getDate()+1);\r\n        var yy = newday.getFullYear();\r\n        yy+=''\r\n        yy = yy.substring(2,4);\r\n        var mm = newday.getMonth()\r\n        var dd = newday.getDate()\r\n        var todayInfo = yy+mm+dd ;\r\n        fetch('http://13.124.122.246:8080/schedule/apparatus/'+this.state.menu+'/'+todayInfo ,{ \r\n            method: 'GET', \r\n            headers: { 'Content-Type': 'application/json' }, //안고쳐도 됨\r\n        }).then(response => {\r\n            if(response === 200){\r\n                return response.json()\r\n            } else {\r\n                // 오류 난 경우 처리 \r\n            }\r\n        }).then(response => { \r\n            this.setStatus({ \r\n                todayDate : newday,\r\n                realReservationList: response\r\n            })\r\n        })\r\n    }\r\n\r\n    makeMonth = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        return (newday.getMonth()+1)\r\n    }\r\n    makeDate = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        return (newday.getDate())\r\n    }\r\n    // 현재 누른 기기의 이름을 받아오는 함수\r\n    getApparNameNow =()=>{\r\n        var n = this.state.menu; \r\n        var newList = this.state.apparatusList.filter(one => one.id == n)\r\n        if(newList.length>0){\r\n            var m = newList[0].nickname\r\n        }\r\n        else { var m = ''} // 없어지는 순간의 오류를 막기 위한 else구문\r\n        return (m)\r\n    }\r\n    // 본인 예약 삭제할 수 있는 함수 \r\n    handleRemove=()=>{\r\n        var newList = [];\r\n        newList = this.state.reservationList;\r\n        var del = 0;\r\n        for(var i = 0; i < newList.length; i++){\r\n            if (newList[i].user == getUser().id ){ //유저 네임은 로그인 정보 받아오는 걸로 바꾸기\r\n                del = i; break;\r\n            }\r\n        }\r\n        newList.splice(del,1)\r\n        this.setState({\r\n            reservationList: newList,\r\n        }, () => {\r\n            this.setState({\r\n                realReservationList: this.getRealReservationList(),\r\n            })    \r\n        })\r\n    }\r\n    // 기기 삭제하는 함수\r\n    handleRemove_2=()=>{\r\n        var newList = [];\r\n        newList = this.state.apparatusList.filter(one => one.id != this.state.menu);\r\n        fetch('http://13.124.122.246:8080/apparatus/'+this.labId+'/'+this.state.menu ,{ \r\n            method: 'DELETE', \r\n            headers: { 'Content-Type': 'application/json' }, //안고쳐도 됨\r\n        }).then(response => {\r\n            if(response === 200){\r\n                return response.json()\r\n            } else {\r\n                // 오류 난 경우 처리 \r\n            }\r\n        }).then(response => { \r\n            this.setStatus({ \r\n                apparatusList : newList,\r\n            })\r\n        })\r\n    }\r\n\r\n    // 현재 날짜의 현재 기기 예약 중 내 예약이 있는지 없는지 \r\n    checkMyReservation=()=>{\r\n        var newList = [];\r\n        newList = this.state.realReservationList;\r\n        var present = false;\r\n        for(var i=0; i<newList.length; i++){\r\n            if(newList[i].user == 'Yeong mo'){ //login user정보 오면 넣기\r\n                present = true; break;\r\n            }\r\n        }\r\n        return (present)\r\n    }\r\n\r\n    //삭제하고자 하는 예약이 옛날 건지 확인 \r\n    checkReservtionDate =()=> {\r\n        var nowMonth = this.getMonth();\r\n        var nowDate = this.getDate();\r\n        var isPast = false;\r\n        if(this.today.getMonth() >= nowMonth && this.today.getDate() > nowDate){\r\n            isPast = true;\r\n        }\r\n        return(isPast)\r\n    }\r\n\r\n    render() { \r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <center><Title style={{ marginBottom: 35 }}>Apparatus</Title></center>\r\n\r\n                <Row >\r\n                    <Col span={6} style={{margin : 10}} >\r\n                        {/* 기기들 목록 */}\r\n                        <List\r\n                            grid={{ gutter: 16, column: 1 }}\r\n                            dataSource={this.state.apparatusList}\r\n                            renderItem={item => (\r\n                                <List.Item>\r\n                                    <Link to={this.getUrl(item.id)}><Button type=\"primary\" active>{item.nickname}</Button></Link>\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                        <Button onClick={this.showModal_1} active>\r\n                                    예약 하기\r\n                                    </Button>\r\n                                <Modal\r\n                                    title=\"new Apparatus 등록 하기\"\r\n                                    visible={this.state.visible_1}\r\n                                    onOk={this.handleOk_1}\r\n                                    onCancel={this.handleCancel_1}\r\n                                >\r\n                                    <p>등록할 기기: </p>\r\n                                    <p>등록자: {getUser().id}</p> \r\n                                </Modal>\r\n                        <p></p>\r\n                        <Button onClick={this.showModal_0} active> {/*기기 삭제 버튼*/}\r\n                            기기 삭제\r\n                        </Button>\r\n                        <Modal\r\n                            title=\"Apparatus 삭제 하기\"\r\n                            visible={this.state.visible_0}\r\n                            onOk={this.handleOk_0}\r\n                            onCancel={this.handleCancel_0}\r\n                        >\r\n                            <p> ---------- 해당 기기를 삭제하시겠습니까? ---------</p>\r\n                            <p>선택한 기기: {this.getApparNameNow()} </p>\r\n                            <p>등록자: Yeong mo </p> {/*login user 정보 받으면 넣기*/}\r\n                        </Modal>\r\n                    </Col>\r\n                    <Col span={16} >\r\n                        {/* 기기들 상세 창 */}\r\n                            <Card>\r\n                            <Row span={3}>\r\n                                <center>\r\n                                    <Button type=\"link\" onClick={this.goToLeft}><Icon type=\"arrow-left\" /></Button>\r\n                                    {this.makeMonth()}월 {this.makeDate()}일\r\n                                    <Button type=\"link\" onClick={this.goToRight}><Icon type=\"arrow-right\" /></Button>\r\n                                </center>\r\n                            </Row>\r\n                            <Row span={18}>\r\n                                {/*시간과 예약현황을 표로 나타내기*/}\r\n                                <Table size='small' dataSource={this.state.realReservationList} columns={this.state.columns} scroll={{ y: 240 }} pagination={{ pageSize: 50 }} />\r\n                            </Row>\r\n                            <Row span={2}>\r\n                                <Button onClick={this.showModal_2} active>\r\n                                    예약 하기\r\n                                    </Button>\r\n                                <Modal\r\n                                    title=\"my Apparatus 예약 하기\"\r\n                                    visible={this.state.visible_2}\r\n                                    onOk={this.handleOk_2}\r\n                                    onCancel={this.handleCancel_2}\r\n                                >\r\n                                    <p>예약할 기기: {this.getApparNameNow()} </p>\r\n                                    <p>예약자: Yeong mo</p> {/*login user 정보 받으면 넣기*/}\r\n                                    <p>예약할 시간: (예약은 한시간 단위로만 가능합니다) <br /><br />\r\n                                        from <TimePicker defaultValue={moment('12:00', this.state.format)} format={this.state.foramt} /> to <TimePicker defaultValue={moment('14:00', this.state.format)} format={this.state.foramt} /></p>\r\n                                </Modal>\r\n                                <Divider type=\"vertical\" />\r\n                                {(this.checkMyReservation()) && (\r\n                                    <div>\r\n                                        <Button onClick={this.showModal_3} active>\r\n                                            my예약 삭제하기\r\n                                    </Button>\r\n                                        <Modal\r\n                                            title=\"my 예약 삭제하기\"\r\n                                            visible={this.state.visible_3}\r\n                                            onOk={this.handleOk_3}\r\n                                            onCancel={this.handleCancel_3}\r\n\r\n                                        >   <p> ---- 아래 정보의 예약을 삭제 하시겠습니까? ----</p>\r\n                                            <p>예약 기기: {this.getApparNameNow()} </p>\r\n                                            <p>예약자: Yeong mo</p> {/*login user 정보 받으면 넣기*/}\r\n                                            <p>예약 시간: </p>\r\n                                        </Modal>\r\n                                    </div>)\r\n                                }\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(Apparatus);\r\n"]},"metadata":{},"sourceType":"module"}