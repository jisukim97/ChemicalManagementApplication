{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ForgotPassword.js\";\nimport React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\nimport { Link } from \"react-router-dom\";\n\nclass ForgotPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visibleQuestion: false\n      /*\n          //이메일 입력 하고 버튼을 눌렀을 때 : 비밀번호 초기화 질문을 불러와서 물어본다\n          handleSubmit = e => {\n              e.preventDefault();\n              this.props.form.validateFields((err, values) => {\n                  if (!err) {\n                      console.log('Received values of form: ', values);\n                      //요청 양식은 이미 values에 동일하게 맞춰져 있는 상태이므로\n                      //따로 가공해줄 필요 없이 바로 http 요청 을 보낸다\n                      fetch('http://localhost:8080/login', {\n                          method: 'POST',\n                          headers: { 'Content-Type': 'application/json' },\n                          body: JSON.stringify(values)\n                      })\n                          .then(response => {\n                              const result = response.status;\n                              if (result === 200) {\n                                  //로그인이 성공하였을 경우\n                                  response.json().then(response => {\n                                      //로컬스토리지에 토큰 및 로그인 정보 저장\n                                      login(response)\n                                      message.success(response.user.username + '님 환영합니다!');\n                                      history.push(\"/main\")\n                                  })\n                              } else if (result === 401) {\n                                  //비밀번호 불일치 혹은 이메일이 등록되지 않았음\n                                  message.error('로그인에 실패 하였습니다. 이메일 혹은 비밀번호를 다시 확인 해 주세요.');\n                                  console.log(\"fail!\")\n                              } else {\n                                  //내부 오류\n                              }\n                          })\n                  }\n              });\n          };\n          */\n\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825 \\uD574 \\uC8FC\\uC138\\uC694\", getFieldDecorator('email', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"mail\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Submit Email Address\"), \"Or \", React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"login now!\"))));\n  }\n\n}\n\nexport default Form.create()(ForgotPassword); //해야할일 : 비밀번호 찾기 페이지, 유저 프로필 등록 페이지, 홈 페이지","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ForgotPassword.js"],"names":["React","Component","Form","Icon","Input","Button","Checkbox","message","Link","ForgotPassword","state","visibleQuestion","render","getFieldDecorator","props","form","handleSubmit","rules","required","color","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8CC,OAA9C,QAA6D,MAA7D;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCS,KADmC,GAC3B;AACJC,MAAAA,eAAe,EAAE;AAErB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHQ,KAD2B;AAAA;;AAyCnCC,EAAAA,MAAM,GAAG;AAAA,UACGC,iBADH,GACyB,KAAKC,KAAL,CAAWC,IADpC,CACGF,iBADH;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKG,YAArB;AAAmC,MAAA,SAAS,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAESH,iBAAiB,CAAC,OAAD,EAAU;AACxBI,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBX,QAAAA,OAAO,EAAE;AAA3B,OAAD;AADiB,KAAV,CAAjB,CAGG,oBAAC,KAAD;AACI,MAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEY,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADZ;AAEI,MAAA,WAAW,EAAC,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CAFT,CADA,EAaI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,SAAS,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,SAIO,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJP,CAbJ,CADJ,CADJ;AAyBH;;AArEkC;;AAyEvC,eAAejB,IAAI,CAACkB,MAAL,GAAcX,cAAd,CAAf,C,CAEA","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\nimport { Link } from \"react-router-dom\";\n\n\nclass ForgotPassword extends Component {\n    state = {\n        visibleQuestion: false\n    }\n    /*\n        //이메일 입력 하고 버튼을 눌렀을 때 : 비밀번호 초기화 질문을 불러와서 물어본다\n        handleSubmit = e => {\n            e.preventDefault();\n            this.props.form.validateFields((err, values) => {\n                if (!err) {\n                    console.log('Received values of form: ', values);\n                    //요청 양식은 이미 values에 동일하게 맞춰져 있는 상태이므로\n                    //따로 가공해줄 필요 없이 바로 http 요청 을 보낸다\n                    fetch('http://localhost:8080/login', {\n                        method: 'POST',\n                        headers: { 'Content-Type': 'application/json' },\n                        body: JSON.stringify(values)\n                    })\n                        .then(response => {\n                            const result = response.status;\n                            if (result === 200) {\n                                //로그인이 성공하였을 경우\n                                response.json().then(response => {\n                                    //로컬스토리지에 토큰 및 로그인 정보 저장\n                                    login(response)\n                                    message.success(response.user.username + '님 환영합니다!');\n                                    history.push(\"/main\")\n                                })\n                            } else if (result === 401) {\n                                //비밀번호 불일치 혹은 이메일이 등록되지 않았음\n                                message.error('로그인에 실패 하였습니다. 이메일 혹은 비밀번호를 다시 확인 해 주세요.');\n                                console.log(\"fail!\")\n                            } else {\n                                //내부 오류\n                            }\n                        })\n                }\n            });\n        };\n        */\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <span>\n                <Form onSubmit={this.handleSubmit} className=\"form\">\n                <Form.Item>\n                이메일 주소를 입력 해 주세요\n                        {getFieldDecorator('email', {\n                            rules: [{ required: true, message: 'Please input your username!' }],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                placeholder=\"Email\"\n                            />,\n                        )}\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"button\">\n                            Submit Email Address\n                        </Button>\n                        Or <Link to=\"/login\">login now!</Link>\n                    </Form.Item>\n\n                </Form >\n            </span>\n        );\n    }\n}\n\n\nexport default Form.create()(ForgotPassword);\n\n//해야할일 : 비밀번호 찾기 페이지, 유저 프로필 등록 페이지, 홈 페이지\n"]},"metadata":{},"sourceType":"module"}