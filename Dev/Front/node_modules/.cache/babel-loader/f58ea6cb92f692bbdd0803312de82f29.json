{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendSerch.js\";\nimport React, { Component } from 'react';\nimport { Input } from 'antd';\nimport { getUser, getToken } from '../authentication';\nimport FriendArray from './FriendArray';\nconst Search = Input.Search;\n\nclass FriendSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchList: []\n    };\n\n    this.loadingFriendRequests = () => {}\n    /*\n    const requesturl = 'http://localhost:8080/friend/request/' + getUser().userID\n    fetch(requesturl, {\n        method: 'GET',\n        headers: {\n            'token': getToken()\n        }\n    })\n        .then(response => {\n            if (response.status === 200) {\n                return response.json();\n            } else {\n                console.log('친구신청 불러오기 에러!')\n                return [];\n            }\n        }).then(response => {\n            this.setState({ requestList: response })\n            console.log(\"친구 요청들\")\n            console.log(response)\n        })\n        */\n    //삭제한 글 state의 리스트에서 삭제해 주어 다시 렌더링\n    ;\n\n    this.deleteArray = friend => {\n      let lists = this.state.searchList;\n      lists.splice(lists.indexOf(friend), 1);\n      this.setState({\n        searchList: lists\n      });\n    };\n\n    this.getArray = () => {\n      if (this.state.requestList == null || this.state.requestList == []) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"null\");\n      } else {\n        return React.createElement(FriendArray, {\n          friends: this.state.searchList,\n          from: \"search\",\n          deleteArray: this.deleteArray,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.searchForm = () => {\n      React.createElement(Search, {\n        placeholder: \"input search text\",\n        onSearch: value => {\n          console.log(value);\n          const requesturl = 'http://localhost:8080/friend/search/' + value;\n          fetch(requesturl, {\n            method: 'GET',\n            headers: {\n              'token': getToken()\n            }\n          }).then(response => {\n            if (response.status === 200) {\n              return response.json();\n            } else {\n              console.log('친구검색 에러!');\n              return [];\n            }\n          }).then(response => {\n            this.setState({\n              searchList: response\n            });\n            console.log(\"검색 결과들\");\n            console.log(response);\n          });\n        },\n        enterButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"\\uCE5C\\uAD6C \\uAC80\\uC0C9\", this.searchForm());\n  }\n\n}\n\nexport default FriendSearch;","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendSerch.js"],"names":["React","Component","Input","getUser","getToken","FriendArray","Search","FriendSearch","constructor","props","state","searchList","loadingFriendRequests","deleteArray","friend","lists","splice","indexOf","setState","getArray","requestList","searchForm","value","console","log","requesturl","fetch","method","headers","then","response","status","json","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,mBAAlC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;MAEQC,M,GAAWJ,K,CAAXI,M;;AAER,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAMjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAJnBC,KAImB,GAJX;AACJC,MAAAA,UAAU,EAAE;AADR,KAIW;;AAAA,SAKnBC,qBALmB,GAKK,MAAM,CAuB7B;AAtBG;;;;;;;;;;;;;;;;;;;;;AAwBJ;AA9BmB;;AAAA,SA+BnBC,WA/BmB,GA+BJC,MAAD,IAAY;AACtB,UAAIC,KAAK,GAAG,KAAKL,KAAL,CAAWC,UAAvB;AACAI,MAAAA,KAAK,CAACC,MAAN,CAAaD,KAAK,CAACE,OAAN,CAAcH,MAAd,CAAb,EAAmC,CAAnC;AACA,WAAKI,QAAL,CAAc;AAACP,QAAAA,UAAU,EAAGI;AAAd,OAAd;AACH,KAnCkB;;AAAA,SAqCnBI,QArCmB,GAqCR,MAAM;AACb,UAAI,KAAKT,KAAL,CAAWU,WAAX,IAAyB,IAAzB,IAAiC,KAAKV,KAAL,CAAWU,WAAX,IAAwB,EAA7D,EAAgE;AAC5D,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AACH,OAFD,MAEO;AACH,eAAQ,oBAAC,WAAD;AAAa,UAAA,OAAO,EAAE,KAAKV,KAAL,CAAWC,UAAjC;AAA6C,UAAA,IAAI,EAAC,QAAlD;AAA2D,UAAA,WAAW,EAAE,KAAKE,WAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH;AACJ,KA3CkB;;AAAA,SA6CnBQ,UA7CmB,GA6CN,MAAM;AACf,0BAAC,MAAD;AAAQ,QAAA,WAAW,EAAC,mBAApB;AAAwC,QAAA,QAAQ,EAAEC,KAAK,IAAI;AACvDC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,gBAAMG,UAAU,GAAG,yCAAyCH,KAA5D;AACAI,UAAAA,KAAK,CAACD,UAAD,EAAa;AACdE,YAAAA,MAAM,EAAE,KADM;AAEdC,YAAAA,OAAO,EAAE;AACL,uBAASxB,QAAQ;AADZ;AAFK,WAAb,CAAL,CAMKyB,IANL,CAMUC,QAAQ,IAAI;AACd,gBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,qBAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,aAFD,MAEO;AACHT,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,qBAAO,EAAP;AACH;AACJ,WAbL,EAaOK,IAbP,CAaYC,QAAQ,IAAI;AAChB,iBAAKZ,QAAL,CAAc;AAAEP,cAAAA,UAAU,EAAEmB;AAAd,aAAd;AACAP,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACH,WAjBL;AAmBH,SAtBD;AAuBE,QAAA,WAAW,MAvBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBH,KAvEkB;AAGlB;;AAuEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEK,KAAKZ,UAAL,EAFL,CADJ;AAMH;;AAvFgC;;AA0FrC,eAAed,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Input } from 'antd';\nimport { getUser, getToken } from '../authentication';\n\nimport FriendArray from './FriendArray';\n\nconst { Search } = Input;\n\nclass FriendSearch extends Component {\n\n    state = {\n        searchList: []\n    };\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    loadingFriendRequests = () => {\n        /*\n        const requesturl = 'http://localhost:8080/friend/request/' + getUser().userID\n        fetch(requesturl, {\n            method: 'GET',\n            headers: {\n                'token': getToken()\n            }\n        })\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    console.log('친구신청 불러오기 에러!')\n                    return [];\n                }\n            }).then(response => {\n                this.setState({ requestList: response })\n                console.log(\"친구 요청들\")\n                console.log(response)\n            })\n            */\n\n    }\n\n    //삭제한 글 state의 리스트에서 삭제해 주어 다시 렌더링\n    deleteArray = (friend) => {\n        let lists = this.state.searchList\n        lists.splice(lists.indexOf(friend),1);\n        this.setState({searchList : lists})\n    }\n\n    getArray = () => {\n        if (this.state.requestList== null || this.state.requestList==[]){\n            return (<div>null</div>);\n        } else {\n            return (<FriendArray friends={this.state.searchList} from=\"search\" deleteArray={this.deleteArray}/>);\n        }\n    }\n\n    searchForm = () => {\n        <Search placeholder=\"input search text\" onSearch={value => {\n            console.log(value)\n            const requesturl = 'http://localhost:8080/friend/search/' + value\n            fetch(requesturl, {\n                method: 'GET',\n                headers: {\n                    'token': getToken()\n                }\n            })\n                .then(response => {\n                    if (response.status === 200) {\n                        return response.json();\n                    } else {\n                        console.log('친구검색 에러!')\n                        return [];\n                    }\n                }).then(response => {\n                    this.setState({ searchList: response })\n                    console.log(\"검색 결과들\")\n                    console.log(response)\n                })\n    \n        }\n        } enterButton />\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                친구 검색\n                {this.searchForm()}\n            </div>\n        );\n    }\n}\n\nexport default FriendSearch;"]},"metadata":{},"sourceType":"module"}