{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\git\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\src\\\\components\\\\Apparatus.js\";\nimport React, { Component } from 'react';\nimport { Typography, Icon, Row, Col, Button, Modal, Divider, Table, Card, List, Input, TimePicker } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport moment from 'moment';\nconst Title = Typography.Title;\n\nclass Apparatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.showModal_1 = () => {\n      console.log(this.state.visible_1);\n      this.setState({\n        visible_1: true\n      });\n    };\n\n    this.handleOk_1 = e => {\n      console.log(e);\n      this.setState({\n        visible_1: false\n      });\n    };\n\n    this.handleCancel_1 = e => {\n      console.log(e);\n      this.setState({\n        visible_1: false\n      });\n    };\n\n    this.showModal_2 = () => {\n      console.log(this.state.visible_2);\n      this.setState({\n        visible_2: true\n      });\n    };\n\n    this.handleOk_2 = e => {\n      console.log(e);\n      this.setState({\n        visible_2: false\n      });\n    };\n\n    this.handleCancel_2 = e => {\n      console.log(e);\n      this.setState({\n        visible_2: false\n      });\n    };\n\n    this.showModal_3 = () => {\n      console.log(this.state.visible_3);\n      this.setState({\n        visible_3: true\n      });\n    };\n\n    this.handleOk_3 = e => {\n      console.log(e);\n      this.setState({\n        visible_3: false\n      });\n    };\n\n    this.handleCancel_3 = e => {\n      console.log(e);\n      this.setState({\n        visible_3: false\n      });\n    };\n\n    this.getbyApparList = () => {\n      var byAppar = [];\n\n      for (var i = 0; i < this.state.reservationList.length; i++) {\n        var one = {};\n        one = this.state.reservationList[i];\n\n        if (one.apparatusId == this.state.menu) {\n          byAppar.push(one);\n        }\n      }\n\n      return byAppar;\n    };\n\n    this.getRealReservationList = () => {\n      var newList = [];\n      var byApparList = [];\n      byApparList = this.getbyApparList();\n\n      for (var i = 0; i < 15; i++) {\n        var newOne = {};\n        var time = i + 8;\n        newOne['time'] = time;\n        newOne['user'] = '';\n\n        for (var j = 0; j < byApparList.length; j++) {\n          var one = {};\n          one = byApparList[j];\n          var start = one.startTime;\n          var end = one.endTime;\n\n          if (start <= time && time < end) {\n            newOne['user'] = one.user;\n            break;\n          }\n        }\n\n        newList.push(newOne);\n      }\n\n      return newList;\n    };\n\n    this.getUrl = id => {\n      const url = '/apparatus/' + id;\n      return url;\n    };\n\n    this.goToLeft = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      newday.setDate(newday.getDate() - 1);\n      this.setState({\n        todayDate: newday,\n        reservationList: [{\n          apparatusId: 1,\n          month: 11,\n          date: 22,\n          startTime: 8,\n          endTime: 10,\n          user: 'Hyeok ju'\n        }, {\n          apparatusId: 2,\n          month: 11,\n          date: 22,\n          startTime: 8,\n          endTime: 10,\n          user: 'Eun mu'\n        }, {\n          apparatusId: 3,\n          month: 11,\n          date: 22,\n          startTime: 13,\n          endTime: 16,\n          user: 'Ji su'\n        }]\n      });\n      this.setState({\n        realReservationList: this.getRealReservationList()\n      });\n    };\n\n    this.goToRight = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      newday.setDate(newday.getDate() + 1);\n      this.setState({\n        todayDate: newday,\n        reservationList: [{\n          apparatusId: 1,\n          month: 11,\n          date: 24,\n          startTime: 9,\n          endTime: 12,\n          user: 'Han bin'\n        }, {\n          apparatusId: 1,\n          month: 11,\n          date: 24,\n          startTime: 15,\n          endTime: 17,\n          user: 'Yeong mo'\n        }, {\n          apparatusId: 3,\n          month: 11,\n          date: 24,\n          startTime: 13,\n          endTime: 16,\n          user: 'Ji su'\n        }]\n      });\n      this.setState({\n        realReservationList: this.getRealReservationList()\n      });\n    };\n\n    this.makeMonth = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      return newday.getMonth() + 1;\n    };\n\n    this.makeDate = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      return newday.getDate();\n    };\n\n    this.getApparNameNow = () => {\n      var n = this.state.menu;\n      n -= 1;\n      var m = this.state.apparatusList[n].nickname;\n      return m;\n    };\n\n    this.handleRemove = i => {\n      var newList = [];\n      newList = this.state.reservationList;\n      var del = 0;\n\n      for (var i = 0; i < newList.length; i++) {\n        if (newList[i].user == 'Ji su') {\n          //유저 네임은 로그인 정보 받아오는 걸로 바꾸기\n          del = i;\n          break;\n        }\n      }\n\n      newList.splice(del, 1);\n      this.setState({\n        reservationList: newList\n      });\n      this.setState({\n        realReservationList: this.getRealReservationList()\n      });\n    };\n\n    const apparatusId = this.props.match.params.apparatusId; //오늘 날짜 받아오기\n\n    var today = new Date();\n    this.state = {\n      visible_1: false,\n      //'등록하기' 모달\n      visible_2: false,\n      // '예약하기' 모달\n      visible_3: false,\n      // '본인 예약 삭제확인' 모달\n      menu: apparatusId,\n      format: 'HH:mm',\n      apparatusList: [{\n        id: 1,\n        nickname: \"apparatus1\"\n      }, {\n        id: 2,\n        nickname: \"apparatus2\"\n      }, {\n        id: 3,\n        nickname: \"apparatus3\"\n      }, {\n        id: 4,\n        nickname: \"apparatus4\"\n      }, {\n        id: 5,\n        nickname: \"apparatus5\"\n      }],\n      reservationList: [{\n        apparatusId: 1,\n        month: 11,\n        date: 23,\n        startTime: 8,\n        endTime: 11,\n        user: 'Yeong mo'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 23,\n        startTime: 9,\n        endTime: 11,\n        user: 'Ji su'\n      }, {\n        apparatusId: 3,\n        month: 11,\n        date: 23,\n        startTime: 8,\n        endTime: 10,\n        user: 'Joo young'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 23,\n        startTime: 13,\n        endTime: 16,\n        user: 'Han bin'\n      }, {\n        apparatusId: 1,\n        month: 11,\n        date: 23,\n        startTime: 12,\n        endTime: 15,\n        user: 'Eun mu'\n      }],\n      columns: [{\n        title: 'Time',\n        dataIndex: 'time',\n        key: 'time'\n      }, {\n        title: 'User',\n        dataIndex: 'user',\n        key: 'user'\n      }],\n      todayDate: today\n    };\n  } //'등록하기'버튼에 대한 메소드\n\n\n  shouldComponentUpdate(props) {\n    return true;\n  } //현재 페이지 내에서 파라미터만 변경되었을 경우\n\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.match.params !== newProps.match.params) {\n      const apparatusId = this.props.match.params.apparatusId;\n      this.setState({\n        menu: apparatusId\n      });\n      this.setState({\n        realReservationList: this.getRealReservationList()\n      });\n    }\n  } //기기별 리스트: 새롭게 선택한 기기를 예약한 사람들 뽑아서 리스트 만들기    \n\n\n  render() {\n    const information = this.state.information;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Title, {\n      style: {\n        marginBottom: 35\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Apparatus\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(List, {\n      grid: {\n        gutter: 16,\n        column: 1\n      },\n      dataSource: this.state.apparatusList,\n      renderItem: item => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: this.getUrl(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, item.nickname))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.showModal_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"\\uAE30\\uAE30 \\uCD94\\uAC00\"), React.createElement(Modal, {\n      title: \"my Apparatus \\uAE30\\uAE30 \\uB4F1\\uB85D\",\n      visible: this.state.visible_1,\n      onOk: this.handleOk_1,\n      onCancel: this.handleCancel_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"\\uAE30\\uAE30\\uC774\\uB984: \", React.createElement(Input, {\n      placeholder: \"\\uB4F1\\uB85D\\uD560 \\uAE30\\uAE30?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"\\uB4F1\\uB85D\\uC790: \\uAE40\\uC9C0\\uC218 \"), \" \")), React.createElement(Col, {\n      span: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Row, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"link\",\n      onClick: this.goToLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    })), this.makeMonth(), \"\\uC6D4 \", this.makeDate(), \"\\uC77C\", React.createElement(Button, {\n      type: \"link\",\n      onClick: this.goToRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Table, {\n      size: \"small\",\n      dataSource: this.state.realReservationList,\n      columns: this.state.columns,\n      scroll: {\n        y: 240\n      },\n      pagination: {\n        pageSize: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    })), React.createElement(Row, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.showModal_2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"\\uC608\\uC57D \\uD558\\uAE30\"), React.createElement(Modal, {\n      title: \"my Apparatus \\uC608\\uC57D \\uD558\\uAE30\",\n      visible: this.state.visible_2,\n      onOk: this.handleOk_2,\n      onCancel: this.handleCancel_2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uD560 \\uAE30\\uAE30: \", this.getApparNameNow(), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uC790: \\uAE40\\uC9C0\\uC218\"), \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uD560 \\uC2DC\\uAC04: (\\uC608\\uC57D\\uC740 30\\uBD84 \\uB2E8\\uC704\\uB85C\\uB9CC \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4) \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }), \"from \", React.createElement(TimePicker, {\n      defaultValue: moment('12:00', this.state.format),\n      format: this.state.foramt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), \" to \", React.createElement(TimePicker, {\n      defaultValue: moment('14:00', this.state.format),\n      format: this.state.foramt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      type: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.showModal_3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"my\\uC608\\uC57D \\uC0AD\\uC81C\\uD558\\uAE30\"), React.createElement(Modal, {\n      title: \"my \\uC608\\uC57D \\uC0AD\\uC81C\\uD558\\uAE30\",\n      visible: this.state.visible_3,\n      onOk: this.handleOk_3,\n      onCancel: this.handleCancel_3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"   \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \" ----- \\uC544\\uB798 \\uC815\\uBCF4\\uC758 \\uC608\\uC57D\\uC744 \\uC0AD\\uC81C \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C? -----\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"\\uC608\\uC57D \\uAE30\\uAE30: \", this.getApparNameNow(), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uC790: \\uAE40\\uC9C0\\uC218\"), \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"\\uC608\\uC57D \\uC2DC\\uAC04:  \\uC2DC\\uBD80\\uD130  \\uC2DC\\uAE4C\\uC9C0 \")))))));\n  }\n\n}\n\nexport default Apparatus;","map":{"version":3,"sources":["C:\\Users\\user\\git\\ChemicalManagementApplication\\Dev\\Front\\src\\components\\Apparatus.js"],"names":["React","Component","Typography","Icon","Row","Col","Button","Modal","Divider","Table","Card","List","Input","TimePicker","Link","moment","Title","Apparatus","constructor","props","state","showModal_1","console","log","visible_1","setState","handleOk_1","e","handleCancel_1","showModal_2","visible_2","handleOk_2","handleCancel_2","showModal_3","visible_3","handleOk_3","handleCancel_3","getbyApparList","byAppar","i","reservationList","length","one","apparatusId","menu","push","getRealReservationList","newList","byApparList","newOne","time","j","start","startTime","end","endTime","user","getUrl","id","url","goToLeft","newday","Date","todayDate","setDate","getDate","month","date","realReservationList","goToRight","makeMonth","getMonth","makeDate","getApparNameNow","n","m","apparatusList","nickname","handleRemove","del","splice","match","params","today","format","columns","title","dataIndex","key","shouldComponentUpdate","componentWillReceiveProps","newProps","render","information","marginBottom","margin","gutter","column","item","y","pageSize","foramt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,EAAqCC,MAArC,EAA6CC,KAA7C,EAAoDC,OAApD,EAA6DC,KAA7D,EAAmEC,IAAnE,EAAyEC,IAAzE,EAA+EC,KAA/E,EAAsFC,UAAtF,QAAuG,MAAvG;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;MAEQC,K,GAAUd,U,CAAVc,K;;AAER,MAAMC,SAAN,SAAwBhB,SAAxB,CAAkC;AAG9BiB,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAFlBC,KAEkB,GAFV,EAEU;;AAAA,SAuFlBC,WAvFkB,GAuFL,MAAK;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,SAAvB;AACA,WAAKC,QAAL,CAAc;AACVD,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA5FiB;;AAAA,SA6FlBE,UA7FkB,GA6FNC,CAAC,IAAG;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVD,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAlGiB;;AAAA,SAmGlBI,cAnGkB,GAmGFD,CAAC,IAAG;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVD,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAxGiB;;AAAA,SA0GlBK,WA1GkB,GA0GL,MAAK;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWU,SAAvB;AACA,WAAKL,QAAL,CAAc;AACVK,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA/GiB;;AAAA,SAgHlBC,UAhHkB,GAgHNJ,CAAC,IAAG;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVK,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KArHiB;;AAAA,SAsHlBE,cAtHkB,GAsHFL,CAAC,IAAG;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVK,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA3HiB;;AAAA,SA6HlBG,WA7HkB,GA6HJ,MAAM;AAChBX,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWc,SAAvB;AACA,WAAKT,QAAL,CAAc;AACVS,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAlIiB;;AAAA,SAmIlBC,UAnIkB,GAmILR,CAAC,IAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVS,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAxIiB;;AAAA,SAyIlBE,cAzIkB,GAyIDT,CAAC,IAAI;AAClBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVS,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA9IiB;;AAAA,SAmKlBG,cAnKkB,GAmKD,MAAM;AACnB,UAAIC,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnB,KAAL,CAAWoB,eAAX,CAA2BC,MAA/C,EAAuDF,CAAC,EAAxD,EAA4D;AACxD,YAAIG,GAAG,GAAG,EAAV;AACAA,QAAAA,GAAG,GAAG,KAAKtB,KAAL,CAAWoB,eAAX,CAA2BD,CAA3B,CAAN;;AACA,YAAIG,GAAG,CAACC,WAAJ,IAAmB,KAAKvB,KAAL,CAAWwB,IAAlC,EAAwC;AACpCN,UAAAA,OAAO,CAACO,IAAR,CAAaH,GAAb;AACH;AACJ;;AACD,aAAQJ,OAAR;AACH,KA7KiB;;AAAA,SAgLlBQ,sBAhLkB,GAgLO,MAAM;AAC3B,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,WAAW,GAAG,EAAlB;AACAA,MAAAA,WAAW,GAAG,KAAKX,cAAL,EAAd;;AAEA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,YAAIU,MAAM,GAAG,EAAb;AACA,YAAIC,IAAI,GAAGX,CAAC,GAAG,CAAf;AACAU,QAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBC,IAAjB;AACAD,QAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,EAAjB;;AACA,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACP,MAAhC,EAAwCU,CAAC,EAAzC,EAA6C;AACzC,cAAIT,GAAG,GAAG,EAAV;AACAA,UAAAA,GAAG,GAAGM,WAAW,CAACG,CAAD,CAAjB;AACA,cAAIC,KAAK,GAAGV,GAAG,CAACW,SAAhB;AACA,cAAIC,GAAG,GAAGZ,GAAG,CAACa,OAAd;;AACA,cAAIH,KAAK,IAAIF,IAAT,IAAiBA,IAAI,GAAGI,GAA5B,EAAiC;AAC7BL,YAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBP,GAAG,CAACc,IAArB;AACA;AACH;AACJ;;AACDT,QAAAA,OAAO,CAACF,IAAR,CAAaI,MAAb;AACH;;AACD,aAAQF,OAAR;AACH,KAvMiB;;AAAA,SAwMlBU,MAxMkB,GAwMRC,EAAD,IAAQ;AACb,YAAMC,GAAG,GAAG,gBAAgBD,EAA5B;AACA,aAAQC,GAAR;AACH,KA3MiB;;AAAA,SA6MlBC,QA7MkB,GA6MP,MAAM;AACb,UAAIC,MAAM,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,MAAM,GAAG,KAAKzC,KAAL,CAAW2C,SAApB;AACAF,MAAAA,MAAM,CAACG,OAAP,CAAeH,MAAM,CAACI,OAAP,KAAiB,CAAhC;AACA,WAAKxC,QAAL,CAAc;AACVsC,QAAAA,SAAS,EAAIF,MADH;AAEVrB,QAAAA,eAAe,EAAC,CACZ;AACIG,UAAAA,WAAW,EAAE,CADjB;AAEIuB,UAAAA,KAAK,EAAE,EAFX;AAGIC,UAAAA,IAAI,EAAE,EAHV;AAIId,UAAAA,SAAS,EAAE,CAJf;AAKIE,UAAAA,OAAO,EAAE,EALb;AAMIC,UAAAA,IAAI,EAAE;AANV,SADY,EASZ;AACIb,UAAAA,WAAW,EAAE,CADjB;AAEIuB,UAAAA,KAAK,EAAE,EAFX;AAGIC,UAAAA,IAAI,EAAE,EAHV;AAIId,UAAAA,SAAS,EAAE,CAJf;AAKIE,UAAAA,OAAO,EAAE,EALb;AAMIC,UAAAA,IAAI,EAAE;AANV,SATY,EAiBZ;AACIb,UAAAA,WAAW,EAAE,CADjB;AAEIuB,UAAAA,KAAK,EAAE,EAFX;AAGIC,UAAAA,IAAI,EAAE,EAHV;AAIId,UAAAA,SAAS,EAAE,EAJf;AAKIE,UAAAA,OAAO,EAAE,EALb;AAMIC,UAAAA,IAAI,EAAE;AANV,SAjBY;AAFN,OAAd;AA6BA,WAAK/B,QAAL,CAAc;AACV2C,QAAAA,mBAAmB,EAAG,KAAKtB,sBAAL;AADZ,OAAd;AAGH,KAjPiB;;AAAA,SAmPlBuB,SAnPkB,GAmPN,MAAM;AACd,UAAIR,MAAM,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,MAAM,GAAG,KAAKzC,KAAL,CAAW2C,SAApB;AACAF,MAAAA,MAAM,CAACG,OAAP,CAAeH,MAAM,CAACI,OAAP,KAAiB,CAAhC;AACA,WAAKxC,QAAL,CAAc;AACVsC,QAAAA,SAAS,EAAIF,MADH;AAEVrB,QAAAA,eAAe,EAAC,CACZ;AACIG,UAAAA,WAAW,EAAE,CADjB;AAEIuB,UAAAA,KAAK,EAAE,EAFX;AAGIC,UAAAA,IAAI,EAAE,EAHV;AAIId,UAAAA,SAAS,EAAE,CAJf;AAKIE,UAAAA,OAAO,EAAE,EALb;AAMIC,UAAAA,IAAI,EAAE;AANV,SADY,EASZ;AACIb,UAAAA,WAAW,EAAE,CADjB;AAEIuB,UAAAA,KAAK,EAAE,EAFX;AAGIC,UAAAA,IAAI,EAAE,EAHV;AAIId,UAAAA,SAAS,EAAE,EAJf;AAKIE,UAAAA,OAAO,EAAE,EALb;AAMIC,UAAAA,IAAI,EAAE;AANV,SATY,EAiBZ;AACIb,UAAAA,WAAW,EAAE,CADjB;AAEIuB,UAAAA,KAAK,EAAE,EAFX;AAGIC,UAAAA,IAAI,EAAE,EAHV;AAIId,UAAAA,SAAS,EAAE,EAJf;AAKIE,UAAAA,OAAO,EAAE,EALb;AAMIC,UAAAA,IAAI,EAAE;AANV,SAjBY;AAFN,OAAd;AA6BA,WAAK/B,QAAL,CAAc;AAAC2C,QAAAA,mBAAmB,EAAG,KAAKtB,sBAAL;AAAvB,OAAd;AACH,KArRiB;;AAAA,SAuRlBwB,SAvRkB,GAuRN,MAAM;AACd,UAAIT,MAAM,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,MAAM,GAAG,KAAKzC,KAAL,CAAW2C,SAApB;AACA,aAAQF,MAAM,CAACU,QAAP,KAAkB,CAA1B;AACH,KA3RiB;;AAAA,SA4RlBC,QA5RkB,GA4RP,MAAM;AACb,UAAIX,MAAM,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,MAAM,GAAG,KAAKzC,KAAL,CAAW2C,SAApB;AACA,aAAQF,MAAM,CAACI,OAAP,EAAR;AACH,KAhSiB;;AAAA,SAkSlBQ,eAlSkB,GAkSD,MAAI;AACjB,UAAIC,CAAC,GAAG,KAAKtD,KAAL,CAAWwB,IAAnB;AACA8B,MAAAA,CAAC,IAAE,CAAH;AACA,UAAIC,CAAC,GAAG,KAAKvD,KAAL,CAAWwD,aAAX,CAAyBF,CAAzB,EAA4BG,QAApC;AACA,aAAQF,CAAR;AACH,KAvSiB;;AAAA,SAySlBG,YAzSkB,GAySJvC,CAAD,IAAK;AACd,UAAIQ,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,GAAG,KAAK3B,KAAL,CAAWoB,eAArB;AACA,UAAIuC,GAAG,GAAG,CAAV;;AACA,WAAI,IAAIxC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGQ,OAAO,CAACN,MAA3B,EAAmCF,CAAC,EAApC,EAAuC;AACnC,YAAIQ,OAAO,CAACR,CAAD,CAAP,CAAWiB,IAAX,IAAmB,OAAvB,EAA+B;AAAE;AAC7BuB,UAAAA,GAAG,GAAGxC,CAAN;AAAS;AACZ;AACJ;;AACDQ,MAAAA,OAAO,CAACiC,MAAR,CAAeD,GAAf,EAAmB,CAAnB;AACA,WAAKtD,QAAL,CAAc;AACVe,QAAAA,eAAe,EAAEO;AADP,OAAd;AAGA,WAAKtB,QAAL,CAAc;AACV2C,QAAAA,mBAAmB,EAAE,KAAKtB,sBAAL;AADX,OAAd;AAGH,KAzTiB;;AAAA,UAENH,WAFM,GAEU,KAAKxB,KAAL,CAAW8D,KAAX,CAAiBC,MAF3B,CAENvC,WAFM,EAGd;;AACA,QAAIwC,KAAK,GAAG,IAAIrB,IAAJ,EAAZ;AACA,SAAK1C,KAAL,GAAa;AACTI,MAAAA,SAAS,EAAE,KADF;AACS;AAClBM,MAAAA,SAAS,EAAE,KAFF;AAES;AAClBI,MAAAA,SAAS,EAAE,KAHF;AAGS;AAClBU,MAAAA,IAAI,EAAED,WAJG;AAKTyC,MAAAA,MAAM,EAAE,OALC;AAMTR,MAAAA,aAAa,EAAE,CACX;AACIlB,QAAAA,EAAE,EAAE,CADR;AAEImB,QAAAA,QAAQ,EAAE;AAFd,OADW,EAIR;AACCnB,QAAAA,EAAE,EAAE,CADL;AAECmB,QAAAA,QAAQ,EAAE;AAFX,OAJQ,EAOR;AACCnB,QAAAA,EAAE,EAAE,CADL;AAECmB,QAAAA,QAAQ,EAAE;AAFX,OAPQ,EAUR;AACCnB,QAAAA,EAAE,EAAE,CADL;AAECmB,QAAAA,QAAQ,EAAE;AAFX,OAVQ,EAaR;AACCnB,QAAAA,EAAE,EAAE,CADL;AAECmB,QAAAA,QAAQ,EAAE;AAFX,OAbQ,CANN;AAwBTrC,MAAAA,eAAe,EAAC,CACZ;AACIG,QAAAA,WAAW,EAAE,CADjB;AAEIuB,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIId,QAAAA,SAAS,EAAE,CAJf;AAKIE,QAAAA,OAAO,EAAE,EALb;AAMIC,QAAAA,IAAI,EAAE;AANV,OADY,EASZ;AACIb,QAAAA,WAAW,EAAE,CADjB;AAEIuB,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIId,QAAAA,SAAS,EAAE,CAJf;AAKIE,QAAAA,OAAO,EAAE,EALb;AAMIC,QAAAA,IAAI,EAAE;AANV,OATY,EAiBZ;AACIb,QAAAA,WAAW,EAAE,CADjB;AAEIuB,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIId,QAAAA,SAAS,EAAE,CAJf;AAKIE,QAAAA,OAAO,EAAE,EALb;AAMIC,QAAAA,IAAI,EAAE;AANV,OAjBY,EAyBZ;AACIb,QAAAA,WAAW,EAAE,CADjB;AAEIuB,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIId,QAAAA,SAAS,EAAE,EAJf;AAKIE,QAAAA,OAAO,EAAE,EALb;AAMIC,QAAAA,IAAI,EAAE;AANV,OAzBY,EAiCZ;AACIb,QAAAA,WAAW,EAAC,CADhB;AAEIuB,QAAAA,KAAK,EAAC,EAFV;AAGIC,QAAAA,IAAI,EAAC,EAHT;AAIId,QAAAA,SAAS,EAAE,EAJf;AAKIE,QAAAA,OAAO,EAAE,EALb;AAMIC,QAAAA,IAAI,EAAE;AANV,OAjCY,CAxBP;AAkET6B,MAAAA,OAAO,EAAG,CACN;AACIC,QAAAA,KAAK,EAAE,MADX;AAEIC,QAAAA,SAAS,EAAE,MAFf;AAGIC,QAAAA,GAAG,EAAE;AAHT,OADM,EAMN;AACIF,QAAAA,KAAK,EAAE,MADX;AAEIC,QAAAA,SAAS,EAAC,MAFd;AAGIC,QAAAA,GAAG,EAAC;AAHR,OANM,CAlED;AA8ETzB,MAAAA,SAAS,EAAGoB;AA9EH,KAAb;AAgFH,GAxF6B,CAyF9B;;;AAyDAM,EAAAA,qBAAqB,CAACtE,KAAD,EAAQ;AACzB,WAAO,IAAP;AACH,GApJ6B,CAqJ9B;;;AACAuE,EAAAA,yBAAyB,CAACC,QAAD,EAAW;AAChC,QAAI,KAAKxE,KAAL,CAAW8D,KAAX,CAAiBC,MAAjB,KAA4BS,QAAQ,CAACV,KAAT,CAAeC,MAA/C,EAAuD;AAAA,YAC3CvC,WAD2C,GAC3B,KAAKxB,KAAL,CAAW8D,KAAX,CAAiBC,MADU,CAC3CvC,WAD2C;AAEnD,WAAKlB,QAAL,CACI;AACImB,QAAAA,IAAI,EAAED;AADV,OADJ;AAKA,WAAKlB,QAAL,CAAc;AACV2C,QAAAA,mBAAmB,EAAE,KAAKtB,sBAAL;AADX,OAAd;AAKH;AACJ,GApK6B,CAqK9B;;;AAyJA8C,EAAAA,MAAM,GAAG;AAAA,UACGC,WADH,GACmB,KAAKzE,KADxB,CACGyE,WADH;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAR,CAFJ,EAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAG;AAAV,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OADV;AAEI,MAAA,UAAU,EAAE,KAAK7E,KAAL,CAAWwD,aAF3B;AAGI,MAAA,UAAU,EAAEsB,IAAI,IACZ,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,KAAKzC,MAAL,CAAYyC,IAAI,CAACxC,EAAjB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBwC,IAAI,CAACrB,QAA7B,CAAhC,CADJ,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAWI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKxD,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAXJ,EAcI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,wCADV;AAEI,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWI,SAFxB;AAGI,MAAA,IAAI,EAAE,KAAKE,UAHf;AAII,MAAA,QAAQ,EAAE,KAAKE,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAS,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,kCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAPJ,MAdJ,CADJ,EAyBI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAE,KAAKgC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,CADJ,EAES,KAAKU,SAAL,EAFT,aAE6B,KAAKE,QAAL,EAF7B,YAGI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAE,KAAKH,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6C,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7C,CAHJ,CADJ,EAMI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,UAAU,EAAI,KAAKjD,KAAL,CAAWgD,mBAA7C;AAAkE,MAAA,OAAO,EAAE,KAAKhD,KAAL,CAAWiE,OAAtF;AAA+F,MAAA,MAAM,EAAE;AAAEc,QAAAA,CAAC,EAAE;AAAL,OAAvG;AAAmH,MAAA,UAAU,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CANJ,EAUI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAG,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKvE,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADR,EAIQ,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,wCADV;AAEI,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWU,SAFxB;AAGI,MAAA,IAAI,EAAE,KAAKC,UAHf;AAII,MAAA,QAAQ,EAAE,KAAKC,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAY,KAAKyC,eAAL,EAAZ,MANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAPJ,OAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kIAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC,EAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArC,WACS,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAE1D,MAAM,CAAC,OAAD,EAAS,KAAKK,KAAL,CAAWgE,MAApB,CAAhC;AAA6D,MAAA,MAAM,EAAE,KAAKhE,KAAL,CAAWiF,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADT,UACsG,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAEtF,MAAM,CAAC,OAAD,EAAS,KAAKK,KAAL,CAAWgE,MAApB,CAAhC;AAA6D,MAAA,MAAM,EAAE,KAAKhE,KAAL,CAAWiF,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtG,CARJ,CAJR,EAeQ,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfR,EAgBQ,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKpE,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAhBR,EAmBQ,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,0CADV;AAEI,MAAA,OAAO,EAAE,KAAKb,KAAL,CAAWc,SAFxB;AAGI,MAAA,IAAI,EAAE,KAAKC,UAHf;AAII,MAAA,QAAQ,EAAE,KAAKC,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4HALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAW,KAAKqC,eAAL,EAAX,MANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAPJ,OAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EARJ,CAnBR,CAVJ,CAFJ,CAzBJ,CAJJ,CADJ;AAgFH;;AAhZ6B;;AAmZlC,eAAexD,SAAf","sourcesContent":["import React, { Component } from 'react'; \r\nimport { Typography, Icon, Row, Col, Button, Modal, Divider, Table,Card, List, Input, TimePicker} from 'antd'\r\nimport { Link } from \"react-router-dom\"; \r\nimport moment from 'moment';\r\n\r\nconst { Title } = Typography; \r\n\r\nclass Apparatus extends Component {\r\n    state = {\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        const { apparatusId } = this.props.match.params;\r\n        //오늘 날짜 받아오기\r\n        var today = new Date();\r\n        this.state = {\r\n            visible_1: false, //'등록하기' 모달\r\n            visible_2: false, // '예약하기' 모달\r\n            visible_3: false, // '본인 예약 삭제확인' 모달\r\n            menu: apparatusId,\r\n            format: 'HH:mm',\r\n            apparatusList: [\r\n                {\r\n                    id: 1,\r\n                    nickname: \"apparatus1\" \r\n                }, {\r\n                    id: 2,\r\n                    nickname: \"apparatus2\"\r\n                }, {\r\n                    id: 3,\r\n                    nickname: \"apparatus3\"\r\n                }, {\r\n                    id: 4,\r\n                    nickname: \"apparatus4\"\r\n                }, {\r\n                    id: 5,\r\n                    nickname: \"apparatus5\"\r\n                }\r\n            ],\r\n            reservationList:[\r\n                {   \r\n                    apparatusId: 1,\r\n                    month: 11,\r\n                    date: 23,\r\n                    startTime: 8,\r\n                    endTime: 11,\r\n                    user: 'Yeong mo'\r\n                },\r\n                {   \r\n                    apparatusId: 2,\r\n                    month: 11,\r\n                    date: 23,\r\n                    startTime: 9,\r\n                    endTime: 11,\r\n                    user: 'Ji su'\r\n                },\r\n                {   \r\n                    apparatusId: 3,\r\n                    month: 11,\r\n                    date: 23,\r\n                    startTime: 8,\r\n                    endTime: 10,\r\n                    user: 'Joo young'\r\n                },\r\n                {   \r\n                    apparatusId: 2,\r\n                    month: 11,\r\n                    date: 23,\r\n                    startTime: 13,\r\n                    endTime: 16,\r\n                    user: 'Han bin'\r\n                },\r\n                {\r\n                    apparatusId:1,\r\n                    month:11,\r\n                    date:23,\r\n                    startTime: 12,\r\n                    endTime: 15,\r\n                    user: 'Eun mu'\r\n                }\r\n            ],\r\n            columns : [\r\n                {\r\n                    title: 'Time',\r\n                    dataIndex: 'time', \r\n                    key: 'time',\r\n                },\r\n                {\r\n                    title: 'User',\r\n                    dataIndex:'user',\r\n                    key:'user',\r\n                },\r\n             ],\r\n            todayDate : today,   \r\n         }     \r\n    }    \r\n    //'등록하기'버튼에 대한 메소드\r\n    showModal_1 =()=> {\r\n        console.log(this.state.visible_1)\r\n        this.setState({\r\n            visible_1: true\r\n        })\r\n    }\r\n    handleOk_1 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_1: false,\r\n        })\r\n    }\r\n    handleCancel_1 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_1: false,\r\n        })\r\n    }\r\n    //'예약하기'버튼에 대한 메소드\r\n    showModal_2 =()=> {\r\n        console.log(this.state.visible_2)\r\n        this.setState({\r\n            visible_2: true\r\n        })\r\n    }\r\n    handleOk_2 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_2: false,\r\n        })\r\n    }\r\n    handleCancel_2 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_2: false,\r\n        })\r\n    }\r\n    //'본인 예약 삭제'버튼에 대한 메소드\r\n    showModal_3 = () => {\r\n        console.log(this.state.visible_3)\r\n        this.setState({\r\n            visible_3: true\r\n        })\r\n    }\r\n    handleOk_3 = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_3: false,\r\n        })\r\n    }\r\n    handleCancel_3 = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_3: false,\r\n        })\r\n    }\r\n    shouldComponentUpdate(props) {\r\n        return true\r\n    }\r\n    //현재 페이지 내에서 파라미터만 변경되었을 경우\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.match.params !== newProps.match.params) {\r\n            const { apparatusId } = this.props.match.params;\r\n            this.setState(\r\n                {\r\n                    menu: apparatusId\r\n                })\r\n\r\n            this.setState({\r\n                realReservationList: this.getRealReservationList()\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n    //기기별 리스트: 새롭게 선택한 기기를 예약한 사람들 뽑아서 리스트 만들기    \r\n    getbyApparList = () => {\r\n        var byAppar = []\r\n        for (var i = 0; i < this.state.reservationList.length; i++) {\r\n            var one = {}\r\n            one = this.state.reservationList[i]\r\n            if (one.apparatusId == this.state.menu) {\r\n                byAppar.push(one);\r\n            }\r\n        }\r\n        return (byAppar)\r\n    }\r\n    // 해당 기기 하나를 선택 후 그 기기 예약자만 뽑아서 \r\n    // newList의 각 시간행에 맞게 예약자 이름을 열에 저장하는 함수 \r\n    getRealReservationList = () => {\r\n        var newList = [];\r\n        var byApparList = []\r\n        byApparList = this.getbyApparList();\r\n\r\n        for (var i = 0; i < 15; i++) {\r\n            var newOne = {}\r\n            var time = i + 8;\r\n            newOne['time'] = time\r\n            newOne['user'] = ''\r\n            for (var j = 0; j < byApparList.length; j++) {\r\n                var one = {}\r\n                one = byApparList[j]\r\n                var start = one.startTime\r\n                var end = one.endTime\r\n                if (start <= time && time < end) {\r\n                    newOne['user'] = one.user;\r\n                    break;\r\n                }\r\n            }\r\n            newList.push(newOne)\r\n        }\r\n        return (newList)\r\n    }\r\n    getUrl = (id) => {\r\n        const url = '/apparatus/' + id;\r\n        return (url)\r\n    }\r\n    //날짜 왼쪽으로 이동하면 해당 날짜에 해당하는 새로운 표출할 예약 필터링\r\n    goToLeft = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        newday.setDate(newday.getDate()-1);\r\n        this.setState({\r\n            todayDate :  newday,\r\n            reservationList:[\r\n                {   \r\n                    apparatusId: 1,\r\n                    month: 11,\r\n                    date: 22,\r\n                    startTime: 8,\r\n                    endTime: 10,\r\n                    user: 'Hyeok ju'\r\n                },\r\n                {   \r\n                    apparatusId: 2,\r\n                    month: 11,\r\n                    date: 22,\r\n                    startTime: 8,\r\n                    endTime: 10,\r\n                    user: 'Eun mu'\r\n                },\r\n                {   \r\n                    apparatusId: 3,\r\n                    month: 11,\r\n                    date: 22,\r\n                    startTime: 13,\r\n                    endTime: 16,\r\n                    user: 'Ji su'\r\n                }\r\n            ],\r\n        })\r\n        this.setState({\r\n            realReservationList : this.getRealReservationList()\r\n        })\r\n    }\r\n    //날짜 오른쪽 으로 이동하면 해당 날짜에 해당하는 새로운 표출할 예약 필터링\r\n    goToRight = () => { \r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        newday.setDate(newday.getDate()+1);\r\n        this.setState({\r\n            todayDate :  newday,\r\n            reservationList:[\r\n                {   \r\n                    apparatusId: 1,\r\n                    month: 11,\r\n                    date: 24,\r\n                    startTime: 9,\r\n                    endTime: 12,\r\n                    user: 'Han bin'\r\n                },\r\n                {   \r\n                    apparatusId: 1,\r\n                    month: 11,\r\n                    date: 24,\r\n                    startTime: 15,\r\n                    endTime: 17,\r\n                    user: 'Yeong mo'\r\n                },\r\n                {   \r\n                    apparatusId: 3,\r\n                    month: 11,\r\n                    date: 24,\r\n                    startTime: 13,\r\n                    endTime: 16,\r\n                    user: 'Ji su'\r\n                }\r\n            ],\r\n        })\r\n        this.setState({realReservationList : this.getRealReservationList(),})\r\n    }\r\n\r\n    makeMonth = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        return (newday.getMonth()+1)\r\n    }\r\n    makeDate = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        return (newday.getDate())\r\n    }\r\n    // 현재 누른 기기의 이름을 받아오는 함수\r\n    getApparNameNow =()=>{\r\n        var n = this.state.menu;\r\n        n-=1;\r\n        var m = this.state.apparatusList[n].nickname\r\n        return (m)\r\n    }\r\n    // 본인 예약 삭제할 수 있는 함수 \r\n    handleRemove=(i)=>{\r\n        var newList = [];\r\n        newList = this.state.reservationList; \r\n        var del = 0;\r\n        for(var i = 0; i < newList.length; i++){\r\n            if (newList[i].user == 'Ji su'){ //유저 네임은 로그인 정보 받아오는 걸로 바꾸기\r\n                del = i; break;\r\n            }\r\n        }\r\n        newList.splice(del,1)\r\n        this.setState({\r\n            reservationList: newList,\r\n        })\r\n        this.setState({\r\n            realReservationList: this.getRealReservationList(),\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { information } = this.state;\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <center><Title style={{ marginBottom: 35 }}>Apparatus</Title></center>\r\n\r\n                <Row >\r\n                    <Col span={8} style={{margin : 10}} >\r\n                        {/* 기기들 목록 */}\r\n                        <List\r\n                            grid={{ gutter: 16, column: 1 }}\r\n                            dataSource={this.state.apparatusList}\r\n                            renderItem={item => (\r\n                                <List.Item>\r\n                                    <Link to={this.getUrl(item.id)}><Button type=\"primary\">{item.nickname}</Button></Link>\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                        <Button onClick={this.showModal_1}>\r\n                            기기 추가\r\n                        </Button>\r\n                        <Modal\r\n                            title=\"my Apparatus 기기 등록\"\r\n                            visible={this.state.visible_1}\r\n                            onOk={this.handleOk_1}\r\n                            onCancel={this.handleCancel_1}\r\n                        >\r\n                            <p>기기이름: <Input placeholder=\"등록할 기기?\" /></p>\r\n                            <p>등록자: 김지수 </p> {/*login user 정보 받으면 넣기*/}\r\n                        </Modal>\r\n                    </Col>\r\n                    <Col span={13} >\r\n                        {/* 기기들 상세 창 */}\r\n                        <Card>\r\n                            <Row span={3}>  \r\n                                <Button type=\"link\" onClick={this.goToLeft}><Icon type=\"arrow-left\" /></Button>\r\n                                    {this.makeMonth()}월 {this.makeDate()}일\r\n                                <Button type=\"link\" onClick={this.goToRight}><Icon type=\"arrow-right\" /></Button>\r\n                            </Row>\r\n                            <Row span={18}>\r\n                                {/*시간과 예약현황을 표로 나타내기*/}\r\n                                <Table size='small' dataSource = {this.state.realReservationList} columns={this.state.columns} scroll={{ y: 240 }} pagination={{ pageSize: 50 }}/>\r\n                            </Row>\r\n                            <Row span ={2}>\r\n                                    <Button onClick={this.showModal_2}>\r\n                                        예약 하기\r\n                                    </Button>\r\n                                    <Modal\r\n                                        title=\"my Apparatus 예약 하기\"\r\n                                        visible={this.state.visible_2}\r\n                                        onOk={this.handleOk_2}\r\n                                        onCancel={this.handleCancel_2}\r\n                                    >\r\n                                        <p>예약할 기기: {this.getApparNameNow()} </p> \r\n                                        <p>예약자: 김지수</p> {/*login user 정보 받으면 넣기*/}\r\n                                        <p>예약할 시간: (예약은 30분 단위로만 가능합니다) <br/><br/>\r\n                                            from <TimePicker defaultValue={moment('12:00',this.state.format)} format={this.state.foramt}/> to <TimePicker defaultValue={moment('14:00',this.state.format)} format={this.state.foramt}/></p>\r\n                                    </Modal>\r\n                                    <Divider type=\"vertical\" />\r\n                                    <Button onClick={this.showModal_3}>\r\n                                        my예약 삭제하기\r\n                                    </Button>\r\n                                    <Modal\r\n                                        title=\"my 예약 삭제하기\"\r\n                                        visible={this.state.visible_3}\r\n                                        onOk={this.handleOk_3}\r\n                                        onCancel={this.handleCancel_3}\r\n                                    >   <p> ----- 아래 정보의 예약을 삭제 하시겠습니까? -----</p>\r\n                                        <p>예약 기기: {this.getApparNameNow()} </p> \r\n                                        <p>예약자: 김지수</p> {/*login user 정보 받으면 넣기*/}\r\n                                        <p>예약 시간:  시부터  시까지 </p>\r\n                                    </Modal>\r\n                                \r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Apparatus;\r\n"]},"metadata":{},"sourceType":"module"}