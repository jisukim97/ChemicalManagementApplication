{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\git\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\src\\\\components\\\\Apparatus.js\";\nimport React, { Component } from 'react';\nimport { Typography, Icon, Row, Col, Button, Modal, Table, Card, List, Input, TimePicker } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport moment from 'moment';\nconst Title = Typography.Title;\n\nclass Apparatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.showModal_1 = () => {\n      console.log(this.state.visible_1);\n      this.setState({\n        visible_1: true\n      });\n    };\n\n    this.handleOk_1 = e => {\n      console.log(e);\n      this.setState({\n        visible_1: false\n      });\n    };\n\n    this.handleCancel_1 = e => {\n      console.log(e);\n      this.setState({\n        visible_1: false\n      });\n    };\n\n    this.showModal_2 = () => {\n      console.log(this.state.visible_1);\n      this.setState({\n        visible_2: true\n      });\n    };\n\n    this.handleOk_2 = e => {\n      console.log(e);\n      this.setState({\n        visible_2: false\n      });\n    };\n\n    this.handleCancel_2 = e => {\n      console.log(e);\n      this.setState({\n        visible_2: false\n      });\n    };\n\n    this.getRealReservationList = () => {\n      var newList = [];\n\n      for (var i = 0; i < 15; i++) {\n        var newOne = {};\n        var time = i + 8;\n        var timeString = time += '';\n        newOne[timeString] = time;\n        newOne['user'] = '';\n\n        for (var a in this.state.realReservation) {\n          var start = a.startTime;\n          var end = a.endTime;\n\n          if (start <= time && time <= end) {\n            newOne['user'] = a.user;\n            break;\n          }\n        }\n\n        newList.push(newOne);\n      }\n\n      this.setState({\n        realReservationList: newList\n      });\n    };\n\n    this.getUrl = id => {\n      const url = '/apparatus/' + id;\n      return url;\n    };\n\n    this.goToLeft = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      newday.setDate(newday.getDate() - 1);\n      this.setState({\n        todayDate: newday,\n        reservationList: [{\n          apparatusNum: 1,\n          month: 11,\n          date: 24,\n          startTime: 8,\n          endTime: 10,\n          user: 'Hyeok ju'\n        }, {\n          apparatusNum: 2,\n          month: 11,\n          date: 24,\n          startTime: 8,\n          endTime: 10,\n          user: 'Eun mu'\n        }, {\n          apparatusNum: 3,\n          month: 11,\n          date: 24,\n          startTime: 13,\n          endTime: 16,\n          user: 'Zeeegu'\n        }]\n      });\n    };\n\n    this.goToRight = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      newday.setDate(newday.getDate() + 1);\n      this.setState({\n        todayDate: newday,\n        reservationList: [{\n          apparatusNum: 1,\n          month: 11,\n          date: 25,\n          startTime: 9,\n          endTime: 12,\n          user: 'Han bin'\n        }, {\n          apparatusNum: 1,\n          month: 11,\n          date: 25,\n          startTime: 15,\n          endTime: 17,\n          user: 'Yeong no'\n        }, {\n          apparatusNum: 3,\n          month: 11,\n          date: 25,\n          startTime: 13,\n          endTime: 16,\n          user: 'Zeeegu'\n        }]\n      });\n    };\n\n    this.makeMonth = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      return newday.getMonth() + 1;\n    };\n\n    this.makeDate = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      return newday.getDate();\n    };\n\n    const apparatusId = this.props.match.params.apparatusId; //오늘 날짜 받아오기\n\n    var today = new Date();\n    this.state = {\n      visible_1: false,\n      //'등록하기' 모달\n      visible_2: false,\n      // '예약하기' 모달\n      menu: apparatusId,\n      format: 'HH:mm',\n      apparatusList: [{\n        id: 1,\n        name: \"apparatus1\"\n      }, {\n        id: 2,\n        name: \"apparatus2\"\n      }, {\n        id: 3,\n        name: \"apparatus3\"\n      }, {\n        id: 4,\n        name: \"apparatus4\"\n      }, {\n        id: 5,\n        name: \"apparatus5\"\n      }],\n      reservationList: [{\n        apparatusId: 1,\n        month: 11,\n        date: 22,\n        startTime: 8,\n        endTime: 10,\n        user: 'Yeong mo'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 22,\n        startTime: 8,\n        endTime: 10,\n        user: 'Joo young'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 22,\n        startTime: 13,\n        endTime: 16,\n        user: 'Han bin'\n      }],\n      columns: [{\n        title: 'Time',\n        dataIndex: 'time',\n        key: 'time'\n      }, {\n        title: 'User',\n        dataIndex: 'user',\n        key: 'user'\n      }],\n      todayDate: today\n    };\n  } //'등록하기'버튼에 대한 메소드\n\n\n  shouldComponentUpdate(props) {\n    return true;\n  } //현재 페이지 내에서 파라미터만 변경되었을 경우\n\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.match.params !== newProps.match.params) {\n      const apparatusId = this.props.match.params.apparatusId;\n      this.setState({\n        menu: apparatusId\n      });\n      console.log(this.state.menu + '변경된 기기 번호 ');\n    }\n\n    console.log(this.state.menu + '변경된 기기 번호 (if문바깥) '); //기기별 리스트: 새롭게 선택한 기기를 예약한 사람들 뽑아서 리스트 만들기\n\n    var byAppar = [];\n\n    for (var i = 0; i < this.state.reservationList.length; i++) {\n      var one = {};\n      one = this.state.reservationList[i];\n\n      if (one.apparatusId == this.state.menu) {\n        byAppar.push(one);\n      }\n    }\n\n    console.log(byAppar[0].user);\n    console.log(byAppar.apparatusId);\n    this.setState({\n      realReservation: byAppar\n    });\n  } // 해당 기기 하나를 선택 후 그 기기 예약자만 뽑아서 \n  // newList의 각 시간행에 맞게 예약자 이름을 열에 저장하는 함수 \n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Title, {\n      style: {\n        marginBottom: 35\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Apparatus\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(List, {\n      grid: {\n        gutter: 16,\n        column: 1\n      },\n      dataSource: this.state.apparatusList,\n      renderItem: item => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: this.getUrl(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, item.name))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.showModal_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"\\uAE30\\uAE30 \\uCD94\\uAC00\"), React.createElement(Modal, {\n      title: \"my Apparatus \\uAE30\\uAE30 \\uB4F1\\uB85D\",\n      visible: this.state.visible_1,\n      onOk: this.handleOk_1,\n      onCancel: this.handleCancel_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"\\uAE30\\uAE30\\uC774\\uB984: \", React.createElement(Input, {\n      placeholder: \"\\uB4F1\\uB85D\\uD560 \\uAE30\\uAE30?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"\\uB4F1\\uB85D\\uC790: \\uAE40\\uC9C0\\uC218 \"), \" \")), React.createElement(Col, {\n      span: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Row, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"link\",\n      onClick: this.goToLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })), this.makeMonth(), \"\\uC6D4 \", this.makeDate(), \"\\uC77C\", React.createElement(Button, {\n      type: \"link\",\n      onClick: this.goToRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      span: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Table, {\n      dataSource: this.state.realReservationList,\n      columns: this.state.columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    })), React.createElement(Row, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.showModal_2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"\\uC608\\uC57D \\uD558\\uAE30\"), React.createElement(Modal, {\n      title: \"my Apparatus \\uC608\\uC57D \\uD558\\uAE30\",\n      visible: this.state.visible_2,\n      onOk: this.handleOk_2,\n      onCancel: this.handleCancel_2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uD560 \\uAE30\\uAE30: \", this.state.apparatusList[this.state.menu - 1].name, \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uC790: \\uAE40\\uC9C0\\uC218\"), \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uD560 \\uC2DC\\uAC04: (\\uC608\\uC57D\\uC740 30\\uBD84 \\uB2E8\\uC704\\uB85C\\uB9CC \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4) \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), \"from \", React.createElement(TimePicker, {\n      defaultValue: moment('12:00', this.state.format),\n      format: this.state.foramt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }), \" to \", React.createElement(TimePicker, {\n      defaultValue: moment('14:00', this.state.format),\n      format: this.state.foramt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default Apparatus;","map":{"version":3,"sources":["C:\\Users\\user\\git\\ChemicalManagementApplication\\Dev\\Front\\src\\components\\Apparatus.js"],"names":["React","Component","Typography","Icon","Row","Col","Button","Modal","Table","Card","List","Input","TimePicker","Link","moment","Title","Apparatus","constructor","props","state","showModal_1","console","log","visible_1","setState","handleOk_1","e","handleCancel_1","showModal_2","visible_2","handleOk_2","handleCancel_2","getRealReservationList","newList","i","newOne","time","timeString","a","realReservation","start","startTime","end","endTime","user","push","realReservationList","getUrl","id","url","goToLeft","newday","Date","todayDate","setDate","getDate","reservationList","apparatusNum","month","date","goToRight","makeMonth","getMonth","makeDate","apparatusId","match","params","today","menu","format","apparatusList","name","columns","title","dataIndex","key","shouldComponentUpdate","componentWillReceiveProps","newProps","byAppar","length","one","render","marginBottom","margin","gutter","column","item","foramt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; \r\nimport { Typography, Icon, Row, Col, Button, Modal, Table,Card, List, Input, TimePicker} from 'antd'\r\nimport { Link } from \"react-router-dom\"; \r\nimport moment from 'moment';\r\n\r\nconst { Title } = Typography; \r\n\r\nclass Apparatus extends Component {\r\n\r\n    state = {\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        const { apparatusId } = this.props.match.params;\r\n        //오늘 날짜 받아오기\r\n        var today = new Date();\r\n        this.state = {\r\n            visible_1: false, //'등록하기' 모달\r\n            visible_2: false, // '예약하기' 모달\r\n            menu: apparatusId,\r\n            format: 'HH:mm',\r\n            apparatusList: [\r\n                {\r\n                    id: 1,\r\n                    name: \"apparatus1\" \r\n                }, {\r\n                    id: 2,\r\n                    name: \"apparatus2\"\r\n                }, {\r\n                    id: 3,\r\n                    name: \"apparatus3\"\r\n                }, {\r\n                    id: 4,\r\n                    name: \"apparatus4\"\r\n                }, {\r\n                    id: 5,\r\n                    name: \"apparatus5\"\r\n                }\r\n            ],\r\n            reservationList:[\r\n                {   \r\n                    apparatusId: 1,\r\n                    month: 11,\r\n                    date: 22,\r\n                    startTime: 8,\r\n                    endTime: 10,\r\n                    user: 'Yeong mo'\r\n                },\r\n                {   \r\n                    apparatusId: 2,\r\n                    month: 11,\r\n                    date: 22,\r\n                    startTime: 8,\r\n                    endTime: 10,\r\n                    user: 'Joo young'\r\n                },\r\n                {   \r\n                    apparatusId: 2,\r\n                    month: 11,\r\n                    date: 22,\r\n                    startTime: 13,\r\n                    endTime: 16,\r\n                    user: 'Han bin'\r\n                }\r\n            ],\r\n            columns : [\r\n                {\r\n                    title: 'Time',\r\n                    dataIndex: 'time',\r\n                    key: 'time',\r\n                },\r\n                {\r\n                    title: 'User',\r\n                    dataIndex:'user',\r\n                    key:'user',\r\n                }\r\n            ],\r\n            todayDate : today,\r\n\r\n           \r\n         }\r\n        \r\n    }\r\n    \r\n\r\n    //'등록하기'버튼에 대한 메소드\r\n    showModal_1 =()=> {\r\n        console.log(this.state.visible_1)\r\n        this.setState({\r\n            visible_1: true\r\n        })\r\n    }\r\n    handleOk_1 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_1: false,\r\n        })\r\n    }\r\n    handleCancel_1 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_1: false,\r\n        })\r\n    }\r\n    //'예약하기'버튼에 대한 메소드\r\n    showModal_2 =()=> {\r\n        console.log(this.state.visible_1)\r\n        this.setState({\r\n            visible_2: true\r\n        })\r\n    }\r\n    handleOk_2 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_2: false,\r\n        })\r\n    }\r\n    handleCancel_2 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_2: false,\r\n        })\r\n    }\r\n    \r\n    shouldComponentUpdate(props) {\r\n        return true\r\n    }\r\n\r\n    //현재 페이지 내에서 파라미터만 변경되었을 경우\r\n    componentWillReceiveProps(newProps){\r\n        if (this.props.match.params !== newProps.match.params){\r\n            const { apparatusId } = this.props.match.params;\r\n            this.setState({menu : apparatusId})\r\n            console.log(this.state.menu + '변경된 기기 번호 ')\r\n        }\r\n        console.log(this.state.menu+'변경된 기기 번호 (if문바깥) ')\r\n      //기기별 리스트: 새롭게 선택한 기기를 예약한 사람들 뽑아서 리스트 만들기\r\n        var byAppar = []\r\n        for(var i =0; i<this.state.reservationList.length ; i++){\r\n            var one ={}\r\n            one = this.state.reservationList[i]\r\n            if (one.apparatusId == this.state.menu) {\r\n                byAppar.push(one);\r\n            }\r\n        }\r\n        console.log(byAppar[0].user)\r\n        console.log(byAppar.apparatusId)\r\n        this.setState({ realReservation: byAppar })\r\n\r\n    }\r\n\r\n    // 해당 기기 하나를 선택 후 그 기기 예약자만 뽑아서 \r\n    // newList의 각 시간행에 맞게 예약자 이름을 열에 저장하는 함수 \r\n    getRealReservationList =()=> {\r\n        var newList = [];   \r\n        for (var i = 0; i < 15; i++) {\r\n            var newOne = {}\r\n            var time = i + 8;\r\n            var timeString = time += ''\r\n            newOne[timeString] = time\r\n            newOne['user'] = ''\r\n            for (var a in this.state.realReservation) {\r\n                var start = a.startTime\r\n                var end = a.endTime\r\n                if(start <= time &&  time <= end){\r\n                    newOne['user'] = a.user; break;\r\n                }\r\n            }\r\n            newList.push(newOne)\r\n        }\r\n        this.setState({realReservationList: newList})\r\n    }\r\n\r\n    getUrl = (id) => {\r\n        const url = '/apparatus/' + id;\r\n        return (url)\r\n    }\r\n\r\n    goToLeft = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        newday.setDate(newday.getDate()-1);\r\n        this.setState({\r\n            todayDate :  newday,\r\n            reservationList:[\r\n                {   \r\n                    apparatusNum: 1,\r\n                    month: 11,\r\n                    date: 24,\r\n                    startTime: 8,\r\n                    endTime: 10,\r\n                    user: 'Hyeok ju'\r\n                },\r\n                {   \r\n                    apparatusNum: 2,\r\n                    month: 11,\r\n                    date: 24,\r\n                    startTime: 8,\r\n                    endTime: 10,\r\n                    user: 'Eun mu'\r\n                },\r\n                {   \r\n                    apparatusNum: 3,\r\n                    month: 11,\r\n                    date: 24,\r\n                    startTime: 13,\r\n                    endTime: 16,\r\n                    user: 'Zeeegu'\r\n                }\r\n            ]\r\n        })\r\n    }\r\n    goToRight = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        newday.setDate(newday.getDate()+1);\r\n        this.setState({\r\n            todayDate :  newday,\r\n            reservationList:[\r\n                {   \r\n                    apparatusNum: 1,\r\n                    month: 11,\r\n                    date: 25,\r\n                    startTime: 9,\r\n                    endTime: 12,\r\n                    user: 'Han bin'\r\n                },\r\n                {   \r\n                    apparatusNum: 1,\r\n                    month: 11,\r\n                    date: 25,\r\n                    startTime: 15,\r\n                    endTime: 17,\r\n                    user: 'Yeong no'\r\n                },\r\n                {   \r\n                    apparatusNum: 3,\r\n                    month: 11,\r\n                    date: 25,\r\n                    startTime: 13,\r\n                    endTime: 16,\r\n                    user: 'Zeeegu'\r\n                }\r\n            ]\r\n        })\r\n    }\r\n    makeMonth = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        return (newday.getMonth()+1)\r\n    }\r\n    makeDate = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        return (newday.getDate())\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <center><Title style={{ marginBottom: 35 }}>Apparatus</Title></center>\r\n\r\n                <Row >\r\n                    <Col span={8} style={{margin : 10}} >\r\n                        {/* 기기들 목록 */}\r\n                        <List\r\n                            grid={{ gutter: 16, column: 1 }}\r\n                            dataSource={this.state.apparatusList}\r\n                            renderItem={item => (\r\n                                <List.Item>\r\n                                    <Link to={this.getUrl(item.id)}><Button type=\"primary\">{item.name}</Button></Link>\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                        <Button onClick={this.showModal_1}>\r\n                            기기 추가\r\n                        </Button>\r\n                        <Modal\r\n                            title=\"my Apparatus 기기 등록\"\r\n                            visible={this.state.visible_1}\r\n                            onOk={this.handleOk_1}\r\n                            onCancel={this.handleCancel_1}\r\n                        >\r\n                            <p>기기이름: <Input placeholder=\"등록할 기기?\" /></p>\r\n                            <p>등록자: 김지수 </p> {/*login user 정보 받으면 넣기*/}\r\n                        </Modal>\r\n                    </Col>\r\n                    <Col span={13} >\r\n                        {/* 기기들 상세 창 */}\r\n                        <Card>\r\n                            <Row span={3}>  \r\n                                <Button type=\"link\" onClick={this.goToLeft}><Icon type=\"arrow-left\" /></Button>\r\n                                    {this.makeMonth()}월 {this.makeDate()}일\r\n                                <Button type=\"link\" onClick={this.goToRight}><Icon type=\"arrow-right\" /></Button>\r\n                            </Row>\r\n                            <Row span={13}>\r\n                                \r\n                                {/*시간과 예약현황을 표로 나타내기*/}\r\n                                <Table dataSource = {this.state.realReservationList} columns={this.state.columns}/>\r\n                            </Row>\r\n                            <Row span={2}>\r\n                                    <Button onClick={this.showModal_2}>\r\n                                        예약 하기\r\n                                    </Button>\r\n                                    <Modal\r\n                                        title=\"my Apparatus 예약 하기\"\r\n                                        visible={this.state.visible_2}\r\n                                        onOk={this.handleOk_2}\r\n                                        onCancel={this.handleCancel_2}\r\n                                    >\r\n                                        <p>예약할 기기: {this.state.apparatusList[this.state.menu-1].name} </p>\r\n                                        <p>예약자: 김지수</p> {/*login user 정보 받으면 넣기*/}\r\n                                        <p>예약할 시간: (예약은 30분 단위로만 가능합니다) <br/><br/>\r\n                                            from <TimePicker defaultValue={moment('12:00',this.state.format)} format={this.state.foramt}/> to <TimePicker defaultValue={moment('14:00',this.state.format)} format={this.state.foramt}/></p>\r\n                                    </Modal>\r\n                                \r\n                                \r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Apparatus;\r\n"]},"metadata":{},"sourceType":"module"}