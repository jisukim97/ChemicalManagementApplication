{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\git\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\src\\\\components\\\\Apparatus.js\";\nimport React, { Component } from 'react';\nimport { Typography, Icon, Row, Col, Button, Modal, Table, Card, List, Input, AutoComplete } from 'antd';\nimport { Link } from \"react-router-dom\";\nconst Title = Typography.Title;\n\nclass Apparatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.showModal_1 = () => {\n      console.log(this.state.visible_1);\n      this.setState({\n        visible_1: true\n      });\n    };\n\n    this.handleOk_1 = e => {\n      console.log(e);\n      this.setState({\n        visible_1: false\n      });\n    };\n\n    this.handleCancel_1 = e => {\n      console.log(e);\n      this.setState({\n        visible_1: false\n      });\n    };\n\n    this.showModal_2 = () => {\n      console.log(this.state.visible_1);\n      this.setState({\n        visible_2: true\n      });\n    };\n\n    this.handleOk_2 = e => {\n      console.log(e);\n      this.setState({\n        visible_2: false\n      });\n    };\n\n    this.handleCancel_2 = e => {\n      console.log(e);\n      this.setState({\n        visible_2: false\n      });\n    };\n\n    this.getRealReservationList = () => {\n      var newList = [];\n\n      for (var a in this.realReservation) {\n        var start = a.startTime;\n        var end = a.endTime;\n\n        for (var i = 0; i < 15; i++) {\n          var newOne = {};\n          var time = i + 8;\n          var timeString = time += '';\n          newOne[timeString] = time;\n\n          if (start <= time <= end) {\n            newOne['user'] = a.user;\n          } else {\n            newOne['user'] = '';\n          }\n\n          newList.push(newOne);\n        }\n      }\n\n      this.setState({\n        realReservationList: newList\n      });\n    };\n\n    this.getUrl = id => {\n      const url = '/apparatus/' + id;\n      return url;\n    };\n\n    this.goToLeft = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      newday.setDate(newday.getDate() - 1);\n      this.setState({\n        todayDate: newday,\n        reservationList: [{\n          apparatusNum: 1,\n          month: 11,\n          date: 24,\n          startTime: 8,\n          endTime: 10,\n          user: '혁주'\n        }, {\n          apparatusNum: 2,\n          month: 11,\n          date: 24,\n          startTime: 8,\n          endTime: 10,\n          user: '은무'\n        }, {\n          apparatusNum: 3,\n          month: 11,\n          date: 24,\n          startTime: 13,\n          endTime: 16,\n          user: '지수'\n        }]\n      });\n    };\n\n    this.goToRight = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      newday.setDate(newday.getDate() + 1);\n      this.setState({\n        todayDate: newday,\n        reservationList: [{\n          apparatusNum: 1,\n          month: 11,\n          date: 25,\n          startTime: 9,\n          endTime: 12,\n          user: '한빈'\n        }, {\n          apparatusNum: 1,\n          month: 11,\n          date: 25,\n          startTime: 15,\n          endTime: 17,\n          user: '영모'\n        }, {\n          apparatusNum: 3,\n          month: 11,\n          date: 25,\n          startTime: 13,\n          endTime: 16,\n          user: '지수'\n        }]\n      });\n    };\n\n    this.makeMonth = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      return newday.getMonth() + 1;\n    };\n\n    this.makeDate = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      return newday.getDate();\n    };\n\n    const apparatusId = this.props.match.params.apparatusId; //오늘 날짜 받아오기\n\n    var today = new Date();\n    this.state = {\n      visible_1: false,\n      //'등록하기' 모달\n      visible_2: false,\n      // '예약하기' 모달\n      menu: apparatusId,\n      apparatusList: [{\n        id: 1,\n        name: \"apparatus1\"\n      }, {\n        id: 2,\n        name: \"apparatus2\"\n      }, {\n        id: 3,\n        name: \"apparatus3\"\n      }, {\n        id: 4,\n        name: \"apparatus4\"\n      }, {\n        id: 5,\n        name: \"apparatus5\"\n      }],\n      reservationList: [{\n        apparatusNum: 1,\n        month: 11,\n        date: 23,\n        startTime: 8,\n        endTime: 10,\n        user: '영모'\n      }, {\n        apparatusNum: 2,\n        month: 11,\n        date: 23,\n        startTime: 8,\n        endTime: 10,\n        user: '주영'\n      }, {\n        apparatusNum: 2,\n        month: 11,\n        date: 23,\n        startTime: 13,\n        endTime: 16,\n        user: '한빈'\n      }],\n      columns: [{\n        title: 'Time',\n        dataIndex: 'time',\n        key: 'time'\n      }, {\n        title: 'User',\n        dataIndex: 'user',\n        key: 'user'\n      }],\n      todayDate: today\n    };\n  } //'등록하기'버튼에 대한 메소드\n\n\n  shouldComponentUpdate(props) {\n    return true;\n  } //현재 페이지 내에서 파라미터만 변경되었을 경우\n\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.match.params !== newProps.match.params) {\n      const apparatusId = this.props.match.params.apparatusId;\n      this.setState({\n        menu: apparatusId\n      });\n    } //기기별 리스트: 새롭게 선택한 기기를 예약한 사람들 뽑아서 리스트 만들기\n\n\n    var byAppar = [];\n\n    for (var one in this.state.reservationList) {\n      if (one.apparatusNum === this.state.menu) {\n        byAppar.push(one);\n      }\n    }\n\n    this.setState({\n      realReservation: byAppar\n    });\n  } // 해당 기기 하나를 선택 후 그 기기 예약자만 뽑아서 \n  // newList의 각 시간행에 맞게 예약자 이름을 열에 저장하는 함수 \n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Title, {\n      style: {\n        marginBottom: 35\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Apparatus\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(List, {\n      grid: {\n        gutter: 16,\n        column: 1\n      },\n      dataSource: this.state.apparatusList,\n      renderItem: item => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: this.getUrl(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, item.name))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.showModal_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"\\uAE30\\uAE30 \\uCD94\\uAC00\"), React.createElement(Modal, {\n      title: \"my Apparatus \\uAE30\\uAE30 \\uB4F1\\uB85D\",\n      visible: this.state.visible_1,\n      onOk: this.handleOk_1,\n      onCancel: this.handleCancel_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"\\uAE30\\uAE30\\uC774\\uB984: \", React.createElement(Input, {\n      placeholder: \"\\uB4F1\\uB85D\\uD560 \\uAE30\\uAE30?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"\\uB4F1\\uB85D\\uC790: \\uAE40\\uC9C0\\uC218 \"), \" \")), React.createElement(Col, {\n      span: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Row, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"link\",\n      onClick: this.goToLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    })), this.makeMonth(), \"\\uC6D4 \", this.makeDate(), \"\\uC77C\", React.createElement(Button, {\n      type: \"link\",\n      onClick: this.goToRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      span: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Table, {\n      dataSource: this.realReservationList,\n      columns: this.columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })), React.createElement(Row, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 19,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.showModal_2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"\\uC608\\uC57D \\uD558\\uAE30\"), React.createElement(Modal, {\n      title: \"my Apparatus \\uC608\\uC57D \\uD558\\uAE30\",\n      visible: this.state.visible_2,\n      onOk: this.handleOk_2,\n      onCancel: this.handleCancel_2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uD560 \\uAE30\\uAE30: \", React.createElement(Input, {\n      placeholder: \"\\uC608\\uC57D\\uD560 \\uAE30\\uAE30?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uC790: \\uAE40\\uC9C0\\uC218\"), \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uD560 \\uC2DC\\uAC04: \"))), React.createElement(Col, {\n      span: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"X\")))))));\n  }\n\n}\n\nexport default Apparatus;","map":{"version":3,"sources":["C:\\Users\\user\\git\\ChemicalManagementApplication\\Dev\\Front\\src\\components\\Apparatus.js"],"names":["React","Component","Typography","Icon","Row","Col","Button","Modal","Table","Card","List","Input","AutoComplete","Link","Title","Apparatus","constructor","props","state","showModal_1","console","log","visible_1","setState","handleOk_1","e","handleCancel_1","showModal_2","visible_2","handleOk_2","handleCancel_2","getRealReservationList","newList","a","realReservation","start","startTime","end","endTime","i","newOne","time","timeString","user","push","realReservationList","getUrl","id","url","goToLeft","newday","Date","todayDate","setDate","getDate","reservationList","apparatusNum","month","date","goToRight","makeMonth","getMonth","makeDate","apparatusId","match","params","today","menu","apparatusList","name","columns","title","dataIndex","key","shouldComponentUpdate","componentWillReceiveProps","newProps","byAppar","one","render","marginBottom","margin","gutter","column","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; \r\nimport { Typography, Icon, Row, Col, Button, Modal, Table,Card, List, Input, AutoComplete} from 'antd'\r\nimport { Link } from \"react-router-dom\"; \r\n\r\nconst { Title } = Typography; \r\n\r\nclass Apparatus extends Component {\r\n\r\n    state = {\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        const { apparatusId } = this.props.match.params;\r\n        //오늘 날짜 받아오기\r\n        var today = new Date();\r\n        this.state = {\r\n            visible_1: false, //'등록하기' 모달\r\n            visible_2: false, // '예약하기' 모달\r\n            menu: apparatusId,\r\n            apparatusList: [\r\n                {\r\n                    id: 1,\r\n                    name: \"apparatus1\" \r\n                }, {\r\n                    id: 2,\r\n                    name: \"apparatus2\"\r\n                }, {\r\n                    id: 3,\r\n                    name: \"apparatus3\"\r\n                }, {\r\n                    id: 4,\r\n                    name: \"apparatus4\"\r\n                }, {\r\n                    id: 5,\r\n                    name: \"apparatus5\"\r\n                }\r\n            ],\r\n            reservationList:[\r\n                {   \r\n                    apparatusNum: 1,\r\n                    month: 11,\r\n                    date: 23,\r\n                    startTime: 8,\r\n                    endTime: 10,\r\n                    user: '영모'\r\n                },\r\n                {   \r\n                    apparatusNum: 2,\r\n                    month: 11,\r\n                    date: 23,\r\n                    startTime: 8,\r\n                    endTime: 10,\r\n                    user: '주영'\r\n                },\r\n                {   \r\n                    apparatusNum: 2,\r\n                    month: 11,\r\n                    date: 23,\r\n                    startTime: 13,\r\n                    endTime: 16,\r\n                    user: '한빈'\r\n                }\r\n            ],\r\n            columns : [\r\n                {\r\n                    title: 'Time',\r\n                    dataIndex: 'time',\r\n                    key: 'time',\r\n                },\r\n                {\r\n                    title: 'User',\r\n                    dataIndex:'user',\r\n                    key:'user',\r\n                }\r\n            ],\r\n            todayDate : today,\r\n           \r\n         }\r\n        \r\n    }\r\n    \r\n\r\n    //'등록하기'버튼에 대한 메소드\r\n    showModal_1 =()=> {\r\n        console.log(this.state.visible_1)\r\n        this.setState({\r\n            visible_1: true\r\n        })\r\n    }\r\n    handleOk_1 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_1: false,\r\n        })\r\n    }\r\n    handleCancel_1 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_1: false,\r\n        })\r\n    }\r\n    //'예약하기'버튼에 대한 메소드\r\n    showModal_2 =()=> {\r\n        console.log(this.state.visible_1)\r\n        this.setState({\r\n            visible_2: true\r\n        })\r\n    }\r\n    handleOk_2 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_2: false,\r\n        })\r\n    }\r\n    handleCancel_2 =e=> {\r\n        console.log(e);\r\n        this.setState({\r\n            visible_2: false,\r\n        })\r\n    }\r\n    \r\n    shouldComponentUpdate(props) {\r\n        return true\r\n    }\r\n\r\n    //현재 페이지 내에서 파라미터만 변경되었을 경우\r\n    componentWillReceiveProps(newProps){\r\n        if (this.props.match.params !== newProps.match.params){\r\n            const { apparatusId } = this.props.match.params;\r\n            this.setState({menu : apparatusId})\r\n        }\r\n        //기기별 리스트: 새롭게 선택한 기기를 예약한 사람들 뽑아서 리스트 만들기\r\n        var byAppar = []\r\n        for(var one in this.state.reservationList){\r\n            if( one.apparatusNum === this.state.menu){\r\n                byAppar.push(one);\r\n            }\r\n        }\r\n        this.setState({realReservation: byAppar}) \r\n        \r\n    }\r\n\r\n    // 해당 기기 하나를 선택 후 그 기기 예약자만 뽑아서 \r\n    // newList의 각 시간행에 맞게 예약자 이름을 열에 저장하는 함수 \r\n    getRealReservationList =()=> {\r\n        var newList = [];   \r\n        for(var a in this.realReservation){\r\n            var start = a.startTime\r\n            var end = a.endTime\r\n            for(var i=0; i<15;i++){\r\n                var newOne = {}\r\n                var time = i+8;\r\n                var timeString = time+=''\r\n                newOne[timeString] = time\r\n                if(start <= time <= end){\r\n                    newOne['user'] = a.user\r\n                }\r\n                else {\r\n                    newOne['user'] = ''\r\n                }\r\n                newList.push(newOne)\r\n            }\r\n        }\r\n        this.setState({realReservationList: newList })\r\n    }\r\n\r\n    getUrl = (id) => {\r\n        const url = '/apparatus/' + id;\r\n        return (url)\r\n    }\r\n\r\n    goToLeft = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        newday.setDate(newday.getDate()-1);\r\n        this.setState({\r\n            todayDate :  newday,\r\n            reservationList:[\r\n                {   \r\n                    apparatusNum: 1,\r\n                    month: 11,\r\n                    date: 24,\r\n                    startTime: 8,\r\n                    endTime: 10,\r\n                    user: '혁주'\r\n                },\r\n                {   \r\n                    apparatusNum: 2,\r\n                    month: 11,\r\n                    date: 24,\r\n                    startTime: 8,\r\n                    endTime: 10,\r\n                    user: '은무'\r\n                },\r\n                {   \r\n                    apparatusNum: 3,\r\n                    month: 11,\r\n                    date: 24,\r\n                    startTime: 13,\r\n                    endTime: 16,\r\n                    user: '지수'\r\n                }\r\n            ]\r\n        })\r\n    }\r\n    goToRight = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        newday.setDate(newday.getDate()+1);\r\n        this.setState({\r\n            todayDate :  newday,\r\n            reservationList:[\r\n                {   \r\n                    apparatusNum: 1,\r\n                    month: 11,\r\n                    date: 25,\r\n                    startTime: 9,\r\n                    endTime: 12,\r\n                    user: '한빈'\r\n                },\r\n                {   \r\n                    apparatusNum: 1,\r\n                    month: 11,\r\n                    date: 25,\r\n                    startTime: 15,\r\n                    endTime: 17,\r\n                    user: '영모'\r\n                },\r\n                {   \r\n                    apparatusNum: 3,\r\n                    month: 11,\r\n                    date: 25,\r\n                    startTime: 13,\r\n                    endTime: 16,\r\n                    user: '지수'\r\n                }\r\n            ]\r\n        })\r\n    }\r\n    makeMonth = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        return (newday.getMonth()+1)\r\n    }\r\n    makeDate = () => {\r\n        var newday = new Date();\r\n        newday = this.state.todayDate;\r\n        return (newday.getDate())\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <center><Title style={{ marginBottom: 35 }}>Apparatus</Title></center>\r\n\r\n                <Row >\r\n                    <Col span={8} style={{margin : 10}} >\r\n                        {/* 기기들 목록 */}\r\n                        <List\r\n                            grid={{ gutter: 16, column: 1 }}\r\n                            dataSource={this.state.apparatusList}\r\n                            renderItem={item => (\r\n                                <List.Item>\r\n                                    <Link to={this.getUrl(item.id)}><Button type=\"primary\">{item.name}</Button></Link>\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                        <Button onClick={this.showModal_1}>\r\n                            기기 추가\r\n                        </Button>\r\n                        <Modal\r\n                            title=\"my Apparatus 기기 등록\"\r\n                            visible={this.state.visible_1}\r\n                            onOk={this.handleOk_1}\r\n                            onCancel={this.handleCancel_1}\r\n                        >\r\n                            <p>기기이름: <Input placeholder=\"등록할 기기?\" /></p>\r\n                            <p>등록자: 김지수 </p> {/*login user 정보 받으면 넣기*/}\r\n                        </Modal>\r\n                    </Col>\r\n                    <Col span={13} >\r\n                        {/* 기기들 상세 창 */}\r\n                        <Card>\r\n                            <Row span={3}>  \r\n                                <Button type=\"link\" onClick={this.goToLeft}><Icon type=\"arrow-left\" /></Button>\r\n                                    {this.makeMonth()}월 {this.makeDate()}일\r\n                                <Button type=\"link\" onClick={this.goToRight}><Icon type=\"arrow-right\" /></Button>\r\n                            </Row>\r\n                            <Row span={13}>\r\n                                \r\n                                {/*시간과 예약현황을 표로 나타내기*/}\r\n                                <Table dataSource = {this.realReservationList} columns={this.columns}/>\r\n                            </Row>\r\n                            <Row span={2}>\r\n                                <Col span={19}>\r\n                                    <Button onClick={this.showModal_2}>\r\n                                        예약 하기\r\n                                    </Button>\r\n                                    <Modal\r\n                                        title=\"my Apparatus 예약 하기\"\r\n                                        visible={this.state.visible_2}\r\n                                        onOk={this.handleOk_2}\r\n                                        onCancel={this.handleCancel_2}\r\n                                    >\r\n                                        <p>예약할 기기: <Input placeholder=\"예약할 기기?\" /></p>\r\n                                        <p>예약자: 김지수</p> {/*login user 정보 받으면 넣기*/}\r\n                                        <p>예약할 시간: </p>\r\n                                    </Modal>\r\n                                </Col>\r\n                                <Col span={5}>\r\n                                    <Button type=\"link\">\r\n                                        X\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Apparatus;\r\n"]},"metadata":{},"sourceType":"module"}