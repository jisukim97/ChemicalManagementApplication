{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBB34\\\\Desktop\\\\git\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\src\\\\components\\\\Alarm.js\";\nimport React, { Component } from 'react';\nimport { Typography, Row, Col, Button, Card, List } from 'antd';\nimport AlarmInfoList from './AlarmInfoList';\nimport { getUser, getLab } from '../authentication';\nconst Title = Typography.Title;\n\nclass Alarm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.handleRemove = (id, alarmType) => {\n      const information = this.state.information;\n      var type1Count = this.state.alarm1Count;\n      var type2Count = this.state.alarm2Count;\n      var type3Count = this.state.alarm3Count;\n\n      if (alarmType === 1) {\n        type1Count -= 1;\n      } else if (alarmType === 2) {\n        type2Count -= 1;\n      } else if (alarmType === 3) {\n        type3Count -= 1;\n      }\n\n      const new_information = information.filter(info => info.id !== id);\n      this.setState({\n        information: new_information,\n        alarm1Count: type1Count,\n        alarm2Count: type2Count,\n        alarm3Count: type3Count\n      });\n    };\n\n    this.makeTypeOne = () => {\n      this.setState({\n        type: 1\n      });\n    };\n\n    this.makeTypeTwo = () => {\n      this.setState({\n        type: 2\n      });\n    };\n\n    this.makeTypeThree = () => {\n      this.setState({\n        type: 3\n      });\n    };\n\n    this.function = value => {\n      return value.alarmType;\n    };\n\n    this.getContent = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(AlarmInfoList, {\n        data: this.state.information.filter(value => value.alarmType === this.state.type),\n        onRemove: this.handleRemove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }));\n    };\n\n    var _information = [{\n      id: 0,\n      name: 'Hexane',\n      date: '15',\n      alarmType: 1\n    }, {\n      id: 1,\n      name: 'Benzene',\n      date: '7',\n      alarmType: 1\n    }, {\n      id: 2,\n      name: 'Benzeqwene',\n      date: '10',\n      alarmType: 1\n    }, {\n      id: 3,\n      name: 'Hexane',\n      place: '냉장고',\n      alarmType: 2\n    }, {\n      id: 4,\n      name: 'Benzene',\n      place: '오븐',\n      alarmType: 2\n    }, {\n      id: 5,\n      name: 'Benzeqwene',\n      place: '가방',\n      alarmType: 2\n    }, {\n      id: 6,\n      name: 'Benzenecwqwsd',\n      use: '3개월',\n      disease: \"간암\",\n      alarmType: 3\n    }, {\n      id: 7,\n      name: 'Benzeqweneefefccv',\n      use: '6개월',\n      disease: \"췌장암\",\n      alarmType: 3\n    }];\n    fetch('http://13.124.122.246:8080/alarm/' + getUser().id, {\n      method: GET,\n      //'GET', 'POST', 'DELETE' 등등\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      //안고쳐도 됨\n      body: JSON.stringify('body로 담을 정보') //여기에다가 body 넣어주기\n\n    }).then(response => {\n      if (response.status === 200) {\n        //이건 정상적으로 된 경우\n        return response.json();\n      } else {//이건 오류난 경우 -> 여기서 뭐뭐를 처리해 준다\n      }\n    }).then(response => {\n      //여기서 response로 온 값들을 state로 저장 하던가 해서 쓰면 됨\n      //여기서 response라는걸 제대로 쓸 수 있음\n      console.log(response); // 이걸로 개발자모드에서 어떠한 응답이 왔는지 확인 가능\n\n      var list = []; //response.alarms\n\n      var information = list.map(alarm => {});\n      this.setStatus({\n        information: information\n      }); //이렇게 응답받은 실제 결과를 status로 저장해 줄 수 있음\n    });\n    this.state = {\n      type: 1,\n      information: _information,\n      alarm1Count: _information.filter(value => value.alarmType === 1).length,\n      alarm2Count: _information.filter(value => value.alarmType === 2).length,\n      alarm3Count: _information.filter(value => value.alarmType === 3).length\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Title, {\n      style: {\n        marginBottom: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Alarm\")), React.createElement(Row, {\n      style: {\n        marginBottom: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Button, {\n      Button: true,\n      shape: \"circle\",\n      icon: \"bell\",\n      onClick: this.makeTypeOne,\n      style: {\n        fontSize: '25px'\n      },\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), \"\\uC720\\uD6A8\\uAE30\\uAC04 \", this.state.alarm1Count)), React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Button, {\n      Button: true,\n      shape: \"circle\",\n      icon: \"bell\",\n      onClick: this.makeTypeTwo,\n      style: {\n        fontSize: '25px'\n      },\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), \"\\uC7AC\\uACE0\\uC18C\\uC9C4 \", this.state.alarm2Count)), React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Button, {\n      Button: true,\n      shape: \"circle\",\n      icon: \"bell\",\n      onClick: this.makeTypeThree,\n      style: {\n        fontSize: '25px'\n      },\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), \"\\uC758\\uC2EC\\uC9C8\\uBCD1 \", this.state.alarm3Count))), React.createElement(Card, {\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.getContent()));\n  }\n\n}\n\nexport default Alarm;","map":{"version":3,"sources":["C:\\Users\\무\\Desktop\\git\\ChemicalManagementApplication\\Dev\\Front\\src\\components\\Alarm.js"],"names":["React","Component","Typography","Row","Col","Button","Card","List","AlarmInfoList","getUser","getLab","Title","Alarm","constructor","props","state","handleRemove","id","alarmType","information","type1Count","alarm1Count","type2Count","alarm2Count","type3Count","alarm3Count","new_information","filter","info","setState","makeTypeOne","type","makeTypeTwo","makeTypeThree","function","value","getContent","name","date","place","use","disease","fetch","method","GET","headers","body","JSON","stringify","then","response","status","json","console","log","list","map","alarm","setStatus","length","render","marginBottom","fontSize","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Typography, Row, Col, Button, Card, List } from 'antd'\r\nimport AlarmInfoList from './AlarmInfoList';\r\nimport { getUser, getLab } from '../authentication';\r\nconst { Title } = Typography;\r\n\r\nclass Alarm extends Component {\r\n\r\n    state = {\r\n    }\r\n    \r\n   \r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var information = [\r\n            {\r\n                id: 0,\r\n                name: 'Hexane',\r\n                date: '15',\r\n                alarmType : 1\r\n              },\r\n              {\r\n                id: 1,\r\n                name: 'Benzene',\r\n                date: '7',\r\n                alarmType : 1\r\n              },\r\n              {\r\n                id: 2,\r\n                name: 'Benzeqwene',\r\n                date: '10',\r\n                alarmType : 1\r\n              },\r\n              {\r\n                id: 3,\r\n                name: 'Hexane',\r\n                place : '냉장고',\r\n                alarmType : 2\r\n              },\r\n              {\r\n                 id: 4,\r\n                 name: 'Benzene',\r\n                 place : '오븐',\r\n                 alarmType : 2\r\n              },\r\n              {\r\n                 id: 5,\r\n                 name: 'Benzeqwene',\r\n                 place : '가방',  \r\n                 alarmType : 2\r\n              },\r\n              {\r\n                  id: 6,\r\n                  name: 'Benzenecwqwsd',\r\n                  use : '3개월',\r\n                  disease : \"간암\",\r\n                  alarmType : 3\r\n               },\r\n               {\r\n                  id: 7,\r\n                  name: 'Benzeqweneefefccv',\r\n                  use : '6개월',  \r\n                  disease : \"췌장암\",\r\n                  alarmType : 3\r\n               }\r\n        ]\r\n\r\n        fetch('http://13.124.122.246:8080/alarm/' + getUser().id, {\r\n            method: GET, //'GET', 'POST', 'DELETE' 등등\r\n            headers: { 'Content-Type': 'application/json' }, //안고쳐도 됨\r\n            body: JSON.stringify('body로 담을 정보') //여기에다가 body 넣어주기\r\n        }).then(response => {\r\n            if (response.status === 200) {\r\n                //이건 정상적으로 된 경우\r\n                return response.json()\r\n            } else {\r\n                //이건 오류난 경우 -> 여기서 뭐뭐를 처리해 준다\r\n            }\r\n        }).then(response => {\r\n            //여기서 response로 온 값들을 state로 저장 하던가 해서 쓰면 됨\r\n            //여기서 response라는걸 제대로 쓸 수 있음\r\n            console.log(response) // 이걸로 개발자모드에서 어떠한 응답이 왔는지 확인 가능\r\n            var list = [] //response.alarms\r\n            var information = list.map(alarm => {\r\n                \r\n            })\r\n            this.setStatus({\r\n                information: information\r\n            })\r\n            //이렇게 응답받은 실제 결과를 status로 저장해 줄 수 있음\r\n        })\r\n\r\n        this.state = {\r\n            type : 1,\r\n            information: information,\r\n            alarm1Count : information.filter( value => value.alarmType === 1).length,\r\n            alarm2Count : information.filter( value => value.alarmType === 2).length,\r\n            alarm3Count : information.filter( value => value.alarmType === 3).length\r\n            \r\n        }\r\n    }\r\n\r\n    handleRemove = (id, alarmType) => {\r\n        const { information } = this.state;\r\n        var type1Count = this.state.alarm1Count;\r\n        var type2Count = this.state.alarm2Count;\r\n        var type3Count = this.state.alarm3Count;\r\n        if (alarmType===1){\r\n            type1Count -= 1;\r\n        }\r\n        else if (alarmType===2){\r\n            type2Count -= 1;\r\n        }\r\n        else if (alarmType===3){\r\n            type3Count -= 1;\r\n        }\r\n        const new_information = information.filter(info => info.id !==id )\r\n        this.setState({\r\n            information : new_information,\r\n            alarm1Count : type1Count,\r\n            alarm2Count : type2Count,\r\n            alarm3Count : type3Count\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    makeTypeOne = () => {\r\n        this.setState({type : 1})\r\n    }\r\n\r\n    makeTypeTwo = () => {\r\n        this.setState({type : 2})\r\n    }\r\n\r\n    makeTypeThree = () => {\r\n        this.setState({type : 3})\r\n    }\r\n\r\n    function = (value) =>{\r\n        return value.alarmType \r\n    }\r\n    \r\n    getContent = () => {\r\n        return (<div><AlarmInfoList data={this.state.information.filter( value => value.alarmType === this.state.type )} onRemove={this.handleRemove}/></div>)\r\n    }\r\n\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div>\r\n                <br />\r\n                <center><Title style={{ marginBottom: 50 }}>Alarm</Title></center>\r\n                \r\n                <Row style={{marginBottom : 30}}>\r\n                    <Col span={8}><center>\r\n                        <Button Button shape=\"circle\" icon=\"bell\" onClick={this.makeTypeOne} style={{ fontSize: '25px' }} size=\"large\"/><br/>\r\n                        유효기간 {this.state.alarm1Count}\r\n                    </center></Col>\r\n\r\n                    <Col span={8}><center>\r\n                        <Button Button shape=\"circle\" icon=\"bell\" onClick={this.makeTypeTwo} style={{ fontSize: '25px' }} size=\"large\"/><br/>\r\n                        재고소진 {this.state.alarm2Count}\r\n                    </center></Col>\r\n\r\n                    <Col span={8}><center>\r\n                        <Button Button shape=\"circle\" icon=\"bell\" onClick={this.makeTypeThree} style={{ fontSize: '25px' }} size=\"large\"/><br/>\r\n                        의심질병 {this.state.alarm3Count}\r\n                    </center></Col>\r\n                </Row>\r\n\r\n                <Card style={{margin : 10}}>\r\n                    {this.getContent()}\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Alarm;\r\n"]},"metadata":{},"sourceType":"module"}