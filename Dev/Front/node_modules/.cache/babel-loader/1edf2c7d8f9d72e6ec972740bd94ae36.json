{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/CommentModal.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button } from 'antd';\nimport { getToken } from '../authentication';\nimport CommentForm from './CommentForm';\nimport Comment from './Comment';\nimport { serverUrl } from '../setting';\n\nclass CommentModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false,\n      articleID: this.props.articleID,\n      comments: []\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n      this.loadComments();\n    };\n\n    this.handleOk = e => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCancel = e => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.loadComments = () => {\n      //http요청\n      const requesturl = serverUrl + '/comment/' + this.props.articleID;\n      fetch(requesturl, {\n        method: 'GET',\n        headers: {\n          'token': getToken()\n        }\n      }).then(response => {\n        if (response.status === 200) {\n          //성공 시\n          return response.json();\n        } else {\n          //실패\n          return null;\n        }\n      }).then(response => {\n        this.setState({\n          comments: response\n        });\n      });\n    };\n\n    this.addComment = comment => {\n      let comments = this.state.comments;\n      comments.push(comment);\n      this.setState({\n        comments: comments\n      });\n    };\n\n    this.deleteComment = comment => {\n      let comments = this.state.comments;\n      comments.splice(comments.indexOf(comment), 1);\n      this.setState({\n        comments: comments\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"default\",\n      icon: \"message\",\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"\\uB313\\uAE00\"), React.createElement(Modal, {\n      title: \"\\uB313\\uAE00\",\n      visible: this.state.visible,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      width: \"750px\",\n      footer: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Comment, {\n      articleID: this.state.articleID,\n      comments: this.state.comments,\n      deleteComment: this.deleteComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(CommentForm, {\n      loadComments: this.loadComments,\n      articleID: this.state.articleID,\n      addComment: this.addComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CommentModal;","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/CommentModal.js"],"names":["React","Component","Modal","Button","getToken","CommentForm","Comment","serverUrl","CommentModal","state","visible","articleID","props","comments","showModal","setState","loadComments","handleOk","e","handleCancel","requesturl","fetch","method","headers","then","response","status","json","addComment","comment","push","deleteComment","splice","indexOf","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button } from 'antd';\n\nimport { getToken } from '../authentication';\nimport CommentForm from './CommentForm';\nimport Comment from './Comment';\nimport { serverUrl } from '../setting'\n\nclass CommentModal extends Component {\n  state = {\n    visible: false,\n    articleID: this.props.articleID,\n    comments: []\n  };\n\n  //버튼 눌렀을 때, visible state를 바꿔 주어 렌더링 한다음, 댓글을 불러와서 state에 저장\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n    this.loadComments()\n  };\n\n  //댓글 창 없애주기\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    });\n  };\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  //댓글 불러오기\n  loadComments = () => {\n    //http요청\n    const requesturl = serverUrl + '/comment/' + this.props.articleID;\n    fetch(requesturl, {\n      method: 'GET',\n      headers: {\n        'token': getToken()\n      }\n    })\n      .then(response => {\n        if (response.status === 200) {\n          //성공 시\n          return response.json()\n        } else {\n          //실패\n          return null;\n        }\n      }).then(response => {\n        this.setState({ comments: response })\n      })\n  }\n\n  //새로 입력한 댓글을 리스트의 맨뒤에 넣어주어 렌더링\n  addComment = (comment) => {\n    let comments = this.state.comments\n    comments.push(comment)\n    this.setState({ comments: comments })\n  }\n\n  //삭제한 소식을 state의 리스트에서 삭제해 주어 다시 렌더링\n  deleteComment = (comment) => {\n    let comments = this.state.comments\n    comments.splice(comments.indexOf(comment), 1);\n    this.setState({ comments: comments })\n  }\n\n  render() {\n    return (\n      <div>\n        <Button type=\"default\" icon=\"message\" onClick={this.showModal}>댓글</Button>\n        <Modal\n          title=\"댓글\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          width=\"750px\"\n          footer={null}\n        >\n          <Comment articleID={this.state.articleID} comments={this.state.comments} deleteComment={this.deleteComment} />\n          <CommentForm loadComments={this.loadComments} articleID={this.state.articleID} addComment={this.addComment} />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default CommentModal;"]},"metadata":{},"sourceType":"module"}