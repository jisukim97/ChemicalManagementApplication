{"ast":null,"code":"var _jsxFileName = \"/Users/Jennifer/Documents/GitHub/ChemicalManagementApplication/Dev/Front/src/components/MyGroupInvite.js\";\nimport React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Modal } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport { Typography } from 'antd';\nimport { getUser, getLab } from '../authentication';\nimport { history } from '../History';\nimport { serverUrl } from '../setting';\nconst Title = Typography.Title;\n\nclass MyGroupInvite extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.searchMember = email => {\n      console.log(3);\n      console.log(email);\n      fetch(serverUrl + '/member/' + email, {\n        method: 'GET',\n        //'GET', 'POST', 'DELETE' 등등\n        headers: {\n          'Content-Type': 'application/json'\n        } //안고쳐도 됨\n\n      }).then(response => {\n        if (response.status === 200) {\n          //이건 정상적으로 된 경우\n          console.log(0);\n          console.log(response);\n          return response.json();\n        } else {\n          console.log('fetch error'); //이건 오류난 경우 -> 여기서 뭐뭐를 처리해 준다\n        }\n      }).then(response => {\n        console.log(response); // 이걸로 개발자모드에서 어떠한 응답이 왔는지 확인 가능\n\n        var a = response.member;\n        var userId = a.id;\n        var labId = getLab().id;\n        fetch(serverUrl + '/lab/' + labId + '/' + userId, {\n          method: 'PUT',\n          //'GET', 'POST', 'DELETE' 등등\n          headers: {\n            'Content-Type': 'application/json'\n          } //안고쳐도 됨\n\n        }).then(response => {\n          if (response.status === 200) {\n            //이건 정상적으로 된 경우\n            console.log(0);\n            console.log(response);\n            return response.json();\n          } else {//이건 오류난 경우 -> 여기서 뭐뭐를 처리해 준다\n          }\n        }).then(response => {});\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log(values); //values.email\n\n          this.searchMember(values.email);\n        }\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      style: {\n        margin: '10px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Title, {\n      style: {\n        marginBottom: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"my Lab \\uBA64\\uBC84 \\uCD08\\uB300\")), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        required: true,\n        message: '이메일을 입력 해 주세요!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"mail\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }),\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"\\uCD08\\uB300\"))));\n  }\n\n}\n\nexport default Form.create()(MyGroupInvite);","map":{"version":3,"sources":["/Users/Jennifer/Documents/GitHub/ChemicalManagementApplication/Dev/Front/src/components/MyGroupInvite.js"],"names":["React","Component","Form","Icon","Input","Button","Modal","Link","Typography","getUser","getLab","history","serverUrl","Title","MyGroupInvite","state","visible","showModal","setState","handleOk","e","console","log","handleCancel","searchMember","email","fetch","method","headers","then","response","status","json","a","member","userId","id","labId","handleSubmit","preventDefault","props","form","validateFields","err","values","render","getFieldDecorator","margin","marginBottom","rules","required","message","color","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Modal } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport { Typography } from 'antd';\nimport { getUser, getLab } from '../authentication';\nimport { history } from '../History';\nimport { serverUrl } from '../setting';\n\nconst { Title } = Typography;\n\nclass MyGroupInvite extends Component {\n\n  state = { visible: false };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleCancel = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  searchMember = (email) => {\n    console.log(3)\n    console.log(email)\n    fetch(serverUrl + '/member/' + email, {\n      method: 'GET', //'GET', 'POST', 'DELETE' 등등\n      headers: { 'Content-Type': 'application/json' }, //안고쳐도 됨\n  }).then(response => {\n      if (response.status === 200) {\n        //이건 정상적으로 된 경우\n        console.log(0)\n        console.log(response)\n        return response.json()\n      } else {\n        console.log('fetch error')\n        //이건 오류난 경우 -> 여기서 뭐뭐를 처리해 준다\n      }\n    }).then(response => {\n\n      console.log(response) // 이걸로 개발자모드에서 어떠한 응답이 왔는지 확인 가능\n      var a = response.member\n      var userId = a.id\n      var labId = getLab().id\n\n      fetch(serverUrl + '/lab/' + labId + '/' + userId, {\n        method: 'PUT', //'GET', 'POST', 'DELETE' 등등\n        headers: { 'Content-Type': 'application/json' }, //안고쳐도 됨\n      }).then(response => {\n        if (response.status === 200) {\n          //이건 정상적으로 된 경우\n          console.log(0)\n          console.log(response)\n          return response.json()\n        } else {\n          //이건 오류난 경우 -> 여기서 뭐뭐를 처리해 준다\n        }\n      }).then(response => {\n\n      })\n\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log(values)\n          //values.email\n          this.searchMember(values.email)\n        }\n      }\n    )\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div style={{ margin: '10px 0' }}>\n        <center><Title style={{ marginBottom: 50 }}>my Lab 멤버 초대</Title></center>\n\n        <Form onSubmit={this.handleSubmit} className=\"form\">\n          {/* 이메일 폼*/}\n          <Form.Item>\n            {getFieldDecorator('email', {\n              rules: [{ required: true, message: '이메일을 입력 해 주세요!' }],\n            })(\n              <Input\n                prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                placeholder=\"Email\"\n              />,\n            )}\n          </Form.Item>\n          <Form.Item>\n            {/*<Link to='/login/forgot' className=\"login-form-forgot\">Forgot password</Link>*/}\n            <Button type=\"primary\" htmlType=\"submit\" className=\"button\">\n              초대\n            </Button>\n            \n          </Form.Item>\n        </Form>\n\n                \n               \n               \n               \n               \n                \n                \n                {/* \n                <Form.Item>\n                    {getFieldDecorator('memberName', {\n                        rules: [{ required: true, message: '초대할 멤버 이메일을 입력해 주세요!' }],\n                    })(\n                        <Input\n                            //prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"Member Email\"\n                        />,\n                    )}\n                </Form.Item>\n                */}\n\n\n            </div>\n        );\n    }\n}\n\nexport default Form.create()(MyGroupInvite);\n"]},"metadata":{},"sourceType":"module"}