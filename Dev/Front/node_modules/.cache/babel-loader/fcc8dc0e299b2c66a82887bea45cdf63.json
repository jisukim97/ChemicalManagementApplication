{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ChangeProfile.js\";\nimport React, { Component } from 'react';\nimport { Form, Icon, Popover, Button, Upload, Modal, message } from 'antd';\nimport { getUser, getToken } from '../authentication';\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass ChangeProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      fileList: [],\n      visible: false\n    };\n    this.userID = getUser().userID;\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n    };\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList\n    });\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          let user = {\n            'id': this.userID,\n            'profile': this.state.fileList[0].response.name //http요청\n\n          };\n          fetch('http://localhost:8080/user/profile', {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n              'token': getToken()\n            },\n            body: JSON.stringify(user)\n          }).then(response => {\n            if (response.status === 200) {\n              //사진 업로드 성공\n              message.success('프로필 사진 업로드에 성공하였습니다.');\n              this.props.form.resetFields();\n              this.hide();\n            } else {\n              console.log(\"글올리기 실패\");\n            }\n          });\n        }\n      });\n    };\n\n    this.hide = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleVisibleChange = visible => {\n      this.setState({\n        visible\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          previewVisible = _this$state.previewVisible,\n          previewImage = _this$state.previewImage,\n          fileList = _this$state.fileList;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Upload\"));\n    return React.createElement(Popover, {\n      content: React.createElement(\"div\", {\n        className: \"articleform\",\n        id: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"article-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, getFieldDecorator('photo', {\n        rules: [{\n          required: false\n        }]\n      })(React.createElement(\"div\", {\n        className: \"clearfix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Upload, {\n        name: \"file\",\n        action: \"http://localhost:8080/photo/upload/\" + this.userID,\n        listType: \"picture-card\",\n        fileList: fileList,\n        onPreview: this.handlePreview,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, fileList.length >= 1 ? null : uploadButton), React.createElement(Modal, {\n        visible: previewVisible,\n        footer: null,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"example\",\n        style: {\n          width: '100%'\n        },\n        src: previewImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"article-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Upload\"))))),\n      title: \"\\uD504\\uB85C\\uD544 \\uC0AC\\uC9C4 \\uBCC0\\uACBD\",\n      trigger: \"click\",\n      visible: this.state.visible,\n      onVisibleChange: this.handleVisibleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"default\",\n      icon: \"smile\",\n      shape: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Form.create()(ChangeProfile);","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ChangeProfile.js"],"names":["React","Component","Form","Icon","Popover","Button","Upload","Modal","message","getUser","getToken","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","ChangeProfile","state","previewVisible","previewImage","fileList","visible","userID","handleCancel","setState","handlePreview","url","preview","originFileObj","handleChange","handleSubmit","e","preventDefault","props","form","validateFields","err","values","user","response","name","fetch","method","headers","body","JSON","stringify","then","status","success","resetFields","hide","console","log","handleVisibleChange","render","getFieldDecorator","uploadButton","rules","required","length","width","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Popover, Button, Upload, Modal, message } from 'antd';\n\nimport { getUser, getToken } from '../authentication';\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nclass ChangeProfile extends Component {\n\n    state = {\n        previewVisible: false,\n        previewImage: '',\n        fileList: [\n\n        ],\n        visible: false,\n    };\n\n    //유저아이디\n    userID = getUser().userID\n\n    //사진 취소 \n    handleCancel = () => this.setState({ previewVisible: false });\n\n    //프리뷰\n    handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n\n        this.setState({\n            previewImage: file.url || file.preview,\n            previewVisible: true,\n        });\n    };\n\n    //파일 추가되었을 때\n    handleChange = ({ fileList }) => this.setState({ fileList });\n\n    //업로드 버튼 눌렀을 때\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                let user = {\n                    'id': this.userID,\n                    'profile': this.state.fileList[0].response.name\n                }\n                //http요청\n                fetch('http://localhost:8080/user/profile', {\n                    method: 'PUT',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'token': getToken()\n                    },\n                    body: JSON.stringify(user)\n                }).then(response => {\n                    if (response.status === 200) {\n                        //사진 업로드 성공\n                        message.success('프로필 사진 업로드에 성공하였습니다.')\n                        this.props.form.resetFields()\n                        this.hide()\n                    } else {\n                        console.log(\"글올리기 실패\")\n                    }\n                });\n            }\n        });\n    };\n\n    hide = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleVisibleChange = visible => {\n        this.setState({ visible });\n    };\n\n    render() {\n        const { previewVisible, previewImage, fileList } = this.state;\n        const { getFieldDecorator } = this.props.form;\n\n        const uploadButton = (\n            <div>\n                <Icon type=\"plus\" />\n                <div className=\"ant-upload-text\">Upload</div>\n            </div>\n        );\n\n        return (\n            <Popover\n                content={\n\n                    <div className=\"articleform\" id='box'>\n                        <Form onSubmit={this.handleSubmit} className=\"article-form\">\n                            <Form.Item>\n                                {getFieldDecorator('photo', {\n                                    rules: [{ required: false }],\n                                })(\n                                    <div className=\"clearfix\">\n                                        <Upload\n                                            name=\"file\"\n                                            action={\"http://localhost:8080/photo/upload/\" + this.userID}\n                                            listType=\"picture-card\"\n                                            fileList={fileList}\n                                            onPreview={this.handlePreview}\n                                            onChange={this.handleChange}\n                                        >\n                                            {fileList.length >= 1 ? null : uploadButton}\n                                        </Upload>\n                                        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n                                            <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n                                        </Modal>\n                                    </div>\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                <center><Button type=\"primary\" htmlType=\"submit\" className=\"article-form-button\" >\n                                    Upload\n                    </Button></center>\n                            </Form.Item>\n                        </Form>\n                    </div>\n\n                }\n                title=\"프로필 사진 변경\"\n                trigger=\"click\"\n                visible={this.state.visible}\n                onVisibleChange={this.handleVisibleChange}\n            >\n                <Button type=\"default\" icon=\"smile\" shape=\"circle\" />\n            </Popover>\n\n        );\n    }\n}\n\nexport default Form.create()(ChangeProfile);"]},"metadata":{},"sourceType":"module"}