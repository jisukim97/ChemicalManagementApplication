{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Timeline.js\";\nimport React, { Component } from 'react';\nimport ArticleArray from './ArticleArray';\nimport { getUser, getToken } from '../authentication';\nimport ArticleForm from './ArticleForm';\nimport './Timeline.css';\n\nclass Timeline extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: []\n    };\n\n    this.loadingArticles = () => {\n      const requesturl = 'http://localhost:8080/article/timeline/' + getUser().userID;\n      fetch(requesturl, {\n        method: 'GET',\n        headers: {\n          'token': getToken()\n        }\n      }).then(response => {\n        if (response.statue === 200) {\n          return response.json();\n        } else {\n          console.log('소식 불러오기 에러!');\n          return [];\n        }\n      }).then(response => this.setState({\n        articles: response\n      }));\n    };\n\n    this.addArticle = article => {\n      let articles = this.state.articles;\n      articles.unshift(article);\n      this.setState({\n        articles: articles\n      });\n    };\n\n    this.deleteArticle = article => {\n      let articles = this.state.articles;\n      articles.splice(articles.indexOf(article), 1);\n      this.setState({\n        articles: articles\n      });\n    };\n\n    this.loadingArticles();\n  }\n\n  shouldComponentUpdate(props) {\n    return true;\n  } //소식 목록 로딩\n  //ArticleArray 컴포넌트에서 하지 않고 timeline에서 하는 이유는 ?\n  //form에서 입력받은 소식을 업데이트 해줘야 하므로, 여기서 state를 바꿔주어야 한다. \n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(ArticleForm, {\n      addArticle: this.addArticle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(ArticleArray, {\n      articles: this.state.articles,\n      deleteArticle: this.deleteArticle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Timeline.js"],"names":["React","Component","ArticleArray","getUser","getToken","ArticleForm","Timeline","constructor","props","state","articles","loadingArticles","requesturl","userID","fetch","method","headers","then","response","statue","json","console","log","setState","addArticle","article","unshift","deleteArticle","splice","indexOf","shouldComponentUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,mBAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAK7BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAJnBC,KAImB,GAJX;AACJC,MAAAA,QAAQ,EAAE;AADN,KAIW;;AAAA,SAanBC,eAbmB,GAaD,MAAM;AACpB,YAAMC,UAAU,GAAG,4CAA4CT,OAAO,GAAGU,MAAzE;AACAC,MAAAA,KAAK,CAACF,UAAD,EAAa;AACdG,QAAAA,MAAM,EAAE,KADM;AAEdC,QAAAA,OAAO,EAAE;AACL,mBAASZ,QAAQ;AADZ;AAFK,OAAb,CAAL,CAMKa,IANL,CAMUC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,MAAT,KAAmB,GAAvB,EAA2B;AACvB,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,iBAAO,EAAP;AACH;AACJ,OAbL,EAaOL,IAbP,CAaYC,QAAQ,IAAI,KAAKK,QAAL,CAAc;AAACb,QAAAA,QAAQ,EAAGQ;AAAZ,OAAd,CAbxB;AAcH,KA7BkB;;AAAA,SAgCnBM,UAhCmB,GAgCLC,OAAD,IAAa;AACtB,UAAIf,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA1B;AACAA,MAAAA,QAAQ,CAACgB,OAAT,CAAiBD,OAAjB;AACA,WAAKF,QAAL,CAAc;AAACb,QAAAA,QAAQ,EAAGA;AAAZ,OAAd;AACH,KApCkB;;AAAA,SAuCnBiB,aAvCmB,GAuCFF,OAAD,IAAa;AACzB,UAAIf,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA1B;AACAA,MAAAA,QAAQ,CAACkB,MAAT,CAAgBlB,QAAQ,CAACmB,OAAT,CAAiBJ,OAAjB,CAAhB,EAA0C,CAA1C;AACA,WAAKF,QAAL,CAAc;AAACb,QAAAA,QAAQ,EAAGA;AAAZ,OAAd;AACH,KA3CkB;;AAGf,SAAKC,eAAL;AACH;;AAEDmB,EAAAA,qBAAqB,CAACtB,KAAD,EAAQ;AACzB,WAAO,IAAP;AACD,GAb0B,CAe7B;AACA;AACA;;;AAiCAuB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,UAAU,EAAE,KAAKP,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWC,QAAnC;AAA6C,MAAA,aAAa,EAAE,KAAKiB,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAzD4B;;AA4DjC,eAAerB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport ArticleArray from './ArticleArray';\nimport { getUser, getToken } from '../authentication';\nimport ArticleForm from './ArticleForm';\n\nimport './Timeline.css';\n\nclass Timeline extends Component {\n    state = {\n        articles: []\n    }\n\n    constructor(props) {\n        super(props)\n        \n        this.loadingArticles()\n    }\n\n    shouldComponentUpdate(props) {\n        return true\n      }\n    \n    //소식 목록 로딩\n    //ArticleArray 컴포넌트에서 하지 않고 timeline에서 하는 이유는 ?\n    //form에서 입력받은 소식을 업데이트 해줘야 하므로, 여기서 state를 바꿔주어야 한다. \n    loadingArticles = () => {\n        const requesturl = 'http://localhost:8080/article/timeline/' + getUser().userID\n        fetch(requesturl, {\n            method: 'GET',\n            headers: {\n                'token': getToken()\n            }\n        })\n            .then(response => {\n                if (response.statue ===200){\n                    return response.json();\n                } else {\n                    console.log('소식 불러오기 에러!')\n                    return [];\n                }\n            }).then(response => this.setState({articles : response}))\n    }\n\n    //새로 입력한 글 소식 리스트의 맨앞에 넣어주어 렌더링\n    addArticle = (article) => {\n        let articles = this.state.articles\n        articles.unshift(article)\n        this.setState({articles : articles})\n    }\n\n    //삭제한 글 state의 리스트에서 삭제해 주어 다시 렌더링\n    deleteArticle = (article) => {\n        let articles = this.state.articles\n        articles.splice(articles.indexOf(article),1);\n        this.setState({articles : articles})\n    }\n\n    render() {\n        return (\n            <div>\n                <ArticleForm addArticle={this.addArticle} />\n                <ArticleArray articles={this.state.articles} deleteArticle={this.deleteArticle} />\n            </div>\n        );\n    }\n}\n\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}