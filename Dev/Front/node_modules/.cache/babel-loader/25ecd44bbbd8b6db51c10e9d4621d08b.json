{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendRequest.js\";\nimport React, { Component } from 'react';\nimport { getUser, getToken } from '../authentication';\nimport FriendArray from './FriendArray';\nimport './FriendUnit.css';\n\nclass FriendRequest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requestList: []\n    };\n\n    this.loadingFriendRequests = () => {\n      const requesturl = 'http://localhost:8080/friend/request/' + getUser().userID; //http요청\n\n      fetch(requesturl, {\n        method: 'GET',\n        headers: {\n          'token': getToken()\n        }\n      }).then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          console.log('친구신청 불러오기 에러!');\n          return [];\n        }\n      }).then(response => {\n        this.setState({\n          requestList: response\n        });\n        console.log(\"친구 요청들\");\n        console.log(response);\n      });\n    };\n\n    this.deleteArray = friend => {\n      let lists = this.state.requestList;\n      lists.splice(lists.indexOf(friend), 1);\n      this.setState({\n        requestList: lists\n      });\n    };\n\n    this.getArray = () => {\n      if (this.state.requestList === null || this.state.requestList === []) {\n        return React.createElement(\"div\", {\n          className: \"marginTopBottom grayColor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"\\uCE5C\\uAD6C \\uC694\\uCCAD\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\");\n      } else {\n        return React.createElement(FriendArray, {\n          friends: this.state.requestList,\n          from: \"request\",\n          deleteArray: this.deleteArray,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.loadingFriendRequests();\n  } //친구 요청들 불러오기\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"\\uCE5C\\uAD6C \\uC694\\uCCAD\", this.getArray());\n  }\n\n}\n\nexport default FriendRequest;","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendRequest.js"],"names":["React","Component","getUser","getToken","FriendArray","FriendRequest","constructor","props","state","requestList","loadingFriendRequests","requesturl","userID","fetch","method","headers","then","response","status","json","console","log","setState","deleteArray","friend","lists","splice","indexOf","getArray","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,mBAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,kBAAP;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAOlCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SALnBC,KAKmB,GALX;AACJC,MAAAA,WAAW,EAAE;AADT,KAKW;;AAAA,SAMnBC,qBANmB,GAMK,MAAM;AAC1B,YAAMC,UAAU,GAAG,0CAA0CT,OAAO,GAAGU,MAAvE,CAD0B,CAE1B;;AACAC,MAAAA,KAAK,CAACF,UAAD,EAAa;AACdG,QAAAA,MAAM,EAAE,KADM;AAEdC,QAAAA,OAAO,EAAE;AACL,mBAASZ,QAAQ;AADZ;AAFK,OAAb,CAAL,CAMKa,IANL,CAMUC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,iBAAO,EAAP;AACH;AACJ,OAbL,EAaOL,IAbP,CAaYC,QAAQ,IAAI;AAChB,aAAKK,QAAL,CAAc;AAAEb,UAAAA,WAAW,EAAEQ;AAAf,SAAd;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH,OAjBL;AAkBH,KA3BkB;;AAAA,SA8BnBM,WA9BmB,GA8BJC,MAAD,IAAY;AACtB,UAAIC,KAAK,GAAG,KAAKjB,KAAL,CAAWC,WAAvB;AACAgB,MAAAA,KAAK,CAACC,MAAN,CAAaD,KAAK,CAACE,OAAN,CAAcH,MAAd,CAAb,EAAmC,CAAnC;AACA,WAAKF,QAAL,CAAc;AAACb,QAAAA,WAAW,EAAGgB;AAAf,OAAd;AACH,KAlCkB;;AAAA,SAqCnBG,QArCmB,GAqCR,MAAM;AACb,UAAI,KAAKpB,KAAL,CAAWC,WAAX,KAA0B,IAA1B,IAAkC,KAAKD,KAAL,CAAWC,WAAX,KAAyB,EAA/D,EAAkE;AAC9D,eAAQ;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAAR;AACH,OAFD,MAEO;AACH,eAAQ,oBAAC,WAAD;AAAa,UAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,WAAjC;AAA8C,UAAA,IAAI,EAAC,SAAnD;AAA6D,UAAA,WAAW,EAAE,KAAKc,WAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH;AACJ,KA3CkB;;AAEf,SAAKb,qBAAL;AACH,GAViC,CAYlC;;;AAwCAmB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEK,KAAKD,QAAL,EAFL,CADJ;AAMH;;AA3DiC;;AA8DtC,eAAevB,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { getUser, getToken } from '../authentication';\nimport FriendArray from './FriendArray';\n\nimport './FriendUnit.css';\n\nclass FriendRequest extends Component {\n\n    state = {\n        requestList: []\n    };\n\n\n    constructor(props) {\n        super(props);\n        this.loadingFriendRequests();\n    }\n\n    //친구 요청들 불러오기\n    loadingFriendRequests = () => {\n        const requesturl = 'http://localhost:8080/friend/request/' + getUser().userID\n        //http요청\n        fetch(requesturl, {\n            method: 'GET',\n            headers: {\n                'token': getToken()\n            }\n        })\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    console.log('친구신청 불러오기 에러!')\n                    return [];\n                }\n            }).then(response => {\n                this.setState({ requestList: response })\n                console.log(\"친구 요청들\")\n                console.log(response)\n            })\n    }\n\n    //삭제한 글 state의 리스트에서 삭제해 주어 다시 렌더링\n    deleteArray = (friend) => {\n        let lists = this.state.requestList\n        lists.splice(lists.indexOf(friend),1);\n        this.setState({requestList : lists})\n    }\n\n    //친구 리스트가 있으면, 리스트를 분배해주는 array 컴포넌트를 리턴\n    getArray = () => {\n        if (this.state.requestList=== null || this.state.requestList===[]){\n            return (<div className='marginTopBottom grayColor'>친구 요청이 없습니다.</div>);\n        } else {\n            return (<FriendArray friends={this.state.requestList} from=\"request\" deleteArray={this.deleteArray}/>);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                친구 요청\n                {this.getArray()}\n            </div>\n        );\n    }\n}\n\nexport default FriendRequest;"]},"metadata":{},"sourceType":"module"}