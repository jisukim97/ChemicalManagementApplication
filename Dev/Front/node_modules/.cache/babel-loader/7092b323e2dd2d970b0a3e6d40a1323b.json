{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/201902/YoongSoJongSeol/ChemicalManagementApplication/Dev/Front/src/components/List.js\";\nimport React, { Component } from 'react';\nimport { Table, Modal } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport { serverUrl } from '../setting';\nimport { getUser } from '../authentication';\nimport './Box.css';\n\nclass List extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false\n    };\n    this.state = {\n      data: []\n    };\n    this.columns = [{\n      title: '이름',\n      dataIndex: 'name',\n      key: 'name',\n      render: text => React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"#\",\n        onClick: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, text), React.createElement(Modal, {\n        title: \"MSDS\",\n        visible: this.state.visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"\\uC704\\uD5D8\"), \"H290 : \\uAE08\\uC18D\\uC744 \\uBD80\\uC2DD\\uC2DC\\uD0AC \\uC218 \\uC788\\uC74C\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), \"H314 : \\uD53C\\uBD80\\uC5D0 \\uC2EC\\uD55C \\uD654\\uC0C1\\uACFC \\uB208 \\uC190\\uC0C1\\uC744 \\uC77C\\uC73C\\uD0B4\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), \"H318 : \\uB208\\uC5D0 \\uC2EC\\uD55C \\uC190\\uC0C1\\uC744 \\uC77C\\uC73C\\uD0B4\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), \"H330 : \\uD761\\uC785\\uD558\\uBA74 \\uCE58\\uBA85\\uC801\\uC784\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), \"H350 : \\uC554\\uC744 \\uC77C\\uC73C\\uD0AC \\uC218 \\uC788\\uC74C\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"\\uC8FC\\uC758\"), \"P201 : \\uC0AC\\uC6A9 \\uC804 \\uCDE8\\uAE09 \\uC124\\uBA85\\uC11C\\uB97C \\uD655\\uBCF4\\uD558\\uC2DC\\uC624.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), \"P202 : \\uBAA8\\uB4E0 \\uC548\\uC804 \\uC608\\uBC29\\uC870\\uCE58 \\uBB38\\uAD6C\\uB97C \\uC77D\\uACE0 \\uC774\\uD574\\uD558\\uAE30 \\uC804\\uC5D0\\uB294 \\uCDE8\\uAE09\\uD558\\uC9C0 \\uB9C8\\uC2DC\\uC624.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), \"P234 : \\uC6D0\\uB798\\uC758 \\uC6A9\\uAE30\\uC5D0\\uB9CC \\uBCF4\\uAD00\\uD558\\uC2DC\\uC624.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), \"P260 : (\\uBD84\\uC9C4\\xB7\\uD744\\xB7\\uAC00\\uC2A4\\xB7\\uBBF8\\uC2A4\\uD2B8\\xB7\\uC99D\\uAE30\\xB7\\uC2A4\\uD504\\uB808\\uC774)\\uB97C(\\uC744) \\uD761\\uC785\\uD558\\uC9C0 \\uB9C8\\uC2DC\\uC624.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"\\uB4F1\\uB4F1..\")))\n    }, {\n      title: '보관장소',\n      dataIndex: 'place',\n      key: 'place'\n    }, {\n      title: '생성일',\n      dataIndex: 'putDate',\n      key: 'putDate',\n      render: date => date.year + '/' + date.monthValue + '/' + date.dayOfMonth\n    }];\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.componentWillMount = () => {\n      fetch(serverUrl + '/chemical/list/' + getUser().id, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        const result = response.status;\n\n        if (result === 200) {\n          //성공하였을 경우 \n          console.log(response);\n          response.json().then(response => {\n            console.log(response);\n            this.setState({\n              data: response\n            });\n          });\n        } else {//내부 오류\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.columns,\n      dataSource: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/yeongmo/Documents/201902/YoongSoJongSeol/ChemicalManagementApplication/Dev/Front/src/components/List.js"],"names":["React","Component","Table","Modal","Link","serverUrl","getUser","List","state","visible","data","columns","title","dataIndex","key","render","text","showModal","handleOk","handleCancel","date","year","monthValue","dayOfMonth","setState","e","console","log","componentWillMount","fetch","id","method","headers","then","response","result","status","json"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Modal } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport { serverUrl } from '../setting'\n\nimport { getUser } from '../authentication';\n\nimport './Box.css'\n\nclass List extends Component {\n\n\n    state = { visible: false };\n\n    state = {\n        \n        data : []\n    }\n\n    columns = [\n        {\n            title: '이름',\n            dataIndex: 'name',\n            key: 'name',\n            render: text => (\n                <a>\n                    <Link to='#' onClick={this.showModal}>\n                        {text}\n                    </Link>\n                    <Modal\n                        title=\"MSDS\"\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}\n                    >\n                        <p>\n                            <h3>위험</h3>\n                            H290 : 금속을 부식시킬 수 있음<br/>\n                            H314 : 피부에 심한 화상과 눈 손상을 일으킴<br/>\n                            H318 : 눈에 심한 손상을 일으킴<br/>\n                            H330 : 흡입하면 치명적임<br/>\n                            H350 : 암을 일으킬 수 있음<br/>\n                        </p>\n                        <p>\n                            <h3>주의</h3>\n                            P201 : 사용 전 취급 설명서를 확보하시오.<br/>\n                            P202 : 모든 안전 예방조치 문구를 읽고 이해하기 전에는 취급하지 마시오.<br/>\n                            P234 : 원래의 용기에만 보관하시오.<br/>\n                            P260 : (분진·흄·가스·미스트·증기·스프레이)를(을) 흡입하지 마시오.<br/>\n                        </p>\n                        <p>등등..</p>\n                    </Modal>\n                </a>),\n        },\n        {\n          title: '보관장소',\n          dataIndex: 'place',\n          key: 'place',\n        },\n        {\n          title: '생성일',\n          dataIndex: 'putDate',\n          key: 'putDate',\n          render : date => date.year + '/' + date.monthValue + '/' + date.dayOfMonth\n        }\n    ]\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n\n    componentWillMount = () => {\n        fetch(serverUrl + '/chemical/list/' + getUser().id, {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(response => {\n                const result = response.status;\n                if (result === 200) {\n                    //성공하였을 경우 \n                    console.log(response)\n                    response.json().then(response => {\n                        console.log(response);\n                        this.setState({data : response})\n                    })\n                } else {\n                    //내부 오류\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div id='box'>\n                <Table columns={this.columns} dataSource={this.state.data} />\n            </div>\n        );\n    }\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}