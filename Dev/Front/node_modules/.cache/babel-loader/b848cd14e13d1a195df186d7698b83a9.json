{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\uBB34\\\\Desktop\\\\git\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uBB34\\\\Desktop\\\\git\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\src\\\\components\\\\StockButtons.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Form, Input, Select, Button } from 'antd';\nconst Option = Select.Option;\n\nclass PriceInput extends React.Component {\n  static getDerivedStateFromProps(nextProps) {\n    // Should be a controlled component.\n    if ('value' in nextProps) {\n      return _objectSpread({}, nextProps.value || {});\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleNumberChange = e => {\n      const number = parseInt(e.target.value || 0, 10);\n\n      if (isNaN(number)) {\n        return;\n      }\n\n      if (!('value' in this.props)) {\n        this.setState({\n          number\n        });\n      }\n\n      this.triggerChange({\n        number\n      });\n    };\n\n    this.handleUnitChange = unit => {\n      if (!('value' in this.props)) {\n        this.setState({\n          unit\n        });\n      }\n\n      this.triggerChange({\n        unit\n      });\n    };\n\n    this.triggerChange = changedValue => {\n      // Should provide an event to pass value to Form.\n      const onChange = this.props.onChange;\n\n      if (onChange) {\n        onChange(_objectSpread({}, this.state, changedValue));\n      }\n    };\n\n    const value = props.value || {};\n    this.state = {\n      number: value.number || 0,\n      unit: value.unit || 'g'\n    };\n  }\n\n  render() {\n    const size = this.props.size;\n    const _this$state = this.state,\n          unit = _this$state.unit,\n          number = _this$state.number;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      size: size,\n      value: number,\n      onChange: this.handleNumberChange,\n      style: {\n        width: '40%',\n        marginRight: '3%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Select, {\n      value: unit,\n      size: size,\n      style: {\n        width: '40%'\n      },\n      onChange: this.handleUnitChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"g\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"g\"), React.createElement(Option, {\n      value: \"mL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"mL\")));\n  }\n\n}\n\nclass StockButtons extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    this.checkNumber = (rule, value, callback) => {\n      if (value.number > 0) {\n        callback();\n        return;\n      }\n\n      callback('Number must greater than zero!');\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"inline\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      style: {\n        marginRight: '1.5%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, getFieldDecorator('here2', {\n      initialValue: {\n        number: 0,\n        unit: 'g'\n      },\n      rules: [{\n        validator: this.checkNumber\n      }]\n    })(React.createElement(PriceInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      style: {\n        marginLeft: '1.5%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"\\uC0AC\\uC6A9\"))), React.createElement(\"div\", {\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        marginLeft: 10,\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \" \\uD3D0\\uAE30\\uD558\\uAE30 \")), React.createElement(\"span\", {\n      style: {\n        marginLeft: 10,\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \" \\uC7A5\\uC18C\\uC218\\uC815 \"))));\n  }\n\n}\n\nexport default Form.create()(StockButtons);","map":{"version":3,"sources":["C:\\Users\\ë¬´\\Desktop\\git\\ChemicalManagementApplication\\Dev\\Front\\src\\components\\StockButtons.js"],"names":["React","Component","Fragment","Form","Input","Select","Button","Option","PriceInput","getDerivedStateFromProps","nextProps","value","constructor","props","handleNumberChange","e","number","parseInt","target","isNaN","setState","triggerChange","handleUnitChange","unit","changedValue","onChange","state","render","size","width","marginRight","StockButtons","handleSubmit","preventDefault","form","validateFields","err","values","console","log","checkNumber","rule","callback","getFieldDecorator","initialValue","rules","validator","marginLeft","margin","create"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n\r\nimport { Form, Input, Select, Button } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nclass PriceInput extends React.Component {\r\n    static getDerivedStateFromProps(nextProps) {\r\n        // Should be a controlled component.\r\n        if ('value' in nextProps) {\r\n            return {\r\n                ...(nextProps.value || {}),\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const value = props.value || {};\r\n        this.state = {\r\n            number: value.number || 0,\r\n            unit: value.unit || 'g',\r\n        };\r\n    }\r\n\r\n    handleNumberChange = e => {\r\n        const number = parseInt(e.target.value || 0, 10);\r\n        if (isNaN(number)) {\r\n            return;\r\n        }\r\n        if (!('value' in this.props)) {\r\n            this.setState({ number });\r\n        }\r\n        this.triggerChange({ number });\r\n    };\r\n\r\n    handleUnitChange = unit => {\r\n        if (!('value' in this.props)) {\r\n            this.setState({ unit });\r\n        }\r\n        this.triggerChange({ unit });\r\n    };\r\n\r\n    triggerChange = changedValue => {\r\n        // Should provide an event to pass value to Form.\r\n        const { onChange } = this.props;\r\n        if (onChange) {\r\n            onChange({\r\n                ...this.state,\r\n                ...changedValue,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { size } = this.props;\r\n        const { unit, number } = this.state;\r\n        return (\r\n            <Fragment>\r\n                    <Input\r\n                        type=\"text\"\r\n                        size={size}\r\n                        value={number}\r\n                        onChange={this.handleNumberChange}\r\n                        style={{ width: '40%', marginRight: '3%' }}\r\n                    />\r\n                    <Select\r\n                        value={unit}\r\n                        size={size}\r\n                        style={{ width: '40%' }}\r\n                        onChange={this.handleUnitChange}\r\n                    >\r\n                        <Option value=\"g\">g</Option>\r\n                        <Option value=\"mL\">mL</Option>\r\n                    </Select>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass StockButtons extends Component {\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n\r\n    checkNumber = (rule, value, callback) => {\r\n        if (value.number > 0) {\r\n            callback();\r\n            return;\r\n        }\r\n        callback('Number must greater than zero!');\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Fragment>\r\n\r\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                <Form.Item style={{marginRight : '1.5%'}}>\r\n                    {getFieldDecorator('here2', {\r\n                        initialValue: { number: 0, unit: 'g' },\r\n                        rules: [{ validator: this.checkNumber }],\r\n                    })(<PriceInput />)}\r\n                </Form.Item>\r\n                <Form.Item style={{marginLeft : '1.5%'}}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        ì¬ì©\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            <div style={{margin : 10}}>\r\n                <span style={{marginLeft : 10, marginRight : 10}}>\r\n                    <Button type=\"primary\"> íê¸°íê¸° </Button>\r\n                </span>\r\n                <span style={{marginLeft : 10, marginRight : 10}}>\r\n                    <Button type=\"primary\"> ì¥ììì  </Button>\r\n                </span>\r\n            </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(StockButtons);"]},"metadata":{},"sourceType":"module"}