{"ast":null,"code":"var _jsxFileName = \"/Users/Jennifer/Documents/GitHub/ChemicalManagementApplication/Dev/Front/src/components/Apparatus.js\";\nimport React, { Component } from 'react';\nimport { Typography, Icon, Row, Col, Button, Modal, Divider, Table, Card, List, Input, Form, TimePicker, message } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport moment from 'moment';\nimport { getUser, getLab } from '../authentication';\nconst Title = Typography.Title;\n\nclass Apparatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.showModal_0 = () => {\n      console.log(this.state.visible_0);\n      this.setState({\n        visible_0: true\n      });\n    };\n\n    this.handleOk_0 = e => {\n      console.log(e);\n      this.handleRemove_2();\n      this.setState({\n        visible_0: false\n      });\n    };\n\n    this.handleCancel_0 = e => {\n      console.log(e);\n      this.setState({\n        visible_0: false\n      });\n    };\n\n    this.showModal_1 = () => {\n      console.log(this.state.visible_1);\n      this.setState({\n        visible_1: true\n      });\n    };\n\n    this.handleOk_1 = e => {\n      console.log(e);\n      this.setState({\n        visible_1: false\n      });\n    };\n\n    this.handleCancel_1 = e => {\n      console.log(e);\n      this.setState({\n        visible_1: false\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log(values);\n          fetch('http://13.124.122.246:8080/apparatus/' + this.state.menu, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(values) //여기에다가 body 넣어주기\n\n          }).then(response => {\n            if (response === 200) {\n              return response.json();\n            } else {// 오류 난 경우 처리 \n            }\n          }).then(response => {\n            this.state.apparatusList.push(response);\n            this.setState({\n              apparatusList: this.state.apparatusList\n            });\n          });\n        }\n      });\n    };\n\n    this.showModal_2 = () => {\n      console.log(this.state.visible_2);\n      this.setState({\n        visible_2: true\n      });\n    };\n\n    this.handleOk_2 = e => {\n      console.log(e);\n      this.setState({\n        visible_2: false\n      });\n    };\n\n    this.handleCancel_2 = e => {\n      console.log(e);\n      this.setState({\n        visible_2: false\n      });\n    };\n\n    this.showModal_3 = () => {\n      console.log(this.state.visible_3);\n      this.setState({\n        visible_3: true\n      });\n    };\n\n    this.handleOk_3 = e => {\n      console.log(e);\n      this.handleRemove();\n      this.setState({\n        visible_3: false\n      });\n    };\n\n    this.handleCancel_3 = e => {\n      console.log(e);\n      this.setState({\n        visible_3: false\n      });\n    };\n\n    this.getUrl = id => {\n      const url = '/apparatus/' + id;\n      return url;\n    };\n\n    this.goToLeft = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      newday.setDate(newday.getDate() - 1);\n      var yy = newday.getFullYear();\n      yy += '';\n      yy = yy.substring(2, 4);\n      var mm = newday.getMonth();\n      var dd = newday.getDate();\n      var todayInfo = yy + mm + dd;\n      fetch('http://13.124.122.246:8080/schedule/apparatus/' + this.state.menu + '/' + todayInfo, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        } //안고쳐도 됨\n\n      }).then(response => {\n        if (response === 200) {\n          return response.json();\n        } else {// 오류 난 경우 처리 \n        }\n      }).then(response => {\n        this.setStatus({\n          todayDate: newday,\n          realReservationList: response\n        });\n      });\n    };\n\n    this.goToRight = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      newday.setDate(newday.getDate() + 1);\n      var yy = newday.getFullYear();\n      yy += '';\n      yy = yy.substring(2, 4);\n      var mm = newday.getMonth();\n      var dd = newday.getDate();\n      var todayInfo = yy + mm + dd;\n      fetch('http://13.124.122.246:8080/schedule/apparatus/' + this.state.menu + '/' + todayInfo, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        } //안고쳐도 됨\n\n      }).then(response => {\n        if (response === 200) {\n          return response.json();\n        } else {// 오류 난 경우 처리 \n        }\n      }).then(response => {\n        this.setStatus({\n          todayDate: newday,\n          realReservationList: response\n        });\n      });\n    };\n\n    this.makeMonth = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      return newday.getMonth() + 1;\n    };\n\n    this.makeDate = () => {\n      var newday = new Date();\n      newday = this.state.todayDate;\n      return newday.getDate();\n    };\n\n    this.getApparNameNow = () => {\n      var n = this.state.menu;\n      var newList = this.state.apparatusList;\n      console.log(newList);\n      newList = newList.filter(one => one.id == n);\n\n      if (newList.length > 0) {\n        var m = newList[0].nickname;\n      } else {\n        var m = '';\n      } // 없어지는 순간의 오류를 막기 위한 else구문\n\n\n      return m;\n    };\n\n    this.handleRemove = () => {\n      var newList = [];\n      newList = this.state.reservationList;\n      var del = 0;\n\n      for (var i = 0; i < newList.length; i++) {\n        if (newList[i].user == getUser().name) {\n          //유저 네임은 로그인 정보 받아오는 걸로 바꾸기\n          del = i;\n          break;\n        }\n      }\n\n      newList.splice(del, 1);\n      this.setState({\n        reservationList: newList\n      }, () => {\n        this.setState({\n          realReservationList: this.getRealReservationList()\n        });\n      });\n    };\n\n    this.handleRemove_2 = () => {\n      var newList = [];\n      newList = this.state.apparatusList.filter(one => one.id != this.state.menu);\n      fetch('http://13.124.122.246:8080/apparatus/' + this.labId + '/' + this.state.menu, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        } //안고쳐도 됨\n\n      }).then(response => {\n        if (response === 200) {\n          return response.json();\n        } else {// 오류 난 경우 처리 \n        }\n      }).then(response => {\n        this.setState({\n          apparatusList: newList\n        });\n      });\n    };\n\n    this.checkMyReservation = () => {\n      var newList = [];\n      newList = this.state.realReservationList;\n      var present = false;\n\n      for (var i = 0; i < newList.length; i++) {\n        if (newList[i].user == getUser().name) {\n          //login user정보 오면 넣기\n          present = true;\n          break;\n        }\n      }\n\n      return present;\n    };\n\n    this.checkReservtionDate = () => {\n      var nowMonth = this.getMonth();\n      var nowDate = this.getDate();\n      var isPast = false;\n\n      if (this.today.getMonth() >= nowMonth && this.today.getDate() > nowDate) {\n        isPast = true;\n      }\n\n      return isPast;\n    };\n\n    const apparatusId = this.props.match.params.apparatusId; //현재 랩 id로 기기 리스트 받아와서 변수에 저장하기 \n    //오늘 날짜 받아오기\n\n    var today = new Date();\n    this.state = {\n      menu: apparatusId,\n      todayDate: today,\n      realReservationList: [],\n      visible_0: false,\n      // '기기 삭제' 모달\n      visible_1: false,\n      //'기기등록하기' 모달\n      visible_2: false,\n      // '기기예약하기' 모달\n      visible_3: false,\n      // '본인 예약 삭제확인' 모달\n      visible_4: false,\n      // '예약 중복' 모달\n      visible_5: false,\n      // '예약 삭제 오류 - 지난 날짜 삭제 안됨' 모달 \n      format: 'HH:mm',\n      columns: [{\n        title: 'Time',\n        dataIndex: 'time',\n        key: 'time'\n      }, {\n        title: 'User',\n        dataIndex: 'user',\n        key: 'user'\n      }],\n      userId: getUser().id,\n      labId: getLab().id,\n      apparatusList: [{\n        id: 1,\n        nickname: \"apparatus1\"\n      }, {\n        id: 2,\n        nickname: \"apparatus2\"\n      }, {\n        id: 3,\n        nickname: \"apparatus3\"\n      }, {\n        id: 4,\n        nickname: \"apparatus4\"\n      }, {\n        id: 5,\n        nickname: \"apparatus5\"\n      }],\n      reservationList: [{\n        apparatusId: 1,\n        month: 11,\n        date: 24,\n        startTime: 8,\n        endTime: 11,\n        user: 'Yeong mo'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 24,\n        startTime: 8,\n        endTime: 10,\n        user: 'Joo young'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 24,\n        startTime: 13,\n        endTime: 16,\n        user: 'Yeong mo'\n      }, {\n        apparatusId: 1,\n        month: 11,\n        date: 24,\n        startTime: 11,\n        endTime: 13,\n        user: 'Eun mu'\n      }, {\n        apparatusId: 1,\n        month: 11,\n        date: 25,\n        startTime: 8,\n        endTime: 10,\n        user: 'Ji su'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 25,\n        startTime: 11,\n        endTime: 13,\n        user: 'Hyeok ju'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 25,\n        startTime: 14,\n        endTime: 17,\n        user: 'Han bin'\n      }, {\n        apparatusId: 1,\n        month: 11,\n        date: 25,\n        startTime: 16,\n        endTime: 18,\n        user: 'Yeong mo'\n      }, {\n        apparatusId: 1,\n        month: 11,\n        date: 26,\n        startTime: 9,\n        endTime: 13,\n        user: 'Ji su'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 26,\n        startTime: 9,\n        endTime: 10,\n        user: 'Joo young'\n      }, {\n        apparatusId: 2,\n        month: 11,\n        date: 26,\n        startTime: 10,\n        endTime: 11,\n        user: 'Hyeok ju'\n      }, {\n        apparatusId: 4,\n        month: 11,\n        date: 26,\n        startTime: 11,\n        endTime: 12,\n        user: 'Yeong mo'\n      }]\n    };\n  } //'기기 삭제'버튼에 대한 메소드\n\n\n  shouldComponentUpdate(props) {\n    return true;\n  } //현재 페이지 내에서 파라미터만 변경되었을 경우\n\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.match.params !== newProps.match.params) {\n      const apparatusId = this.props.match.params.apparatusId;\n      this.setState({\n        menu: apparatusId\n      }, () => {\n        //클릭한 기기 ID에 대해서 예약 리스트 받아와서 STATE에 저장 \n        this.setState({\n          realReservationList: []\n        });\n      });\n    }\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(Title, {\n      style: {\n        marginBottom: 35\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, \"Apparatus\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 6,\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(List, {\n      grid: {\n        gutter: 16,\n        column: 1\n      },\n      dataSource: this.state.apparatusList,\n      renderItem: item => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: this.getUrl(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, item.nickname))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.showModal_1,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, \"\\uAE30\\uAE30 \\uB4F1\\uB85D\"), React.createElement(Modal, {\n      title: \"new Apparatus \\uB4F1\\uB85D \\uD558\\uAE30\",\n      visible: this.state.visible_1,\n      onOk: this.handleOk_1,\n      onCancel: this.handleCancel_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      rules: [{\n        required: true,\n        message: '등록할 기기 이름을 입력하세요. '\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"new apparatue name?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, \"\\uB4F1\\uB85D\\uD558\\uAE30\")))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.showModal_0,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, \" \", \"\\uAE30\\uAE30 \\uC0AD\\uC81C\"), React.createElement(Modal, {\n      title: \"Apparatus \\uC0AD\\uC81C \\uD558\\uAE30\",\n      visible: this.state.visible_0,\n      onOk: this.handleOk_0,\n      onCancel: this.handleCancel_0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, \" ---------- \\uD574\\uB2F9 \\uAE30\\uAE30\\uB97C \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C? ---------\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, \"\\uC120\\uD0DD\\uD55C \\uAE30\\uAE30: \", this.getApparNameNow(), \" \"))), React.createElement(Col, {\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, React.createElement(Row, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"link\",\n      onClick: this.goToLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    })), this.makeMonth(), \"\\uC6D4 \", this.makeDate(), \"\\uC77C\", React.createElement(Button, {\n      type: \"link\",\n      onClick: this.goToRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, React.createElement(Table, {\n      size: \"small\",\n      dataSource: this.state.realReservationList,\n      columns: this.state.columns,\n      scroll: {\n        y: 240\n      },\n      pagination: {\n        pageSize: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    })), React.createElement(Row, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.showModal_2,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, \"\\uC608\\uC57D \\uD558\\uAE30\"), React.createElement(Modal, {\n      title: \"my Apparatus \\uC608\\uC57D \\uD558\\uAE30\",\n      visible: this.state.visible_2,\n      onOk: this.handleOk_2,\n      onCancel: this.handleCancel_2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uD560 \\uAE30\\uAE30: \", this.getApparNameNow(), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uC790: \", getUser().name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uD560 \\uC2DC\\uAC04: (\\uC608\\uC57D\\uC740 \\uD55C\\uC2DC\\uAC04 \\uB2E8\\uC704\\uB85C\\uB9CC \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4) \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }), \"from \", React.createElement(TimePicker, {\n      defaultValue: moment('12:00', this.state.format),\n      format: this.state.foramt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }), \" to \", React.createElement(TimePicker, {\n      defaultValue: moment('14:00', this.state.format),\n      format: this.state.foramt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      type: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }), this.checkMyReservation() && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.showModal_3,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, \"my\\uC608\\uC57D \\uC0AD\\uC81C\\uD558\\uAE30\"), React.createElement(Modal, {\n      title: \"my \\uC608\\uC57D \\uC0AD\\uC81C\\uD558\\uAE30\",\n      visible: this.state.visible_3,\n      onOk: this.handleOk_3,\n      onCancel: this.handleCancel_3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, \"   \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, \" ---- \\uC544\\uB798 \\uC815\\uBCF4\\uC758 \\uC608\\uC57D\\uC744 \\uC0AD\\uC81C \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C? ----\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, \"\\uC608\\uC57D \\uAE30\\uAE30: \", this.getApparNameNow(), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, \"\\uC608\\uC57D\\uC790: \", getUser().name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, \"\\uC608\\uC57D \\uC2DC\\uAC04: \"))))))));\n  }\n\n}\n\nexport default Form.create()(Apparatus);","map":{"version":3,"sources":["/Users/Jennifer/Documents/GitHub/ChemicalManagementApplication/Dev/Front/src/components/Apparatus.js"],"names":["React","Component","Typography","Icon","Row","Col","Button","Modal","Divider","Table","Card","List","Input","Form","TimePicker","message","Link","moment","getUser","getLab","Title","Apparatus","constructor","props","state","showModal_0","console","log","visible_0","setState","handleOk_0","e","handleRemove_2","handleCancel_0","showModal_1","visible_1","handleOk_1","handleCancel_1","handleSubmit","preventDefault","form","validateFields","err","values","fetch","menu","method","headers","body","JSON","stringify","then","response","json","apparatusList","push","showModal_2","visible_2","handleOk_2","handleCancel_2","showModal_3","visible_3","handleOk_3","handleRemove","handleCancel_3","getUrl","id","url","goToLeft","newday","Date","todayDate","setDate","getDate","yy","getFullYear","substring","mm","getMonth","dd","todayInfo","setStatus","realReservationList","goToRight","makeMonth","makeDate","getApparNameNow","n","newList","filter","one","length","m","nickname","reservationList","del","i","user","name","splice","getRealReservationList","labId","checkMyReservation","present","checkReservtionDate","nowMonth","nowDate","isPast","today","apparatusId","match","params","visible_4","visible_5","format","columns","title","dataIndex","key","userId","month","date","startTime","endTime","shouldComponentUpdate","componentWillReceiveProps","newProps","render","getFieldDecorator","marginBottom","margin","gutter","column","item","rules","required","y","pageSize","foramt","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,EAAqCC,MAArC,EAA6CC,KAA7C,EAAoDC,OAApD,EAA6DC,KAA7D,EAAmEC,IAAnE,EAAyEC,IAAzE,EAA+EC,KAA/E,EAAsFC,IAAtF,EAA4FC,UAA5F,EAAwGC,OAAxG,QAAsH,MAAtH;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;MAGQC,K,GAAUlB,U,CAAVkB,K;;AAER,MAAMC,SAAN,SAAwBpB,SAAxB,CAAkC;AAI9BqB,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAHlBC,KAGkB,GAHV,EAGU;;AAAA,SAyJlBC,WAzJkB,GAyJL,MAAK;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,SAAvB;AACA,WAAKC,QAAL,CAAc;AACVD,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA9JiB;;AAAA,SA+JlBE,UA/JkB,GA+JNC,CAAC,IAAG;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKC,cAAL;AACA,WAAKH,QAAL,CAAc;AACVD,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KArKiB;;AAAA,SAsKlBK,cAtKkB,GAsKFF,CAAC,IAAG;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVD,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA3KiB;;AAAA,SA6KlBM,WA7KkB,GA6KL,MAAK;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWW,SAAvB;AACA,WAAKN,QAAL,CAAc;AACVM,QAAAA,SAAS,EAAC;AADA,OAAd;AAIH,KAnLiB;;AAAA,SAoLlBC,UApLkB,GAoLNL,CAAC,IAAG;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVM,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAzLiB;;AAAA,SA0LlBE,cA1LkB,GA0LFN,CAAC,IAAG;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVM,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA/LiB;;AAAA,SAkMlBG,YAlMkB,GAkMHP,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACQ,cAAF;AACA,WAAKhB,KAAL,CAAWiB,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAMC,MAAN,KAAgB;AAC3C,YAAI,CAACD,GAAL,EAAU;AACNhB,UAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAZ;AACAC,UAAAA,KAAK,CAAC,0CAAwC,KAAKpB,KAAL,CAAWqB,IAApD,EAA0D;AAC3DC,YAAAA,MAAM,EAAE,MADmD;AAE3DC,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB,aAFkD;AAG3DC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,MAAf,CAHqD,CAG9B;;AAH8B,WAA1D,CAAL,CAIGQ,IAJH,CAIQC,QAAQ,IAAI;AAChB,gBAAIA,QAAQ,KAAK,GAAjB,EAAsB;AAClB,qBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,aAFD,MAEO,CACH;AACH;AACJ,WAVD,EAUGF,IAVH,CAUQC,QAAQ,IAAI;AAChB,iBAAK5B,KAAL,CAAW8B,aAAX,CAAyBC,IAAzB,CAA8BH,QAA9B;AACA,iBAAKvB,QAAL,CAAc;AACVyB,cAAAA,aAAa,EAAE,KAAK9B,KAAL,CAAW8B;AADhB,aAAd;AAGH,WAfD;AAgBH;AACJ,OApBD;AAqBH,KAzNiB;;AAAA,SA4NlBE,WA5NkB,GA4NL,MAAK;AACd9B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWiC,SAAvB;AACA,WAAK5B,QAAL,CAAc;AACV4B,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAjOiB;;AAAA,SAkOlBC,UAlOkB,GAkON3B,CAAC,IAAG;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACV4B,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAvOiB;;AAAA,SAwOlBE,cAxOkB,GAwOF5B,CAAC,IAAG;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACV4B,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA7OiB;;AAAA,SA+OlBG,WA/OkB,GA+OJ,MAAM;AAChBlC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWqC,SAAvB;AACA,WAAKhC,QAAL,CAAc;AACVgC,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KApPiB;;AAAA,SAqPlBC,UArPkB,GAqPL/B,CAAC,IAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKgC,YAAL;AACA,WAAKlC,QAAL,CAAc;AACVgC,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KA3PiB;;AAAA,SA4PlBG,cA5PkB,GA4PDjC,CAAC,IAAI;AAClBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKF,QAAL,CAAc;AACVgC,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAjQiB;;AAAA,SAsRlBI,MAtRkB,GAsRRC,EAAD,IAAQ;AACb,YAAMC,GAAG,GAAG,gBAAgBD,EAA5B;AACA,aAAQC,GAAR;AACH,KAzRiB;;AAAA,SA4RlBC,QA5RkB,GA4RP,MAAM;AACb,UAAIC,MAAM,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,MAAM,GAAG,KAAK7C,KAAL,CAAW+C,SAApB;AACAF,MAAAA,MAAM,CAACG,OAAP,CAAeH,MAAM,CAACI,OAAP,KAAiB,CAAhC;AACA,UAAIC,EAAE,GAAGL,MAAM,CAACM,WAAP,EAAT;AACAD,MAAAA,EAAE,IAAE,EAAJ;AACAA,MAAAA,EAAE,GAAGA,EAAE,CAACE,SAAH,CAAa,CAAb,EAAe,CAAf,CAAL;AACA,UAAIC,EAAE,GAAGR,MAAM,CAACS,QAAP,EAAT;AACA,UAAIC,EAAE,GAAGV,MAAM,CAACI,OAAP,EAAT;AACA,UAAIO,SAAS,GAAGN,EAAE,GAACG,EAAH,GAAME,EAAtB;AACAnC,MAAAA,KAAK,CAAC,mDAAiD,KAAKpB,KAAL,CAAWqB,IAA5D,GAAiE,GAAjE,GAAqEmC,SAAtE,EAAiF;AAClFlC,QAAAA,MAAM,EAAE,KAD0E;AAElFC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFyE,CAEjC;;AAFiC,OAAjF,CAAL,CAGGI,IAHH,CAGQC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,KAAK,GAAhB,EAAoB;AAChB,iBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,SAFD,MAEO,CACH;AACH;AACJ,OATD,EASGF,IATH,CASQC,QAAQ,IAAI;AAChB,aAAK6B,SAAL,CAAe;AACXV,UAAAA,SAAS,EAAGF,MADD;AAEXa,UAAAA,mBAAmB,EAAE9B;AAFV,SAAf;AAIH,OAdD;AAeH,KArTiB;;AAAA,SAuTlB+B,SAvTkB,GAuTN,MAAM;AACd,UAAId,MAAM,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,MAAM,GAAG,KAAK7C,KAAL,CAAW+C,SAApB;AACAF,MAAAA,MAAM,CAACG,OAAP,CAAeH,MAAM,CAACI,OAAP,KAAiB,CAAhC;AACA,UAAIC,EAAE,GAAGL,MAAM,CAACM,WAAP,EAAT;AACAD,MAAAA,EAAE,IAAE,EAAJ;AACAA,MAAAA,EAAE,GAAGA,EAAE,CAACE,SAAH,CAAa,CAAb,EAAe,CAAf,CAAL;AACA,UAAIC,EAAE,GAAGR,MAAM,CAACS,QAAP,EAAT;AACA,UAAIC,EAAE,GAAGV,MAAM,CAACI,OAAP,EAAT;AACA,UAAIO,SAAS,GAAGN,EAAE,GAACG,EAAH,GAAME,EAAtB;AACAnC,MAAAA,KAAK,CAAC,mDAAiD,KAAKpB,KAAL,CAAWqB,IAA5D,GAAiE,GAAjE,GAAqEmC,SAAtE,EAAiF;AAClFlC,QAAAA,MAAM,EAAE,KAD0E;AAElFC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFyE,CAEjC;;AAFiC,OAAjF,CAAL,CAGGI,IAHH,CAGQC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,KAAK,GAAhB,EAAoB;AAChB,iBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,SAFD,MAEO,CACH;AACH;AACJ,OATD,EASGF,IATH,CASQC,QAAQ,IAAI;AAChB,aAAK6B,SAAL,CAAe;AACXV,UAAAA,SAAS,EAAGF,MADD;AAEXa,UAAAA,mBAAmB,EAAE9B;AAFV,SAAf;AAIH,OAdD;AAeH,KAhViB;;AAAA,SAkVlBgC,SAlVkB,GAkVN,MAAM;AACd,UAAIf,MAAM,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,MAAM,GAAG,KAAK7C,KAAL,CAAW+C,SAApB;AACA,aAAQF,MAAM,CAACS,QAAP,KAAkB,CAA1B;AACH,KAtViB;;AAAA,SAuVlBO,QAvVkB,GAuVP,MAAM;AACb,UAAIhB,MAAM,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,MAAM,GAAG,KAAK7C,KAAL,CAAW+C,SAApB;AACA,aAAQF,MAAM,CAACI,OAAP,EAAR;AACH,KA3ViB;;AAAA,SA6VlBa,eA7VkB,GA6VD,MAAI;AACjB,UAAIC,CAAC,GAAG,KAAK/D,KAAL,CAAWqB,IAAnB;AACA,UAAI2C,OAAO,GAAG,KAAKhE,KAAL,CAAW8B,aAAzB;AACA5B,MAAAA,OAAO,CAACC,GAAR,CAAY6D,OAAZ;AACAA,MAAAA,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAeC,GAAG,IAAIA,GAAG,CAACxB,EAAJ,IAAUqB,CAAhC,CAAV;;AACA,UAAGC,OAAO,CAACG,MAAR,GAAe,CAAlB,EAAoB;AAChB,YAAIC,CAAC,GAAGJ,OAAO,CAAC,CAAD,CAAP,CAAWK,QAAnB;AACH,OAFD,MAGK;AAAE,YAAID,CAAC,GAAG,EAAR;AAAW,OARD,CAQE;;;AACnB,aAAQA,CAAR;AACH,KAvWiB;;AAAA,SAyWlB7B,YAzWkB,GAyWL,MAAI;AACb,UAAIyB,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,GAAG,KAAKhE,KAAL,CAAWsE,eAArB;AACA,UAAIC,GAAG,GAAG,CAAV;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,OAAO,CAACG,MAA3B,EAAmCK,CAAC,EAApC,EAAuC;AACnC,YAAIR,OAAO,CAACQ,CAAD,CAAP,CAAWC,IAAX,IAAmB/E,OAAO,GAAGgF,IAAjC,EAAuC;AAAE;AACrCH,UAAAA,GAAG,GAAGC,CAAN;AAAS;AACZ;AACJ;;AACDR,MAAAA,OAAO,CAACW,MAAR,CAAeJ,GAAf,EAAoB,CAApB;AACA,WAAKlE,QAAL,CAAc;AACViE,QAAAA,eAAe,EAAEN;AADP,OAAd,EAEG,MAAM;AACL,aAAK3D,QAAL,CAAc;AACVqD,UAAAA,mBAAmB,EAAE,KAAKkB,sBAAL;AADX,SAAd;AAGH,OAND;AAOH,KA1XiB;;AAAA,SA4XlBpE,cA5XkB,GA4XD,MAAM;AACnB,UAAIwD,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,GAAG,KAAKhE,KAAL,CAAW8B,aAAX,CAAyBmC,MAAzB,CAAgCC,GAAG,IAAIA,GAAG,CAACxB,EAAJ,IAAU,KAAK1C,KAAL,CAAWqB,IAA5D,CAAV;AACAD,MAAAA,KAAK,CAAC,0CAA0C,KAAKyD,KAA/C,GAAuD,GAAvD,GAA6D,KAAK7E,KAAL,CAAWqB,IAAzE,EAA+E;AAChFC,QAAAA,MAAM,EAAE,QADwE;AAEhFC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFuE,CAE/B;;AAF+B,OAA/E,CAAL,CAGGI,IAHH,CAGQC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,KAAK,GAAjB,EAAsB;AAClB,iBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,SAFD,MAEO,CACH;AACH;AACJ,OATD,EASGF,IATH,CASQC,QAAQ,IAAI;AAChB,aAAKvB,QAAL,CAAc;AACVyB,UAAAA,aAAa,EAAEkC;AADL,SAAd;AAGH,OAbD;AAcH,KA7YiB;;AAAA,SAgZlBc,kBAhZkB,GAgZG,MAAM;AACvB,UAAId,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,GAAG,KAAKhE,KAAL,CAAW0D,mBAArB;AACA,UAAIqB,OAAO,GAAG,KAAd;;AACA,WAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,OAAO,CAACG,MAA5B,EAAoCK,CAAC,EAArC,EAAyC;AACrC,YAAIR,OAAO,CAACQ,CAAD,CAAP,CAAWC,IAAX,IAAmB/E,OAAO,GAAGgF,IAAjC,EAAuC;AAAE;AACrCK,UAAAA,OAAO,GAAG,IAAV;AAAgB;AACnB;AACJ;;AACD,aAAQA,OAAR;AACH,KA1ZiB;;AAAA,SA6ZlBC,mBA7ZkB,GA6ZI,MAAM;AACxB,UAAIC,QAAQ,GAAG,KAAK3B,QAAL,EAAf;AACA,UAAI4B,OAAO,GAAG,KAAKjC,OAAL,EAAd;AACA,UAAIkC,MAAM,GAAG,KAAb;;AACA,UAAI,KAAKC,KAAL,CAAW9B,QAAX,MAAyB2B,QAAzB,IAAqC,KAAKG,KAAL,CAAWnC,OAAX,KAAuBiC,OAAhE,EAAyE;AACrEC,QAAAA,MAAM,GAAG,IAAT;AACH;;AACD,aAAQA,MAAR;AACH,KAraiB;;AAAA,UAENE,WAFM,GAEU,KAAKtF,KAAL,CAAWuF,KAAX,CAAiBC,MAF3B,CAENF,WAFM,EAGd;AACA;;AACA,QAAID,KAAK,GAAG,IAAItC,IAAJ,EAAZ;AAEA,SAAK9C,KAAL,GAAa;AACTqB,MAAAA,IAAI,EAAEgE,WADG;AAETtC,MAAAA,SAAS,EAAEqC,KAFF;AAGT1B,MAAAA,mBAAmB,EAAE,EAHZ;AAITtD,MAAAA,SAAS,EAAE,KAJF;AAIS;AAClBO,MAAAA,SAAS,EAAE,KALF;AAKS;AAClBsB,MAAAA,SAAS,EAAE,KANF;AAMS;AAClBI,MAAAA,SAAS,EAAE,KAPF;AAOS;AAClBmD,MAAAA,SAAS,EAAE,KARF;AAQS;AAClBC,MAAAA,SAAS,EAAE,KATF;AASS;AAClBC,MAAAA,MAAM,EAAE,OAVC;AAWTC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,KAAK,EAAE,MADX;AAEIC,QAAAA,SAAS,EAAE,MAFf;AAGIC,QAAAA,GAAG,EAAE;AAHT,OADK,EAML;AACIF,QAAAA,KAAK,EAAE,MADX;AAEIC,QAAAA,SAAS,EAAE,MAFf;AAGIC,QAAAA,GAAG,EAAE;AAHT,OANK,CAXA;AAuBTC,MAAAA,MAAM,EAAErG,OAAO,GAAGgD,EAvBT;AAwBTmC,MAAAA,KAAK,EAAElF,MAAM,GAAG+C,EAxBP;AAyBTZ,MAAAA,aAAa,EAAE,CACX;AACIY,QAAAA,EAAE,EAAE,CADR;AAEI2B,QAAAA,QAAQ,EAAE;AAFd,OADW,EAIR;AACC3B,QAAAA,EAAE,EAAE,CADL;AAEC2B,QAAAA,QAAQ,EAAE;AAFX,OAJQ,EAOR;AACC3B,QAAAA,EAAE,EAAE,CADL;AAEC2B,QAAAA,QAAQ,EAAE;AAFX,OAPQ,EAUR;AACC3B,QAAAA,EAAE,EAAE,CADL;AAEC2B,QAAAA,QAAQ,EAAE;AAFX,OAVQ,EAaR;AACC3B,QAAAA,EAAE,EAAE,CADL;AAEC2B,QAAAA,QAAQ,EAAE;AAFX,OAbQ,CAzBN;AA2CTC,MAAAA,eAAe,EAAC,CACZ;AACIe,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,CAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMI1B,QAAAA,IAAI,EAAE;AANV,OADY,EASZ;AACIY,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,CAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMI1B,QAAAA,IAAI,EAAE;AANV,OATY,EAiBZ;AACIY,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMI1B,QAAAA,IAAI,EAAE;AANV,OAjBY,EAyBZ;AACIY,QAAAA,WAAW,EAAC,CADhB;AAEIW,QAAAA,KAAK,EAAC,EAFV;AAGIC,QAAAA,IAAI,EAAC,EAHT;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMI1B,QAAAA,IAAI,EAAE;AANV,OAzBY,EAkCZ;AACIY,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,CAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMI1B,QAAAA,IAAI,EAAE;AANV,OAlCY,EA0CZ;AACIY,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMI1B,QAAAA,IAAI,EAAE;AANV,OA1CY,EAkDZ;AACIY,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMI1B,QAAAA,IAAI,EAAE;AANV,OAlDY,EA0DZ;AACIY,QAAAA,WAAW,EAAC,CADhB;AAEIW,QAAAA,KAAK,EAAC,EAFV;AAGIC,QAAAA,IAAI,EAAC,EAHT;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMI1B,QAAAA,IAAI,EAAE;AANV,OA1DY,EAkEZ;AACIY,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,CAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMI1B,QAAAA,IAAI,EAAE;AANV,OAlEY,EA0EZ;AACIY,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,CAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMI1B,QAAAA,IAAI,EAAE;AANV,OA1EY,EAkFZ;AACIY,QAAAA,WAAW,EAAE,CADjB;AAEIW,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMI1B,QAAAA,IAAI,EAAE;AANV,OAlFY,EA0FZ;AACIY,QAAAA,WAAW,EAAC,CADhB;AAEIW,QAAAA,KAAK,EAAC,EAFV;AAGIC,QAAAA,IAAI,EAAC,EAHT;AAIIC,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,OAAO,EAAE,EALb;AAMI1B,QAAAA,IAAI,EAAE;AANV,OA1FY;AA3CP,KAAb;AAgJH,GA3J6B,CA4J9B;;;AA0GA2B,EAAAA,qBAAqB,CAACrG,KAAD,EAAQ;AACzB,WAAO,IAAP;AACH,GAxQ6B,CAyQ9B;;;AACAsG,EAAAA,yBAAyB,CAACC,QAAD,EAAW;AAChC,QAAI,KAAKvG,KAAL,CAAWuF,KAAX,CAAiBC,MAAjB,KAA4Be,QAAQ,CAAChB,KAAT,CAAeC,MAA/C,EAAuD;AAAA,YAC3CF,WAD2C,GAC3B,KAAKtF,KAAL,CAAWuF,KAAX,CAAiBC,MADU,CAC3CF,WAD2C;AAEnD,WAAKhF,QAAL,CACI;AACIgB,QAAAA,IAAI,EAAEgE;AADV,OADJ,EAGO,MAAM;AACL;AACA,aAAKhF,QAAL,CAAc;AACVqD,UAAAA,mBAAmB,EAAC;AADV,SAAd;AAGH,OARL;AAUH;AACJ;;AAmJD6C,EAAAA,MAAM,GAAG;AAAA,UACGC,iBADH,GACyB,KAAKzG,KAAL,CAAWiB,IADpC,CACGwF,iBADH;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAR,CAFJ,EAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OADV;AAEI,MAAA,UAAU,EAAE,KAAK5G,KAAL,CAAW8B,aAF3B;AAGI,MAAA,UAAU,EAAE+E,IAAI,IACZ,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,KAAKpE,MAAL,CAAYoE,IAAI,CAACnE,EAAjB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,MAAM,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BmE,IAAI,CAACxC,QAApC,CAAhC,CADJ,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAWI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAK3D,WAAtB;AAAmC,MAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAXJ,EAcI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,yCADV;AAEI,MAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW,SAFxB;AAII,MAAA,IAAI,EAAE,KAAKC,UAJf;AAKI,MAAA,QAAQ,EAAE,KAAKC,cALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAmC,MAAA,SAAS,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM0F,iBAAiB,CAAC,MAAD,EAAS;AACvBM,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBxH,QAAAA,OAAO,EAAE;AAA3B,OAAD;AADgB,KAAT,CAAjB,CAGG,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADN,CADH,EAQI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,SAAS,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CARJ,CARJ,CAdJ,EAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArCJ,EAsCI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKU,WAAtB;AAAmC,MAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAtCJ,EAyCI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,qCADV;AAEI,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWI,SAFxB;AAGI,MAAA,IAAI,EAAE,KAAKE,UAHf;AAII,MAAA,QAAQ,EAAE,KAAKG,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAY,KAAKqD,eAAL,EAAZ,MAPJ,CAzCJ,CADJ,EAqDI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAE,KAAKlB,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,CADJ,EAEK,KAAKgB,SAAL,EAFL,aAEyB,KAAKC,QAAL,EAFzB,YAGI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAE,KAAKF,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6C,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7C,CAHJ,CADJ,CADA,EAQA,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,UAAU,EAAE,KAAK3D,KAAL,CAAW0D,mBAA3C;AAAgE,MAAA,OAAO,EAAE,KAAK1D,KAAL,CAAW2F,OAApF;AAA6F,MAAA,MAAM,EAAE;AAAEqB,QAAAA,CAAC,EAAE;AAAL,OAArG;AAAiH,MAAA,UAAU,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CARA,EAYA,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKjF,WAAtB;AAAmC,MAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAII,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,wCADV;AAEI,MAAA,OAAO,EAAE,KAAKhC,KAAL,CAAWiC,SAFxB;AAGI,MAAA,IAAI,EAAE,KAAKC,UAHf;AAII,MAAA,QAAQ,EAAE,KAAKC,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAY,KAAK2B,eAAL,EAAZ,MANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAASpE,OAAO,GAAGgF,IAAnB,CAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4IAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC,EAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,WACS,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAEjF,MAAM,CAAC,OAAD,EAAU,KAAKO,KAAL,CAAW0F,MAArB,CAAhC;AAA8D,MAAA,MAAM,EAAE,KAAK1F,KAAL,CAAWkH,MAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADT,UACwG,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAEzH,MAAM,CAAC,OAAD,EAAU,KAAKO,KAAL,CAAW0F,MAArB,CAAhC;AAA8D,MAAA,MAAM,EAAE,KAAK1F,KAAL,CAAWkH,MAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADxG,CARJ,CAJJ,EAeI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,EAgBM,KAAKpC,kBAAL,EAAD,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAK1C,WAAtB;AAAmC,MAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADJ,EAII,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,0CADV;AAEI,MAAA,OAAO,EAAE,KAAKpC,KAAL,CAAWqC,SAFxB;AAGI,MAAA,IAAI,EAAE,KAAKC,UAHf;AAII,MAAA,QAAQ,EAAE,KAAKE,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0HANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAW,KAAKsB,eAAL,EAAX,MAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAASpE,OAAO,GAAGgF,IAAnB,CARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCATJ,CAJJ,CAjBR,CAZA,CAFR,CArDJ,CAJJ,CADJ;AAkHH;;AA/hB6B;;AAkiBlC,eAAerF,IAAI,CAAC8H,MAAL,GAActH,SAAd,CAAf","sourcesContent":["import React, { Component } from 'react'; \nimport { Typography, Icon, Row, Col, Button, Modal, Divider, Table,Card, List, Input, Form, TimePicker, message} from 'antd'\nimport { Link } from \"react-router-dom\"; \nimport moment from 'moment';\nimport { getUser, getLab } from '../authentication';\n\n\nconst { Title } = Typography; \n\nclass Apparatus extends Component {\n    state = {\n        \n    }\n    constructor(props){\n        super(props);\n        const { apparatusId } = this.props.match.params;\n        //현재 랩 id로 기기 리스트 받아와서 변수에 저장하기 \n        //오늘 날짜 받아오기\n        var today = new Date();\n      \n        this.state = {\n            menu: apparatusId,\n            todayDate: today,\n            realReservationList: [],\n            visible_0: false, // '기기 삭제' 모달\n            visible_1: false, //'기기등록하기' 모달\n            visible_2: false, // '기기예약하기' 모달\n            visible_3: false, // '본인 예약 삭제확인' 모달\n            visible_4: false, // '예약 중복' 모달\n            visible_5: false, // '예약 삭제 오류 - 지난 날짜 삭제 안됨' 모달 \n            format: 'HH:mm',\n            columns: [\n                {\n                    title: 'Time',\n                    dataIndex: 'time',\n                    key: 'time',\n                },\n                {\n                    title: 'User',\n                    dataIndex: 'user',\n                    key: 'user',\n                },\n            ],\n            userId: getUser().id,\n            labId: getLab().id,\n            apparatusList: [\n                {\n                    id: 1,\n                    nickname: \"apparatus1\" \n                }, {\n                    id: 2,\n                    nickname: \"apparatus2\"\n                }, {\n                    id: 3,\n                    nickname: \"apparatus3\"\n                }, {\n                    id: 4,\n                    nickname: \"apparatus4\"\n                }, {\n                    id: 5,\n                    nickname: \"apparatus5\"\n                }\n            ],\n            reservationList:[\n                {   \n                    apparatusId: 1,\n                    month: 11,\n                    date: 24,\n                    startTime: 8,\n                    endTime: 11,\n                    user: 'Yeong mo'\n                },\n                {   \n                    apparatusId: 2,\n                    month: 11,\n                    date: 24,\n                    startTime: 8,\n                    endTime: 10,\n                    user: 'Joo young'\n                },\n                {   \n                    apparatusId: 2,\n                    month: 11,\n                    date: 24,\n                    startTime: 13,\n                    endTime: 16,\n                    user: 'Yeong mo'\n                },\n                {\n                    apparatusId:1,\n                    month:11,\n                    date:24,\n                    startTime: 11,\n                    endTime: 13,\n                    user: 'Eun mu'\n                }, \n\n                {   \n                    apparatusId: 1,\n                    month: 11,\n                    date: 25,\n                    startTime: 8,\n                    endTime: 10,\n                    user: 'Ji su'\n                },\n                {   \n                    apparatusId: 2,\n                    month: 11,\n                    date: 25,\n                    startTime: 11,\n                    endTime: 13,\n                    user: 'Hyeok ju'\n                },\n                {   \n                    apparatusId: 2,\n                    month: 11,\n                    date: 25,\n                    startTime: 14,\n                    endTime: 17,\n                    user: 'Han bin'\n                },\n                {\n                    apparatusId:1,\n                    month:11,\n                    date:25,\n                    startTime: 16,\n                    endTime: 18,\n                    user: 'Yeong mo'\n                },\n                {   \n                    apparatusId: 1,\n                    month: 11,\n                    date: 26,\n                    startTime: 9,\n                    endTime: 13,\n                    user: 'Ji su'\n                },\n                {   \n                    apparatusId: 2,\n                    month: 11,\n                    date: 26,\n                    startTime: 9,\n                    endTime: 10,\n                    user: 'Joo young'\n                },\n                {   \n                    apparatusId: 2,\n                    month: 11,\n                    date: 26,\n                    startTime: 10,\n                    endTime: 11,\n                    user: 'Hyeok ju'\n                },\n                {\n                    apparatusId:4,\n                    month:11,\n                    date:26,\n                    startTime: 11,\n                    endTime: 12,\n                    user: 'Yeong mo'\n                }\n            ],\n           \n         }     \n    }    \n    //'기기 삭제'버튼에 대한 메소드\n    showModal_0 =()=> {\n        console.log(this.state.visible_0)\n        this.setState({\n            visible_0: true\n        })\n    }\n    handleOk_0 =e=> {\n        console.log(e);\n        this.handleRemove_2();\n        this.setState({\n            visible_0: false,\n        })\n    }\n    handleCancel_0 =e=> {\n        console.log(e);\n        this.setState({\n            visible_0: false,\n        })\n    }\n    //'기기 등록하기' 버튼 메소드\n    showModal_1 =()=> {\n        console.log(this.state.visible_1)\n        this.setState({\n            visible_1:true,\n        })\n\n    }\n    handleOk_1 =e=> {\n        console.log(e);\n        this.setState({\n            visible_1: false,\n        })\n    }\n    handleCancel_1 =e=> {\n        console.log(e);\n        this.setState({\n            visible_1: false,\n        })\n    }\n\n    //'등록하기'버튼 입력받기?\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values)=> {\n            if (!err) {\n                console.log(values)\n                fetch('http://13.124.122.246:8080/apparatus/'+this.state.menu, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' }, \n                    body: JSON.stringify(values) //여기에다가 body 넣어주기\n                }).then(response => {\n                    if (response === 200) {\n                        return response.json()\n                    } else {\n                        // 오류 난 경우 처리 \n                    }\n                }).then(response => {\n                    this.state.apparatusList.push(response)\n                    this.setState({\n                        apparatusList: this.state.apparatusList\n                    })\n                })\n            }\n        });\n    };\n\n    //'예약하기'버튼에 대한 메소드\n    showModal_2 =()=> {\n        console.log(this.state.visible_2)\n        this.setState({\n            visible_2: true\n        })\n    }\n    handleOk_2 =e=> {\n        console.log(e);\n        this.setState({\n            visible_2: false,\n        })\n    }\n    handleCancel_2 =e=> {\n        console.log(e);\n        this.setState({\n            visible_2: false,\n        })\n    }\n    //'본인 예약 삭제'버튼에 대한 메소드\n    showModal_3 = () => {\n        console.log(this.state.visible_3)\n        this.setState({\n            visible_3: true\n        })\n    }\n    handleOk_3 = e => {\n        console.log(e);\n        this.handleRemove();\n        this.setState({\n            visible_3: false,\n        })\n    }\n    handleCancel_3 = e => {\n        console.log(e);\n        this.setState({\n            visible_3: false,\n        })\n    }\n    shouldComponentUpdate(props) {\n        return true\n    }\n    //현재 페이지 내에서 파라미터만 변경되었을 경우\n    componentWillReceiveProps(newProps) {\n        if (this.props.match.params !== newProps.match.params) {\n            const { apparatusId } = this.props.match.params;\n            this.setState(\n                {\n                    menu: apparatusId\n                }, () => {\n                    //클릭한 기기 ID에 대해서 예약 리스트 받아와서 STATE에 저장 \n                    this.setState({\n                        realReservationList:[]\n                    })\n                }\n            )\n        }\n    }\n   \n    getUrl = (id) => {\n        const url = '/apparatus/' + id;\n        return (url)\n    }\n\n    //날짜 왼쪽으로 이동하면 해당 날짜에 해당하는 새로운 표출할 예약 필터링\n    goToLeft = () => {\n        var newday = new Date();\n        newday = this.state.todayDate;\n        newday.setDate(newday.getDate()-1);\n        var yy = newday.getFullYear();\n        yy+=''\n        yy = yy.substring(2,4);\n        var mm = newday.getMonth()\n        var dd = newday.getDate()\n        var todayInfo = yy+mm+dd ;\n        fetch('http://13.124.122.246:8080/schedule/apparatus/'+this.state.menu+'/'+todayInfo ,{ \n            method: 'GET', \n            headers: { 'Content-Type': 'application/json' }, //안고쳐도 됨\n        }).then(response => {\n            if(response === 200){\n                return response.json()\n            } else {\n                // 오류 난 경우 처리 \n            }\n        }).then(response => { \n            this.setStatus({ \n                todayDate : newday,\n                realReservationList: response\n            })\n        })\n    }\n    //날짜 오른쪽 으로 이동하면 해당 날짜에 해당하는 새로운 표출할 예약 필터링\n    goToRight = () => { \n        var newday = new Date();\n        newday = this.state.todayDate;\n        newday.setDate(newday.getDate()+1);\n        var yy = newday.getFullYear();\n        yy+=''\n        yy = yy.substring(2,4);\n        var mm = newday.getMonth()\n        var dd = newday.getDate()\n        var todayInfo = yy+mm+dd ;\n        fetch('http://13.124.122.246:8080/schedule/apparatus/'+this.state.menu+'/'+todayInfo ,{ \n            method: 'GET', \n            headers: { 'Content-Type': 'application/json' }, //안고쳐도 됨\n        }).then(response => {\n            if(response === 200){\n                return response.json()\n            } else {\n                // 오류 난 경우 처리 \n            }\n        }).then(response => { \n            this.setStatus({ \n                todayDate : newday,\n                realReservationList: response\n            })\n        })\n    }\n\n    makeMonth = () => {\n        var newday = new Date();\n        newday = this.state.todayDate;\n        return (newday.getMonth()+1)\n    }\n    makeDate = () => {\n        var newday = new Date();\n        newday = this.state.todayDate;\n        return (newday.getDate())\n    }\n    // 현재 누른 기기의 이름을 받아오는 함수\n    getApparNameNow =()=>{\n        var n = this.state.menu; \n        var newList = this.state.apparatusList\n        console.log(newList)\n        newList = newList.filter(one => one.id == n)\n        if(newList.length>0){\n            var m = newList[0].nickname\n        }\n        else { var m = ''} // 없어지는 순간의 오류를 막기 위한 else구문\n        return (m)\n    }\n    // 본인 예약 삭제할 수 있는 함수 \n    handleRemove=()=>{\n        var newList = [];\n        newList = this.state.reservationList;\n        var del = 0;\n        for(var i = 0; i < newList.length; i++){\n            if (newList[i].user == getUser().name ){ //유저 네임은 로그인 정보 받아오는 걸로 바꾸기\n                del = i; break;\n            }\n        }\n        newList.splice(del, 1)\n        this.setState({\n            reservationList: newList,\n        }, () => {\n            this.setState({\n                realReservationList: this.getRealReservationList(),\n            })\n        })\n    }\n    // 기기 삭제하는 함수\n    handleRemove_2 = () => {\n        var newList = [];\n        newList = this.state.apparatusList.filter(one => one.id != this.state.menu);\n        fetch('http://13.124.122.246:8080/apparatus/' + this.labId + '/' + this.state.menu, {\n            method: 'DELETE',\n            headers: { 'Content-Type': 'application/json' }, //안고쳐도 됨\n        }).then(response => {\n            if (response === 200) {\n                return response.json()\n            } else {\n                // 오류 난 경우 처리 \n            }\n        }).then(response => {\n            this.setState({\n                apparatusList: newList,\n            })\n        })\n    }\n\n    // 현재 날짜의 현재 기기 예약 중 내 예약이 있는지 없는지 \n    checkMyReservation = () => {\n        var newList = [];\n        newList = this.state.realReservationList;\n        var present = false;\n        for (var i = 0; i < newList.length; i++) {\n            if (newList[i].user == getUser().name) { //login user정보 오면 넣기\n                present = true; break;\n            }\n        }\n        return (present)\n    }\n\n    //삭제하고자 하는 예약이 옛날 건지 확인 \n    checkReservtionDate = () => {\n        var nowMonth = this.getMonth();\n        var nowDate = this.getDate();\n        var isPast = false;\n        if (this.today.getMonth() >= nowMonth && this.today.getDate() > nowDate) {\n            isPast = true;\n        }\n        return (isPast)\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div>\n                <br />\n                <center><Title style={{ marginBottom: 35 }}>Apparatus</Title></center>\n\n                <Row >\n                    <Col span={6} style={{ margin: 10 }} >\n                        {/* 기기들 목록 */}\n                        <List\n                            grid={{ gutter: 16, column: 1 }}\n                            dataSource={this.state.apparatusList}\n                            renderItem={item => (\n                                <List.Item>\n                                    <Link to={this.getUrl(item.id)}><Button type=\"primary\" active>{item.nickname}</Button></Link>\n                                </List.Item>\n                            )}\n                        />\n                        <Button onClick={this.showModal_1} active>\n                            기기 등록\n                        </Button>\n                        <Modal\n                            title=\"new Apparatus 등록 하기\"\n                            visible={this.state.visible_1}\n                            \n                            onOk={this.handleOk_1}\n                            onCancel={this.handleCancel_1}\n\n                        >\n                            <Form onSubmit={this.handleSubmit} className=\"form\">\n                               <Form.Item>\n                                    {getFieldDecorator('name', {\n                                        rules: [{ required: true, message: '등록할 기기 이름을 입력하세요. ' }],\n                                    })(\n                                        <Input placeholder=\"new apparatue name?\" />\n                                    )}\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"button\">\n                                        등록하기\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </Modal>\n                        <p></p>\n                        <Button onClick={this.showModal_0} active> {/*기기 삭제 버튼*/}\n                            기기 삭제\n                        </Button>\n                        <Modal\n                            title=\"Apparatus 삭제 하기\"\n                            visible={this.state.visible_0}\n                            onOk={this.handleOk_0}\n                            onCancel={this.handleCancel_0}\n                        >\n                            <p> ---------- 해당 기기를 삭제하시겠습니까? ---------</p>\n                            <p>선택한 기기: {this.getApparNameNow()} </p>\n                         \n                        </Modal>\n                    </Col>\n                    <Col span={16} >\n                        {/* 기기들 상세 창 */}\n                            <Card>\n                            <Row span={3}>\n                                <center>\n                                    <Button type=\"link\" onClick={this.goToLeft}><Icon type=\"arrow-left\" /></Button>\n                                    {this.makeMonth()}월 {this.makeDate()}일\n                                    <Button type=\"link\" onClick={this.goToRight}><Icon type=\"arrow-right\" /></Button>\n                                </center>\n                            </Row>\n                            <Row span={18}>\n                                {/*시간과 예약현황을 표로 나타내기*/}\n                                <Table size='small' dataSource={this.state.realReservationList} columns={this.state.columns} scroll={{ y: 240 }} pagination={{ pageSize: 50 }} />\n                            </Row>\n                            <Row span={2}>\n                                <Button onClick={this.showModal_2} active>\n                                    예약 하기\n                                    </Button>\n                                <Modal\n                                    title=\"my Apparatus 예약 하기\"\n                                    visible={this.state.visible_2}\n                                    onOk={this.handleOk_2}\n                                    onCancel={this.handleCancel_2}\n                                >\n                                    <p>예약할 기기: {this.getApparNameNow()} </p>\n                                    <p>예약자: {getUser().name}</p>\n                                    <p>예약할 시간: (예약은 한시간 단위로만 가능합니다) <br /><br />\n                                        from <TimePicker defaultValue={moment('12:00', this.state.format)} format={this.state.foramt} /> to <TimePicker defaultValue={moment('14:00', this.state.format)} format={this.state.foramt} /></p>\n                                </Modal>\n                                <Divider type=\"vertical\" />\n                                {(this.checkMyReservation()) && (\n                                    <div>\n                                        <Button onClick={this.showModal_3} active>\n                                            my예약 삭제하기\n                                    </Button>\n                                        <Modal\n                                            title=\"my 예약 삭제하기\"\n                                            visible={this.state.visible_3}\n                                            onOk={this.handleOk_3}\n                                            onCancel={this.handleCancel_3}\n\n                                        >   <p> ---- 아래 정보의 예약을 삭제 하시겠습니까? ----</p>\n                                            <p>예약 기기: {this.getApparNameNow()} </p>\n                                            <p>예약자: {getUser().name}</p>\n                                            <p>예약 시간: </p>\n                                        </Modal>\n                                    </div>)\n                                }\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Form.create()(Apparatus);\n"]},"metadata":{},"sourceType":"module"}