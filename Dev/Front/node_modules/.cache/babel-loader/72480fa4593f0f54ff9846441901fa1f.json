{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendUnit.js\";\nimport React, { Component } from 'react';\nimport { Avatar, Button, message } from 'antd';\nimport { getUser, getToken } from '../authentication';\nimport './FriendUnit.css';\n\nclass FriendUnit extends Component {\n  //어디서 왔는지 : this.props.from\n  constructor(props) {\n    super(props);\n    this.state = {\n      relationship: 4\n    };\n\n    this.getOnePhoto = (fileName, username) => {\n      if (fileName === \"\" || fileName == null) return React.createElement(Avatar, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, username);else return React.createElement(Avatar, {\n        size: \"large\",\n        src: 'http://localhost:8080/photo/download?filename=' + fileName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    };\n\n    this.getButton = () => {\n      const from = this.props.from;\n\n      if (from === \"request\") {\n        //친구요청 리스트업일 경우\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"primary\",\n          shape: \"circle\",\n          size: \"small\",\n          onClick: this.acceptRequest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"O\"), React.createElement(Button, {\n          type: \"danger\",\n          shape: \"circle\",\n          size: \"small\",\n          onClick: this.denyRequest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"X\"));\n      } else {\n        if (getUser().userID == this.props.friend.id) {\n          return null;\n        } else if (this.state.relationship == 1) {\n          //이미 친구인 상태\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"danger\",\n            size: \"small\",\n            ghost: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, \"\\uCE5C\\uAD6C\\uB04A\\uAE30\"));\n        } else if (this.state.relationship == 2) {\n          //이미 친구요청 보낸  상태\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"small\",\n            disabled: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, \"\\uC774\\uBBF8\\uC2E0\\uCCAD\\uD588\\uC74C\"));\n        } else if (this.state.relationship == 3) {\n          //이미 친구요청 받은 상태\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"small\",\n            disabled: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, \"\\uCE5C\\uAD6C\\uC694\\uCCAD\\uBC1B\\uC74C\"));\n        } else {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"primary\",\n            size: \"small\",\n            onClick: this.sendRequest,\n            ghost: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, \"\\uCE5C\\uAD6C\\uC2E0\\uCCAD\"));\n        }\n      }\n    };\n\n    this.sendRequest = () => {\n      fetch(\"http://localhost:8080/friend/request/\" + getUser().userID + \"/\" + this.props.friend.id, {\n        method: 'POST',\n        headers: {\n          'token': getToken()\n        }\n      }).then(response => {\n        if (response.status == 200) {\n          message.success(\"친구 요청을 보냈습니다!\");\n        } else {\n          //오류 처리\n          console.log(\"error!\");\n        }\n      });\n    };\n\n    this.acceptRequest = () => {\n      fetch(\"http://localhost:8080/friend/request/response/\" + 1 + \"/\" + this.props.friend.id + \"/\" + getUser().userID, {\n        method: 'GET',\n        headers: {\n          'token': getToken()\n        }\n      }).then(response => {\n        if (response.status == 200) {\n          message.success(\"지금부터 두분은 친구사입니다!\");\n          this.deleteUnit();\n        } else {\n          //오류 처리\n          console.log(\"error!\");\n        }\n      });\n    };\n\n    this.denyRequest = () => {\n      fetch(\"http://localhost:8080/friend/request/response/\" + 2 + \"/\" + this.props.friend.id + \"/\" + getUser().userID, {\n        method: 'GET',\n        headers: {\n          'token': getToken()\n        }\n      }).then(response => {\n        if (response.status == 200) {\n          message.success(\"친구 신청을 거절 하였습니다.\");\n          this.deleteUnit();\n        } else {\n          //오류 처리\n          console.log(\"error!\");\n        }\n      });\n    };\n\n    this.deleteUnit = () => {\n      this.props.deleteArray(this.props.friend);\n    };\n\n    const requesturl = 'http://localhost:8080/friend/request/check/' + getUser().userID + '/' + this.props.friend.id;\n    fetch(requesturl, {\n      method: 'GET',\n      headers: {\n        'token': getToken()\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        console.log('관계 불러오기 에러!');\n        return [];\n      }\n    }).then(response => this.setState({\n      relationship: response\n    }));\n  } //프로필 사진을 받아오기\n\n\n  render() {\n    const profile = this.props.friend.profile;\n    const email = this.props.friend.email;\n    const userID = this.props.friend.id;\n    const username = this.props.friend.username;\n    return React.createElement(\"div\", {\n      className: \"marginTopBottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.getOnePhoto(profile, username), username), React.createElement(\"span\", {\n      className: \"rightAlign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.getButton()));\n  }\n\n}\n\nexport default FriendUnit;","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendUnit.js"],"names":["React","Component","Avatar","Button","message","getUser","getToken","FriendUnit","constructor","props","state","relationship","getOnePhoto","fileName","username","getButton","from","acceptRequest","denyRequest","userID","friend","id","sendRequest","fetch","method","headers","then","response","status","success","console","log","deleteUnit","deleteArray","requesturl","json","setState","render","profile","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Avatar, Button, message } from 'antd';\nimport { getUser, getToken } from '../authentication';\n\nimport './FriendUnit.css';\n\nclass FriendUnit extends Component {\n\n    //어디서 왔는지 : this.props.from\n    state = {\n        relationship : 4\n    }\n\n    constructor(props){\n        super(props)\n        const requesturl = 'http://localhost:8080/friend/request/check/' + getUser().userID + '/' + this.props.friend.id\n        fetch(requesturl, {\n            method: 'GET',\n            headers: {\n                'token': getToken()\n            }\n        })\n            .then(response => {\n                if (response.status ===200){\n                    return response.json();\n                } else {\n                    console.log('관계 불러오기 에러!')\n                    return [];\n                }\n            }).then(response => this.setState({relationship : response}))\n\n\n    }\n\n    //프로필 사진을 받아오기\n    getOnePhoto = (fileName, username) => {\n        if (fileName === \"\" || fileName == null)\n            return <Avatar size='large'>{username}</Avatar>\n        else\n            return <Avatar size='large' src={'http://localhost:8080/photo/download?filename=' + fileName} />\n    }\n\n    getButton = () => {\n        const from = this.props.from;\n\n        if (from === \"request\") {\n            //친구요청 리스트업일 경우\n            return (\n                <span>\n                    <Button type=\"primary\" shape=\"circle\" size=\"small\" onClick={this.acceptRequest}>O</Button>\n                    <Button type=\"danger\" shape=\"circle\" size=\"small\" onClick={this.denyRequest}>X</Button>\n                </span>\n            )\n        } else {\n            if (getUser().userID == this.props.friend.id){\n                return null;\n            } else if (this.state.relationship == 1){\n                //이미 친구인 상태\n                return (\n                    <span>\n                        <Button type=\"danger\" size=\"small\" ghost>친구끊기</Button>\n                    </span>\n                )\n            } else if (this.state.relationship == 2){\n                //이미 친구요청 보낸  상태\n                return (\n                    <span>\n                        <Button  size=\"small\" disabled>이미신청했음</Button>\n                    </span>\n                )\n            } else if (this.state.relationship == 3) {\n                //이미 친구요청 받은 상태\n                return (\n                    <span>\n                        <Button  size=\"small\"  disabled>친구요청받음</Button>\n                    </span>\n                )    \n            } else {\n                return (\n                    <span>\n                        <Button type=\"primary\" size=\"small\" onClick={this.sendRequest} ghost>친구신청</Button>\n                    </span>\n                )    \n            }\n        }\n    }\n\n    sendRequest = () => {\n        fetch(\"http://localhost:8080/friend/request/\"+getUser().userID+\"/\"+this.props.friend.id, {\n            method: 'POST',\n            headers: {\n                'token': getToken()\n            }\n        })\n            .then(response => {\n                if (response.status == 200) {\n                    message.success(\"친구 요청을 보냈습니다!\")\n                } else {\n                    //오류 처리\n                    console.log(\"error!\")\n                }\n            })\n\n    }\n\n    acceptRequest = () => {\n        fetch(\"http://localhost:8080/friend/request/response/\"+1+\"/\"+this.props.friend.id+\"/\"+getUser().userID, {\n            method: 'GET',\n            headers: {\n                'token': getToken()\n            }\n        })\n            .then(response => {\n                if (response.status == 200) {\n                    message.success(\"지금부터 두분은 친구사입니다!\")\n                    this.deleteUnit();\n                } else {\n                    //오류 처리\n                    console.log(\"error!\")\n                }\n            })\n    }\n\n    denyRequest = () => {\n        fetch(\"http://localhost:8080/friend/request/response/\"+2+\"/\"+this.props.friend.id+\"/\"+getUser().userID, {\n            method: 'GET',\n            headers: {\n                'token': getToken()\n            }\n        })\n            .then(response => {\n                if (response.status == 200) {\n                    message.success(\"친구 신청을 거절 하였습니다.\")\n                    this.deleteUnit();\n                } else {\n                    //오류 처리\n                    console.log(\"error!\")\n                }\n            })\n    }\n\n    deleteUnit = () => {\n        this.props.deleteArray(this.props.friend)\n    }\n\n    render() {\n        const profile = this.props.friend.profile;\n        const email = this.props.friend.email;\n        const userID = this.props.friend.id;\n        const username = this.props.friend.username;\n\n        return (\n            <div className=\"marginTopBottom\">\n                <span>\n                    {this.getOnePhoto(profile, username)}\n                    {username}\n                </span>\n                <span className='rightAlign'>\n                    {this.getButton()}\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default FriendUnit;"]},"metadata":{},"sourceType":"module"}