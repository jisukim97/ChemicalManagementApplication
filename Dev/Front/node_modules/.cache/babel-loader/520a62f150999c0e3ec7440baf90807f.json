{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBB38\\uD601\\uC8FC\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\src\\\\components\\\\Chemical.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button } from 'antd';\nimport ChemicalInfo from './ChemicalInfo';\nimport StockInfo from './StockInfo';\nimport MyLab from './MyLab';\nimport { tsImportEqualsDeclaration } from '@babel/types'; //화학 약품 하나에 대한 거 (my Lab 화면 중에)\n\nclass Chemical extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      visible2: false,\n      volume: ''\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = e => {\n      //두번쩨걸 닫고 첫번째 창을 켠다\n      console.log(e);\n      this.setState({\n        visible: true,\n        visible2: false\n      });\n    };\n\n    this.handleCancel = e => {\n      //둘다 닫는다\n      console.log(e);\n      this.setState({\n        visible: false,\n        visible2: false\n      });\n    };\n\n    this.handleRemove = id => {\n      // 삭제 버튼이 클릭되면 MyLab에서 해당되는 stockId를 찾아 그것을 삭제한다.\n      alert(\"폐기하기를 누르셨습니다.\");\n      /*  const chemicals = MyLab.state;\r\n        if (MyLab.state.chemicals === id.chemicals) //내가 눌렀던 약품의 chemicals.StockId를 찾는다.\r\n            //slice 전후로 데이터를 복사하고, 우리가 찾는 index (누른 index)는 제외시킨다.\r\n            this.setState({\r\n                chemicals: [\r\n                    ...chemicals.slice(0, 4),\r\n                    ...chemicals.slice(4 + 1, chemicals.lenght)\r\n                ]\r\n            });\r\n        */\n    };\n\n    this.handleChoosePlace = () => {\n      this.setState({\n        visible: false,\n        visible2: true\n      });\n      alert(\"보관장소를 선택합니다.\");\n    };\n\n    this.handleInsert = () => {\n      const _MyLab$state = MyLab.state,\n            chemicals = _MyLab$state.chemicals,\n            input = _MyLab$state.input;\n      const newChem = {\n        name: \"aa\",\n        casNo: \"bb\",\n        formula: \"cc\",\n        mw: 1,\n        mp: 2,\n        bp: 3\n      };\n      MyLab.setState({\n        chemicals: [...chemicals, newChem],\n        input: ''\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.volume]: e.target.value\n      });\n    };\n\n    this.handleUpdate = e => {\n      alert(this.state.volume + \"만큼을 줄입니다.\");\n      this.setState({\n        volume: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          input = _this$props.input,\n          data = _this$props.data,\n          onRemove = _this$props.onRemove;\n    const handleOk = this.handleOk,\n          handleCancle = this.handleCancle,\n          handleRemove = this.handleRemove;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Button, {\n      Button: true,\n      shape: \"circle\",\n      icon: \"fire\",\n      onClick: this.showModal,\n      style: {\n        fontSize: '25px'\n      },\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      title: \"\\uC57D\\uD488 \\uC815\\uBCF4\",\n      visible: this.state.visible,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(ChemicalInfo, {\n      chemical: this.props.chemical,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(StockInfo, {\n      chemical: this.props.chemical,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"\\uC0AC\\uC6A9\\uB7C9\\uC744 \\uC801\\uC73C\\uC138\\uC694\",\n      value: this.state.volume,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"\\uC0AC\\uC6A9\\uB7C9 \\uC5C5\\uB370\\uC774\\uD2B8\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleChoosePlace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"\\uC7A5\\uC18C \\uC218\\uC815\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      title: \"\\uC7A5\\uC18C \\uC218\\uC815\",\n      visible: this.state.visible2,\n      onOk: this.handleOk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"ok\\uB97C \\uB20C\\uB7EC\\uC11C \\uCC3D\\uC744 \\uB2EB\\uC73C\\uC138\\uC694\")), React.createElement(\"button\", {\n      onClick: handleRemove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"\\uD3D0\\uAE30 \\uD558\\uAE30\"))), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.props.chemical.nickname));\n  }\n\n}\n\nexport default Chemical;","map":{"version":3,"sources":["C:\\Users\\문혁주\\ChemicalManagementApplication\\Dev\\Front\\src\\components\\Chemical.js"],"names":["React","Component","Modal","Button","ChemicalInfo","StockInfo","MyLab","tsImportEqualsDeclaration","Chemical","constructor","props","state","visible","visible2","volume","showModal","setState","handleOk","e","console","log","handleCancel","handleRemove","id","alert","handleChoosePlace","handleInsert","chemicals","input","newChem","name","casNo","formula","mw","mp","bp","handleChange","target","value","handleUpdate","render","data","onRemove","handleCancle","fontSize","chemical","nickname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Button } from 'antd';\r\n\r\nimport ChemicalInfo from './ChemicalInfo';\r\nimport StockInfo from './StockInfo';\r\nimport MyLab from './MyLab';\r\nimport { tsImportEqualsDeclaration } from '@babel/types';\r\n\r\n//화학 약품 하나에 대한 거 (my Lab 화면 중에)\r\nclass Chemical extends Component {\r\n\r\n    state = {\r\n        visible: false,\r\n        visible2: false,\r\n        volume: '',\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = e => { //두번쩨걸 닫고 첫번째 창을 켠다\r\n        console.log(e);\r\n        this.setState({\r\n            visible: true,\r\n            visible2: false,\r\n        });\r\n    };\r\n\r\n    handleCancel = e => { //둘다 닫는다\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n            visible2: false,\r\n        });\r\n    };\r\n\r\n\r\n\r\n    handleRemove = (id) => {\r\n        // 삭제 버튼이 클릭되면 MyLab에서 해당되는 stockId를 찾아 그것을 삭제한다.\r\n        alert(\"폐기하기를 누르셨습니다.\");\r\n        /*  const chemicals = MyLab.state;\r\n          if (MyLab.state.chemicals === id.chemicals) //내가 눌렀던 약품의 chemicals.StockId를 찾는다.\r\n              //slice 전후로 데이터를 복사하고, 우리가 찾는 index (누른 index)는 제외시킨다.\r\n              this.setState({\r\n                  chemicals: [\r\n                      ...chemicals.slice(0, 4),\r\n                      ...chemicals.slice(4 + 1, chemicals.lenght)\r\n                  ]\r\n              });\r\n          */\r\n    }\r\n\r\n\r\n    handleChoosePlace = () => {\r\n        this.setState({\r\n            visible: false,\r\n            visible2: true,\r\n        })\r\n        alert(\"보관장소를 선택합니다.\");\r\n    }\r\n\r\n    handleInsert = () => {\r\n        const { chemicals, input } = MyLab.state;\r\n\r\n        const newChem = {\r\n            name: \"aa\",\r\n            casNo: \"bb\",\r\n            formula: \"cc\",\r\n            mw: 1,\r\n            mp: 2,\r\n            bp: 3\r\n        };\r\n        MyLab.setState({\r\n            chemicals: [...chemicals, newChem],\r\n            input: ''\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.volume] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleUpdate = (e) => {\r\n        alert(this.state.volume + \"만큼을 줄입니다.\");\r\n        this.setState({\r\n            volume: e.target.value,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { input, data, onRemove } = this.props;\r\n        const {\r\n            handleOk,\r\n            handleCancle,\r\n            handleRemove\r\n        } = this;\r\n\r\n\r\n\r\n        return (\r\n            <span>\r\n                <center>\r\n                    {/* 버튼 */}\r\n                    <Button Button shape=\"circle\" icon=\"fire\" onClick={this.showModal} style={{ fontSize: '25px' }} size=\"large\" />\r\n                    {/* 뜨는 창 */}\r\n                    <Modal\r\n                        title=\"약품 정보\"\r\n                        visible={this.state.visible}\r\n                        onOk={this.handleOk}\r\n                        onCancel={this.handleCancel}\r\n                    >\r\n                        {/* 정보 출력  */}\r\n                        <ChemicalInfo chemical={this.props.chemical} />\r\n                        <StockInfo chemical={this.props.chemical} />\r\n                        <input placeholder=\"사용량을 적으세요\" value = {this.state.volume} onChange = {this.handleChange}></input>\r\n                        <button onClick={this.handleUpdate}  >사용량 업데이트</button><br />\r\n                        <span>\r\n                            <Button onClick={this.handleChoosePlace} >장소 수정</Button><br />\r\n\r\n                            <Modal title=\"장소 수정\"\r\n\r\n                                visible={this.state.visible2}\r\n\r\n                                onOk={this.handleOk}>\r\n                                ok를 눌러서 창을 닫으세요\r\n                            </Modal>\r\n\r\n\r\n                        </span>\r\n                        <button onClick={handleRemove}>폐기 하기</button>\r\n                    </Modal>\r\n                </center>\r\n                <center>\r\n                    {this.props.chemical.nickname}\r\n                </center>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chemical;"]},"metadata":{},"sourceType":"module"}