{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBB34\\\\Desktop\\\\git\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\src\\\\components\\\\MyGroup.js\";\nimport React, { Component } from 'react';\nimport { Typography, Row, Col, Button, Card } from 'antd';\nimport MyGroupGenerate from './MyGroupGenerate';\nimport MyGroupInvite from './MyGroupInvite';\nimport MyGroupRegister from './MyGroupRegister';\nimport MyGroupWithdraw from './MyGroupWithdraw';\nimport MyGroupMember from './MyGroupMember';\nimport NoGroup from './NoGroup';\nimport { history } from '../History';\nimport { getUser, getLab } from '../authentication';\nimport { serverUrl } from '../setting';\nconst Title = Typography.Title;\n\nclass MyGroup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getGroupMembers = () => {\n      fetch(serverUrl + '/lab/' + getLab().id, {\n        method: 'GET',\n        //'GET', 'POST', 'DELETE' 등등\n        headers: {\n          'Content-Type': 'application/json'\n        } //안고쳐도 됨\n\n      }).then(response => {\n        if (response.status === 200) {\n          //이건 정상적으로 된 경우\n          console.log(0);\n          console.log(response);\n          return response.json();\n        } else {//이건 오류난 경우 -> 여기서 뭐뭐를 처리해 준다\n        }\n      }).then(response => {\n        //여기서 response로 온 값들을 state로 저장 하던가 해서 쓰면 됨\n        //여기서 response라는걸 제대로 쓸 수 있음\n        console.log(response); // 이걸로 개발자모드에서 어떠한 응답이 왔는지 확인 가능\n\n        var get = response.lab;\n        var members = [];\n\n        for (var i = 0; i < get.members.length; i++) {\n          var a = {\n            id: get.members[i].id,\n            name: get.members[i].name\n          };\n          members.push(a);\n        }\n\n        this.setState({\n          members: members\n        }); //이렇게 응답받은 실제 결과를 status로 저장해 줄 수 있음\n      });\n    };\n\n    this.afterGroupGenerate = id => {\n      console.log(12345);\n      console.log(id);\n      this.setState({\n        menu: 0,\n        labid: id,\n        labexists: id === null ? false : true\n      });\n      getGroupMembers();\n    };\n\n    this.firstButtonClick = () => {\n      this.setState({\n        menu: 1\n      });\n    };\n\n    this.secondButtonClick = () => {\n      this.setState({\n        menu: 2\n      });\n    };\n\n    this.thirdButtonClick = () => {\n      this.setState({\n        menu: 3\n      });\n    };\n\n    this.fourthButtonClick = () => {\n      this.setState({\n        menu: 4\n      });\n    };\n\n    this.enrollLab = id => {\n      this.setState({\n        labId: id,\n        labexists: true\n      });\n    };\n\n    this.withdrawLab = () => {\n      this.setState({\n        labId: 0,\n        labexists: false\n      });\n    };\n\n    this.getContent = () => {\n      if (!this.state.labexists && this.state.menu === 1) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(MyGroupGenerate, {\n          afterGroupGenerate: this.afterGroupGenerate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }));\n      } else if (this.state.labexists && this.state.menu === 2) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(MyGroupInvite, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }));\n      } else if (!this.state.labexists && this.state.menu === 3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(MyGroupRegister, {\n          enrollLab: this.enrollLab,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }));\n      } else if (this.state.labexists && this.state.menu === 4) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(MyGroupWithdraw, {\n          withdrawLab: this.withdrawLab,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }));\n      } else {\n        if (this.state.labexists) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }, React.createElement(MyGroupMember, {\n            members: this.state.members,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          }));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }, React.createElement(NoGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }));\n        }\n      }\n    };\n\n    this.state = {\n      menu: 0,\n      labexists: getLab() === null ? false : true,\n      // false 도 테스트해보기\n      // 속한 lab이 없을 때, labid = 0\n      members: [{\n        id: 0,\n        name: \"정영모\"\n      }, {\n        id: 1,\n        name: \"이한빈\"\n      }, {\n        id: 2,\n        name: \"김지수\"\n      }, {\n        id: 3,\n        name: \"이은무\"\n      }, {\n        id: 4,\n        name: \"문혁주\"\n      }, {\n        id: 5,\n        name: \"강주영\"\n      }]\n    };\n\n    if (getLab() !== null) {\n      this.getGroupMembers();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Title, {\n      style: {\n        marginBottom: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"MyGroup\")), React.createElement(Row, {\n      style: {\n        margin: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.firstButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"my Lab \\uC0DD\\uC131\"))), React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.secondButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"\\uBA64\\uBC84 \\uCD08\\uB300\")))), React.createElement(Row, {\n      style: {\n        margin: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.thirdButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Lab \\uAC00\\uC785 \\uC2E0\\uCCAD\"))), React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.fourthButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"my Lab \\uD0C8\\uD1F4\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        margin: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, this.getContent())));\n  }\n\n}\n\nexport default MyGroup;","map":{"version":3,"sources":["C:\\Users\\무\\Desktop\\git\\ChemicalManagementApplication\\Dev\\Front\\src\\components\\MyGroup.js"],"names":["React","Component","Typography","Row","Col","Button","Card","MyGroupGenerate","MyGroupInvite","MyGroupRegister","MyGroupWithdraw","MyGroupMember","NoGroup","history","getUser","getLab","serverUrl","Title","MyGroup","constructor","props","getGroupMembers","fetch","id","method","headers","then","response","status","console","log","json","get","lab","members","i","length","a","name","push","setState","afterGroupGenerate","menu","labid","labexists","firstButtonClick","secondButtonClick","thirdButtonClick","fourthButtonClick","enrollLab","labId","withdrawLab","getContent","state","render","marginBottom","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,MAA/B,EAAuCC,IAAvC,QAAmD,MAAnD;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;AACA,SAASC,SAAT,QAA0B,YAA1B;MAEQC,K,GAAUf,U,CAAVe,K;;AAER,MAAMC,OAAN,SAAsBjB,SAAtB,CAAgC;AAI9BkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwCnBC,eAxCmB,GAwCD,MAAM;AACtBC,MAAAA,KAAK,CAACN,SAAS,GAAG,OAAZ,GAAsBD,MAAM,GAAGQ,EAAhC,EAAoC;AACvCC,QAAAA,MAAM,EAAE,KAD+B;AACxB;AACfC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF8B,CAEU;;AAFV,OAApC,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAI;AAClB,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,iBAAOA,QAAQ,CAACI,IAAT,EAAP;AACD,SALD,MAKO,CACL;AACD;AACF,OAZD,EAYGL,IAZH,CAYQC,QAAQ,IAAI;AAClB;AACA;AAEAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAJkB,CAII;;AACtB,YAAIK,GAAG,GAAGL,QAAQ,CAACM,GAAnB;AACA,YAAIC,OAAO,GAAG,EAAd;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACE,OAAJ,CAAYE,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,cAAIE,CAAC,GAAG;AACNd,YAAAA,EAAE,EAAES,GAAG,CAACE,OAAJ,CAAYC,CAAZ,EAAeZ,EADb;AAENe,YAAAA,IAAI,EAAEN,GAAG,CAACE,OAAJ,CAAYC,CAAZ,EAAeG;AAFf,WAAR;AAIAJ,UAAAA,OAAO,CAACK,IAAR,CAAaF,CAAb;AACD;;AAED,aAAKG,QAAL,CAAc;AACZN,UAAAA,OAAO,EAAEA;AADG,SAAd,EAfkB,CAmBlB;AACD,OAhCD;AAiCD,KA1EkB;;AAAA,SA6EnBO,kBA7EmB,GA6EGlB,EAAD,IAAQ;AAC3BM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACA,WAAKiB,QAAL,CAAe;AACbE,QAAAA,IAAI,EAAG,CADM;AAEbC,QAAAA,KAAK,EAAGpB,EAFK;AAGbqB,QAAAA,SAAS,EAAGrB,EAAE,KAAK,IAAP,GAAc,KAAd,GAAsB;AAHrB,OAAf;AAKAF,MAAAA,eAAe;AAChB,KAtFkB;;AAAA,SAwFnBwB,gBAxFmB,GAwFA,MAAM;AACvB,WAAKL,QAAL,CAAe;AACbE,QAAAA,IAAI,EAAG;AADM,OAAf;AAGD,KA5FkB;;AAAA,SA8FnBI,iBA9FmB,GA8FC,MAAM;AACxB,WAAKN,QAAL,CAAe;AACbE,QAAAA,IAAI,EAAG;AADM,OAAf;AAGD,KAlGkB;;AAAA,SAoGnBK,gBApGmB,GAoGA,MAAM;AACvB,WAAKP,QAAL,CAAe;AACbE,QAAAA,IAAI,EAAG;AADM,OAAf;AAGD,KAxGkB;;AAAA,SA0GnBM,iBA1GmB,GA0GC,MAAM;AACxB,WAAKR,QAAL,CAAe;AACbE,QAAAA,IAAI,EAAG;AADM,OAAf;AAGD,KA9GkB;;AAAA,SAgHnBO,SAhHmB,GAgHN1B,EAAD,IAAQ;AAClB,WAAKiB,QAAL,CAAc;AAACU,QAAAA,KAAK,EAAG3B,EAAT;AACZqB,QAAAA,SAAS,EAAG;AADA,OAAd;AAEC,KAnHgB;;AAAA,SAqHjBO,WArHiB,GAqHH,MAAM;AAClB,WAAKX,QAAL,CAAc;AAACU,QAAAA,KAAK,EAAG,CAAT;AACZN,QAAAA,SAAS,EAAG;AADA,OAAd;AAEH,KAxHkB;;AAAA,SA0HfQ,UA1He,GA0HF,MAAM;AACjB,UAAI,CAAC,KAAKC,KAAL,CAAWT,SAAZ,IAAyB,KAAKS,KAAL,CAAWX,IAAX,KAAoB,CAAjD,EAAmD;AACjD,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,eAAD;AAAiB,UAAA,kBAAkB,EAAE,KAAKD,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADF;AAKD,OAND,MAMO,IAAI,KAAKY,KAAL,CAAWT,SAAX,IAAwB,KAAKS,KAAL,CAAWX,IAAX,KAAoB,CAAhD,EAAkD;AACvD,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADF;AAKD,OANM,MAMA,IAAI,CAAC,KAAKW,KAAL,CAAWT,SAAZ,IAAyB,KAAKS,KAAL,CAAWX,IAAX,KAAoB,CAAjD,EAAmD;AACxD,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,eAAD;AAAiB,UAAA,SAAS,EAAE,KAAKO,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADF;AAKD,OANM,MAMA,IAAI,KAAKI,KAAL,CAAWT,SAAX,IAAwB,KAAKS,KAAL,CAAWX,IAAX,KAAoB,CAAhD,EAAkD;AACvD,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,eAAD;AAAiB,UAAA,WAAW,EAAE,KAAKS,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADF;AAKD,OANM,MAMA;AACL,YAAI,KAAKE,KAAL,CAAWT,SAAf,EAA0B;AACxB,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA,oBAAC,aAAD;AAAe,YAAA,OAAO,EAAE,KAAKS,KAAL,CAAWnB,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CADF;AAKD,SAND,MAOK;AACH,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CADF;AAKD;AACF;AACF,KAnKc;;AAEjB,SAAKmB,KAAL,GAAa;AACXX,MAAAA,IAAI,EAAE,CADK;AAEXE,MAAAA,SAAS,EAAE7B,MAAM,OAAO,IAAb,GAAoB,KAApB,GAA4B,IAF5B;AAGX;AACA;AACAmB,MAAAA,OAAO,EAAG,CACR;AACEX,QAAAA,EAAE,EAAG,CADP;AAEEe,QAAAA,IAAI,EAAG;AAFT,OADQ,EAKR;AACEf,QAAAA,EAAE,EAAG,CADP;AAEEe,QAAAA,IAAI,EAAG;AAFT,OALQ,EASR;AACEf,QAAAA,EAAE,EAAG,CADP;AAEEe,QAAAA,IAAI,EAAG;AAFT,OATQ,EAaR;AACEf,QAAAA,EAAE,EAAG,CADP;AAEEe,QAAAA,IAAI,EAAG;AAFT,OAbQ,EAiBR;AACEf,QAAAA,EAAE,EAAG,CADP;AAEEe,QAAAA,IAAI,EAAG;AAFT,OAjBQ,EAqBR;AACEf,QAAAA,EAAE,EAAG,CADP;AAEEe,QAAAA,IAAI,EAAG;AAFT,OArBQ;AALC,KAAb;;AAiCA,QAAIvB,MAAM,OAAO,IAAjB,EAAuB;AACrB,WAAKM,eAAL;AACD;AACF;;AA+HGiC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAR,CAFA,EAKA,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAG;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKX,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAR,CAAf,CADA,EAEA,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAR,CAAf,CAFA,CALA,EAUA,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAACU,QAAAA,MAAM,EAAG;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKT,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAR,CAAf,CADA,EAEA,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAR,CAAf,CAFA,CAVA,EAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACQ,QAAAA,MAAM,EAAG;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKJ,UAAL,EADD,CADA,CAhBA,CADF;AAyBD;;AAnMyB;;AAsM5B,eAAelC,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Typography, Row, Col, Button, Card } from 'antd'\r\n\r\nimport MyGroupGenerate from './MyGroupGenerate';\r\nimport MyGroupInvite from './MyGroupInvite';\r\nimport MyGroupRegister from './MyGroupRegister';\r\nimport MyGroupWithdraw from './MyGroupWithdraw';\r\nimport MyGroupMember from './MyGroupMember';\r\nimport NoGroup from './NoGroup';\r\n\r\nimport { history } from '../History';\r\nimport { getUser, getLab } from '../authentication';\r\nimport { serverUrl } from '../setting'\r\n\r\nconst { Title } = Typography;\r\n\r\nclass MyGroup extends Component {\r\n\r\n  \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menu: 0,\r\n      labexists: getLab() === null ? false : true,\r\n      // false 도 테스트해보기\r\n      // 속한 lab이 없을 때, labid = 0\r\n      members : [\r\n        {\r\n          id : 0, \r\n          name : \"정영모\"\r\n        },\r\n        {\r\n          id : 1,\r\n          name : \"이한빈\"\r\n        },\r\n        {\r\n          id : 2,\r\n          name : \"김지수\"\r\n        },\r\n        {\r\n          id : 3,\r\n          name : \"이은무\"\r\n        },\r\n        {\r\n          id : 4,\r\n          name : \"문혁주\"\r\n        },\r\n        {\r\n          id : 5,\r\n          name : \"강주영\"\r\n        }\r\n      ]\r\n\r\n    }\r\n    if (getLab() !== null) {\r\n      this.getGroupMembers()\r\n    }\r\n  }\r\n\r\n  getGroupMembers = () => {\r\n    fetch(serverUrl + '/lab/' + getLab().id, {\r\n      method: 'GET', //'GET', 'POST', 'DELETE' 등등\r\n      headers: { 'Content-Type': 'application/json' }, //안고쳐도 됨\r\n    }).then(response => {\r\n      if (response.status === 200) {\r\n        //이건 정상적으로 된 경우\r\n        console.log(0)\r\n        console.log(response)\r\n        return response.json()\r\n      } else {\r\n        //이건 오류난 경우 -> 여기서 뭐뭐를 처리해 준다\r\n      }\r\n    }).then(response => {\r\n      //여기서 response로 온 값들을 state로 저장 하던가 해서 쓰면 됨\r\n      //여기서 response라는걸 제대로 쓸 수 있음\r\n\r\n      console.log(response) // 이걸로 개발자모드에서 어떠한 응답이 왔는지 확인 가능\r\n      var get = response.lab\r\n      var members = []\r\n      for (var i = 0; i < get.members.length; i++) {\r\n        var a = {\r\n          id: get.members[i].id,\r\n          name: get.members[i].name\r\n        }\r\n        members.push(a)\r\n      }\r\n\r\n      this.setState({\r\n        members: members\r\n\r\n      })\r\n      //이렇게 응답받은 실제 결과를 status로 저장해 줄 수 있음\r\n    })\r\n  }\r\n\r\n//그룹 생성하고 나서 정보 새로고침 해주\r\n  afterGroupGenerate = (id) => {\r\n    console.log(12345)\r\n    console.log(id)\r\n    this.setState( {\r\n      menu : 0,\r\n      labid : id,\r\n      labexists : id === null ? false : true\r\n    })\r\n    getGroupMembers()\r\n  }\r\n\r\n  firstButtonClick = () => {\r\n    this.setState( {\r\n      menu : 1\r\n    })\r\n  }\r\n\r\n  secondButtonClick = () => {\r\n    this.setState( {\r\n      menu : 2\r\n    })\r\n  }\r\n\r\n  thirdButtonClick = () => {\r\n    this.setState( {\r\n      menu : 3\r\n    })\r\n  }\r\n\r\n  fourthButtonClick = () => {\r\n    this.setState( {\r\n      menu : 4\r\n    })\r\n  }\r\n\r\n  enrollLab = (id) => {\r\n    this.setState({labId : id,\r\n      labexists : true})\r\n    }\r\n\r\n    withdrawLab = () => {\r\n      this.setState({labId : 0,\r\n        labexists : false})\r\n  }\r\n\r\n      getContent = () => {\r\n        if (!this.state.labexists && this.state.menu === 1){\r\n          return (\r\n            <div>\r\n            <MyGroupGenerate afterGroupGenerate={this.afterGroupGenerate}/>\r\n            </div>\r\n          )\r\n        } else if (this.state.labexists && this.state.menu === 2){\r\n          return (\r\n            <div>\r\n            <MyGroupInvite />\r\n            </div>\r\n          )\r\n        } else if (!this.state.labexists && this.state.menu === 3){\r\n          return (\r\n            <div>\r\n            <MyGroupRegister enrollLab={this.enrollLab}/>\r\n            </div>\r\n          )\r\n        } else if (this.state.labexists && this.state.menu === 4){\r\n          return (\r\n            <div>\r\n            <MyGroupWithdraw withdrawLab={this.withdrawLab}/>\r\n            </div>\r\n          )\r\n        } else {\r\n          if (this.state.labexists) {\r\n            return (\r\n              <div>\r\n              <MyGroupMember members={this.state.members}/>\r\n              </div>\r\n            )\r\n          }\r\n          else {\r\n            return(\r\n              <div>\r\n              <NoGroup />\r\n              </div>\r\n            )\r\n          }\r\n        }\r\n      }\r\n\r\n      render() {\r\n        return (\r\n          <div>\r\n          <br />\r\n          <center><Title style={{ marginBottom: 50 }}>MyGroup</Title></center>\r\n\r\n          {/* 버튼 4개 */}\r\n          <Row style={{margin : 20}}>\r\n          <Col span={12}><center><Button type=\"primary\" onClick={this.firstButtonClick}>my Lab 생성</Button></center></Col>\r\n          <Col span={12}><center><Button type=\"primary\" onClick={this.secondButtonClick} >멤버 초대</Button></center></Col>\r\n          </Row>\r\n\r\n          <Row style={{margin : 20}}>\r\n          <Col span={12}><center><Button type=\"primary\" onClick={this.thirdButtonClick} >Lab 가입 신청</Button></center></Col>\r\n          <Col span={12}><center><Button type=\"primary\" onClick={this.fourthButtonClick} >my Lab 탈퇴</Button></center></Col>\r\n          </Row>\r\n\r\n          {/* 내용 */}\r\n          <div>\r\n          <Card style={{margin : 20}}>\r\n          {this.getContent()}\r\n          </Card>\r\n          </div>\r\n\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    export default MyGroup;\r\n"]},"metadata":{},"sourceType":"module"}