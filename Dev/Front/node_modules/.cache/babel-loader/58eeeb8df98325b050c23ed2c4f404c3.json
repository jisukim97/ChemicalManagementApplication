{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Home.js\";\nimport React, { Component } from 'react';\nimport ArticleArray from './ArticleArray';\nimport { Avatar, Button, message } from 'antd';\nimport { getUser, getToken } from '../authentication';\nimport { getFriendButton, loadingRelationship } from './function';\nimport './Box.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [],\n      user: {},\n      other: 1,\n      relationship: 4\n    };\n\n    this.loadingUser = () => {\n      const userID = this.props.match.params.userID;\n      const requesturl = 'http://localhost:8080/user/getinfo/' + userID;\n      fetch(requesturl, {\n        method: 'GET',\n        headers: {\n          'token': getToken()\n        }\n      }).then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          console.log('유저 정보 불러오기 에러!');\n          return [];\n        }\n      }).then(response => this.setState({\n        user: response\n      }));\n    };\n\n    this.loadingArticles = () => {\n      const userID = this.props.match.params.userID;\n      const requesturl = 'http://localhost:8080/article/home/' + userID;\n      fetch(requesturl, {\n        method: 'GET',\n        headers: {\n          'token': getToken()\n        }\n      }).then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          console.log('소식 불러오기 에러!');\n          return [];\n        }\n      }).then(response => this.setState({\n        articles: response\n      }));\n    };\n\n    this.deleteArticle = article => {\n      let articles = this.state.articles;\n      articles.splice(articles.indexOf(article), 1);\n      this.setState({\n        articles: articles\n      });\n    };\n\n    this.getOnePhoto = (fileName, username) => {\n      if (fileName === \"\" || fileName == null) return React.createElement(Avatar, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, username);else return React.createElement(Avatar, {\n        size: \"large\",\n        src: 'http://localhost:8080/photo/download?filename=' + fileName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    };\n\n    this.loadingUser();\n    this.loadingArticles();\n    const _userID = this.props.match.params.userID;\n    this.setState({\n      othre: _userID\n    });\n    loadingRelationship(getUser().userID, _userID);\n  }\n\n  shouldComponentUpdate(props) {\n    return true;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.getOnePhoto(this.state.user.profile, this.state.user.username), this.state.user.username, \"\\uC758 \\uC18C\\uC2DD \\uBAA8\\uC544\\uBCF4\\uAE30\", getFriendButton(getUser().userID, this.state.other, this.state.relationship)), React.createElement(ArticleArray, {\n      articles: this.state.articles,\n      deleteArticle: this.deleteArticle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/Home.js"],"names":["React","Component","ArticleArray","Avatar","Button","message","getUser","getToken","getFriendButton","loadingRelationship","Home","constructor","props","state","articles","user","other","relationship","loadingUser","userID","match","params","requesturl","fetch","method","headers","then","response","status","json","console","log","setState","loadingArticles","deleteArticle","article","splice","indexOf","getOnePhoto","fileName","username","othre","shouldComponentUpdate","render","profile"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ArticleArray from './ArticleArray';\nimport { Avatar, Button, message } from 'antd';\n\nimport { getUser, getToken } from '../authentication';\nimport {getFriendButton, loadingRelationship} from './function';\n\n\nimport './Box.css';\n\nclass Home extends Component {\n    state = {\n        articles: [],\n        user: {},\n        other : 1,\n        relationship : 4\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.loadingUser();\n        this.loadingArticles();\n        const { userID } = this.props.match.params;\n        this.setState({othre : userID});\n        loadingRelationship(getUser().userID, userID);\n    }\n\n    shouldComponentUpdate(props) {\n        return true\n    }\n\n\n    loadingUser = () => {\n        const { userID } = this.props.match.params\n        const requesturl = 'http://localhost:8080/user/getinfo/' + userID\n        fetch(requesturl, {\n            method: 'GET',\n            headers: {\n                'token': getToken()\n            }\n        })\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    console.log('유저 정보 불러오기 에러!')\n                    return [];\n                }\n            }).then(response => this.setState({ user: response }))\n    }\n\n\n    loadingArticles = () => {\n        const { userID } = this.props.match.params\n        const requesturl = 'http://localhost:8080/article/home/' + userID\n        fetch(requesturl, {\n            method: 'GET',\n            headers: {\n                'token': getToken()\n            }\n        })\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    console.log('소식 불러오기 에러!')\n                    return [];\n                }\n            }).then(response => this.setState({ articles: response }))\n    }\n\n    //삭제한 글 state의 리스트에서 삭제해 주어 다시 렌더링\n    deleteArticle = (article) => {\n        let articles = this.state.articles\n        articles.splice(articles.indexOf(article), 1);\n        this.setState({ articles: articles })\n    }\n\n    //프로필 사진을 받아오기\n    getOnePhoto = (fileName, username) => {\n        if (fileName === \"\" || fileName == null)\n            return <Avatar size='large'>{username}</Avatar>\n        else\n            return <Avatar size='large' src={'http://localhost:8080/photo/download?filename=' + fileName} />\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div id='box'>\n                    {this.getOnePhoto(this.state.user.profile, this.state.user.username)}{this.state.user.username}의 소식 모아보기\n                    {getFriendButton(getUser().userID, this.state.other, this.state.relationship)}\n                </div>\n                <ArticleArray articles={this.state.articles} deleteArticle={this.deleteArticle} />\n            </div>\n        );\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}