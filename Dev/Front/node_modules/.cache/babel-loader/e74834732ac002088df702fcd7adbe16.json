{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBB38\\uD601\\uC8FC\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\src\\\\components\\\\MyLab.js\";\nimport React, { Component } from 'react';\nimport { List, Typography } from 'antd';\nimport Chemical from './Chemical';\nimport ChemicalAdd from './ChemicalAdd';\nimport { array } from 'prop-types';\nconst Title = Typography.Title; //마이 랩\n\nclass MyLab extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chemicals: [{\n        nickname: \"benzene 2\",\n        stockId: 3,\n        chemicalName: \"benzene\",\n        inventory: \"냉장고1\",\n        stockInfo: {\n          inventory: '냉장고1',\n          putDate: \"2019/10/31\",\n          expireDate: \"2019/10/31\",\n          volume: 100,\n          remainingVolume: 50\n        }\n      }, {\n        nickname: \"acetone 1\",\n        stockId: 4,\n        chemicalName: \"acetone\",\n        inventory: \"시약장2\",\n        stockInfo: {\n          inventory: '냉장고1',\n          putDate: \"2019/10/31\",\n          expireDate: \"2019/10/31\",\n          volume: 100,\n          remainingVolume: 50\n        }\n      }, {\n        nickname: \"something-A\",\n        stockId: 5,\n        chemicalName: \"something\",\n        inventory: \"시약장2\",\n        stockInfo: {\n          inventory: '냉장고1',\n          putDate: \"2019/10/31\",\n          expireDate: \"2019/10/31\",\n          volume: 100,\n          remainingVolume: 50\n        }\n      }, {\n        nickname: \"something-B\",\n        stockId: 6,\n        chemicalName: \"something\",\n        inventory: \"시약장2\",\n        stockInfo: {\n          inventory: '냉장고1',\n          putDate: \"2019/10/31\",\n          expireDate: \"2019/10/31\",\n          volume: 100,\n          remainingVolume: 50\n        }\n      }, {\n        nickname: \"something-C\",\n        stockId: 7,\n        chemicalName: \"something\",\n        inventory: \"시약장2\",\n        stockInfo: {\n          inventory: '냉장고1',\n          putDate: \"2019/10/31\",\n          expireDate: \"2019/10/31\",\n          volume: 100,\n          remainingVolume: 50\n        }\n      }, {\n        nickname: \"something-D\",\n        stockId: 8,\n        chemicalName: \"something\",\n        inventory: \"시약장2\",\n        stockInfo: {\n          inventory: '냉장고1',\n          putDate: \"2019/10/31\",\n          expireDate: \"2019/10/31\",\n          volume: 100,\n          remainingVolume: 50\n        }\n      }]\n    };\n\n    this.changeVolume = (stockId, change) => {\n      const chemicalArray = [];\n\n      for (let i = 0; i < this.state.chemicals.length; i++) {\n        if (this.state.chemicals.stockId === stockId) {\n          this.state.chemicals.remainingVolume = this.state.chemicals.remainingVolume - change;\n          chemicalArray.push(this.state.chemicals);\n        }\n\n        this.setState({\n          chemicals: chemicalArray\n        });\n      }\n\n      console.log(chemicalArray); //state에 있는 배열 탐색하면서 그거의 stockId가 stockId인거 찾기\n      //나머지들은 바로 chemicalArray에 넣어주고\n      //찾은거면 그거의 stockInfo.volume에서 change만큼을 뺴준다\n      //그리고 그걸 chemicalArray에 넣어주기\n      //탐색 끝나면 this.setState({chemicals : chemicalArray})\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Title, {\n      style: {\n        marginBottom: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"My Lab\")), React.createElement(List, {\n      grid: {\n        gutter: 16,\n        column: 3\n      },\n      dataSource: this.state.chemicals,\n      renderItem: item => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Chemical, {\n        chemical: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(ChemicalAdd, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MyLab;","map":{"version":3,"sources":["C:\\Users\\문혁주\\ChemicalManagementApplication\\Dev\\Front\\src\\components\\MyLab.js"],"names":["React","Component","List","Typography","Chemical","ChemicalAdd","array","Title","MyLab","constructor","props","state","chemicals","nickname","stockId","chemicalName","inventory","stockInfo","putDate","expireDate","volume","remainingVolume","changeVolume","change","chemicalArray","i","length","push","setState","console","log","render","marginBottom","gutter","column","item","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { List, Typography } from 'antd'\r\n\r\nimport Chemical from './Chemical';\r\nimport ChemicalAdd from './ChemicalAdd';\r\nimport { array } from 'prop-types';\r\n\r\nconst { Title } = Typography;\r\n\r\n//마이 랩\r\nclass MyLab extends Component {\r\n\r\n    state = {\r\n        chemicals: [\r\n            {\r\n                nickname: \"benzene 2\",\r\n                stockId: 3,\r\n                chemicalName: \"benzene\",\r\n                inventory: \"냉장고1\",\r\n                stockInfo: {\r\n                    inventory: '냉장고1',\r\n                    putDate: \"2019/10/31\",\r\n                    expireDate: \"2019/10/31\",\r\n                    volume: 100,\r\n                    remainingVolume: 50\r\n                }\r\n            },\r\n            {\r\n                nickname: \"acetone 1\",\r\n                stockId: 4,\r\n                chemicalName: \"acetone\",\r\n                inventory: \"시약장2\",\r\n                stockInfo: {\r\n                    inventory: '냉장고1',\r\n                    putDate: \"2019/10/31\",\r\n                    expireDate: \"2019/10/31\",\r\n                    volume: 100,\r\n                    remainingVolume: 50\r\n                }\r\n            },\r\n            {\r\n                nickname: \"something-A\",\r\n                stockId: 5,\r\n                chemicalName: \"something\",\r\n                inventory: \"시약장2\",\r\n                stockInfo: {\r\n                    inventory: '냉장고1',\r\n                    putDate: \"2019/10/31\",\r\n                    expireDate: \"2019/10/31\",\r\n                    volume: 100,\r\n                    remainingVolume: 50\r\n                }\r\n            },\r\n            {\r\n                nickname: \"something-B\",\r\n                stockId: 6,\r\n                chemicalName: \"something\",\r\n                inventory: \"시약장2\",\r\n                stockInfo: {\r\n                    inventory: '냉장고1',\r\n                    putDate: \"2019/10/31\",\r\n                    expireDate: \"2019/10/31\",\r\n                    volume: 100,\r\n                    remainingVolume: 50\r\n                }\r\n            },\r\n            {\r\n                nickname: \"something-C\",\r\n                stockId: 7,\r\n                chemicalName: \"something\",\r\n                inventory: \"시약장2\",\r\n                stockInfo: {\r\n                    inventory: '냉장고1',\r\n                    putDate: \"2019/10/31\",\r\n                    expireDate: \"2019/10/31\",\r\n                    volume: 100,\r\n                    remainingVolume: 50\r\n                }\r\n            },\r\n            {\r\n                nickname: \"something-D\",\r\n                stockId: 8,\r\n                chemicalName: \"something\",\r\n                inventory: \"시약장2\",\r\n                 stockInfo: {\r\n                    inventory: '냉장고1',\r\n                    putDate: \"2019/10/31\",\r\n                    expireDate: \"2019/10/31\",\r\n                    volume: 100,\r\n                    remainingVolume: 50\r\n                }\r\n            }\r\n        ]\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    changeVolume = (stockId, change) => {\r\n        const chemicalArray = [];\r\n\r\n        for(let i = 0 ; i < this.state.chemicals.length ; i++){\r\n            if (this.state.chemicals.stockId === stockId){\r\n                this.state.chemicals.remainingVolume = this.state.chemicals.remainingVolume - change \r\n                chemicalArray.push(this.state.chemicals)\r\n            } \r\n            this.setState({chemicals : chemicalArray})\r\n        }\r\n\r\n        console.log(chemicalArray)\r\n        //state에 있는 배열 탐색하면서 그거의 stockId가 stockId인거 찾기\r\n        //나머지들은 바로 chemicalArray에 넣어주고\r\n        //찾은거면 그거의 stockInfo.volume에서 change만큼을 뺴준다\r\n        //그리고 그걸 chemicalArray에 넣어주기\r\n        //탐색 끝나면 this.setState({chemicals : chemicalArray})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* 약품 목록에서 각각 하나의 원소에 대한 Chemical 클래스 */}\r\n                <br />\r\n                <center><Title style={{ marginBottom: 50 }}>My Lab</Title></center>\r\n                <List\r\n                    grid={{ gutter: 16, column: 3 }}\r\n                    dataSource={this.state.chemicals}\r\n                    renderItem={item => (\r\n                        <List.Item>\r\n                            <Chemical chemical={item} />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n                <div style={{ marginTop: 100 }}>\r\n                    <ChemicalAdd />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyLab;\r\n"]},"metadata":{},"sourceType":"module"}