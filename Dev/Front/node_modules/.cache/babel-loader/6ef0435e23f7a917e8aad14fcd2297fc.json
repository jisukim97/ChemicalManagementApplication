{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendRequest.js\";\nimport React, { Component } from 'react';\nimport { Avatar } from 'antd';\nimport { getUser, getToken } from '../authentication';\nimport FriendUnit from './FriendUnit';\nimport FriendArray from './FriendArray';\n\nclass FriendRequest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requestList: []\n    };\n\n    this.loadingFriendRequests = () => {\n      const requesturl = 'http://localhost:8080/friend/request/' + getUser().userID;\n      fetch(requesturl, {\n        method: 'GET',\n        headers: {\n          'token': getToken()\n        }\n      }).then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          console.log('친구신청 불러오기 에러!');\n          return [];\n        }\n      }).then(response => {\n        this.setState({\n          requestList: response\n        });\n        console.log(\"친구 요청들\");\n        console.log(response);\n      });\n    };\n\n    this.loadingFriendRequests();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\uCE5C\\uAD6C \\uC694\\uCCAD\", React.createElement(FriendArray, {\n      friends: this.state.requestList,\n      from: \"request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), this.state.requestList.map(request => React.createElement(FriendUnit, {\n      key: request.userID,\n      request: request,\n      from: \"request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FriendRequest;","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendRequest.js"],"names":["React","Component","Avatar","getUser","getToken","FriendUnit","FriendArray","FriendRequest","constructor","props","state","requestList","loadingFriendRequests","requesturl","userID","fetch","method","headers","then","response","status","json","console","log","setState","render","map","request"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,mBAAlC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAMlCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAJnBC,KAImB,GAJX;AACJC,MAAAA,WAAW,EAAE;AADT,KAIW;;AAAA,SAMnBC,qBANmB,GAMK,MAAM;AAC1B,YAAMC,UAAU,GAAG,0CAA0CV,OAAO,GAAGW,MAAvE;AACAC,MAAAA,KAAK,CAACF,UAAD,EAAa;AACdG,QAAAA,MAAM,EAAE,KADM;AAEdC,QAAAA,OAAO,EAAE;AACL,mBAASb,QAAQ;AADZ;AAFK,OAAb,CAAL,CAMKc,IANL,CAMUC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,iBAAO,EAAP;AACH;AACJ,OAbL,EAaOL,IAbP,CAaYC,QAAQ,IAAI;AAChB,aAAKK,QAAL,CAAc;AAAEb,UAAAA,WAAW,EAAEQ;AAAf,SAAd;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH,OAjBL;AAmBH,KA3BkB;;AAGf,SAAKP,qBAAL;AACH;;AAyBDa,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEI,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKf,KAAL,CAAWC,WAAjC;AAA8C,MAAA,IAAI,EAAC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAIK,KAAKD,KAAL,CAAWC,WAAX,CAAuBe,GAAvB,CAA2BC,OAAO,IAAI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,OAAO,CAACb,MAAzB;AAAiC,MAAA,OAAO,EAAEa,OAA1C;AAAmD,MAAA,IAAI,EAAC,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,CAJL,CADJ;AAQH;;AA5CiC;;AA+CtC,eAAepB,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Avatar} from 'antd';\nimport { getUser, getToken } from '../authentication';\n\nimport FriendUnit from './FriendUnit';\nimport FriendArray from './FriendArray';\n\nclass FriendRequest extends Component {\n\n    state = {\n        requestList: []\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.loadingFriendRequests();\n    }\n\n    loadingFriendRequests = () => {\n        const requesturl = 'http://localhost:8080/friend/request/' + getUser().userID\n        fetch(requesturl, {\n            method: 'GET',\n            headers: {\n                'token': getToken()\n            }\n        })\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    console.log('친구신청 불러오기 에러!')\n                    return [];\n                }\n            }).then(response => {\n                this.setState({ requestList: response })\n                console.log(\"친구 요청들\")\n                console.log(response)\n            })\n\n    }\n\n    render() {\n        return (\n            <div>\n                친구 요청\n                <FriendArray friends={this.state.requestList} from=\"request\"/>\n\n                {this.state.requestList.map(request => <FriendUnit key={request.userID} request={request} from=\"request\" />)}\n            </div>\n        );\n    }\n}\n\nexport default FriendRequest;"]},"metadata":{},"sourceType":"module"}