{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ArticleForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Upload, Modal } from 'antd';\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass ArticleForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      fileList: [{\n        uid: '-1',\n        name: 'xxx.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }]\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n    };\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList\n    });\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          previewVisible = _this$state.previewVisible,\n          previewImage = _this$state.previewImage,\n          fileList = _this$state.fileList;\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Upload\")); //여기까지가 사진 폼 \n\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"article-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"article-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Upload\")));\n  }\n\n}\n\nexport default Form.create()(ArticleForm);","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ArticleForm.js"],"names":["React","Component","Form","Icon","Input","Button","Upload","Modal","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","ArticleForm","state","previewVisible","previewImage","fileList","uid","name","status","url","handleCancel","setState","handlePreview","preview","originFileObj","handleChange","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","render","uploadButton","getFieldDecorator","rules","required","message","color","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Upload, Modal } from 'antd';\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}  \n\nclass ArticleForm extends Component {\n\n    state = {\n        previewVisible: false,\n        previewImage: '',\n        fileList: [\n            {\n                uid: '-1',\n                name: 'xxx.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n            },\n        ],\n    };\n\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n\n        this.setState({\n            previewImage: file.url || file.preview,\n            previewVisible: true,\n        });\n    };\n\n    handleChange = ({ fileList }) => this.setState({ fileList });\n\n    //여기위까지가 사진 폼 \n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    render() {\n        const { previewVisible, previewImage, fileList } = this.state;\n        const uploadButton = (\n          <div>\n            <Icon type=\"plus\" />\n            <div className=\"ant-upload-text\">Upload</div>\n          </div>\n        );\n        \n        //여기까지가 사진 폼 \n\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"article-form\">\n                <Form.Item>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Please input your username!' }],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"Username\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item>\n\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"article-form-button\">\n                        Upload\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default Form.create()(ArticleForm);\n"]},"metadata":{},"sourceType":"module"}