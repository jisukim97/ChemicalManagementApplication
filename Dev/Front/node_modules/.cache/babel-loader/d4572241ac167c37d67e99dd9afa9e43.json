{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ForgotPassword.js\";\nimport React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\n\nclass ForgotPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visibleQuestion: false\n      /*\n          //이메일 입력 하고 버튼을 눌렀을 때 : 비밀번호 초기화 질문을 불러와서 물어본다\n          handleSubmit = e => {\n              e.preventDefault();\n              this.props.form.validateFields((err, values) => {\n                  if (!err) {\n                      console.log('Received values of form: ', values);\n                      //요청 양식은 이미 values에 동일하게 맞춰져 있는 상태이므로\n                      //따로 가공해줄 필요 없이 바로 http 요청 을 보낸다\n                      fetch('http://localhost:8080/login', {\n                          method: 'POST',\n                          headers: { 'Content-Type': 'application/json' },\n                          body: JSON.stringify(values)\n                      })\n                          .then(response => {\n                              const result = response.status;\n                              if (result === 200) {\n                                  //로그인이 성공하였을 경우\n                                  response.json().then(response => {\n                                      //로컬스토리지에 토큰 및 로그인 정보 저장\n                                      login(response)\n                                      message.success(response.user.username + '님 환영합니다!');\n                                      history.push(\"/main\")\n                                  })\n                              } else if (result === 401) {\n                                  //비밀번호 불일치 혹은 이메일이 등록되지 않았음\n                                  message.error('로그인에 실패 하였습니다. 이메일 혹은 비밀번호를 다시 확인 해 주세요.');\n                                  console.log(\"fail!\")\n                              } else {\n                                  //내부 오류\n                              }\n                          })\n                  }\n              });\n          };\n          */\n\n    };\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825 \\uD574 \\uC8FC\\uC138\\uC694\", React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"mail\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }),\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Form.create(ForgotPassword); //해야할일 : 비밀번호 찾기 페이지, 유저 프로필 등록 페이지, 홈 페이지","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ForgotPassword.js"],"names":["React","Component","Form","Icon","Input","Button","Checkbox","message","ForgotPassword","state","visibleQuestion","render","handleSubmit","getFieldDecorator","rules","required","color","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8CC,OAA9C,QAA6D,MAA7D;;AAGA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCQ,KADmC,GAC3B;AACJC,MAAAA,eAAe,EAAE;AAEzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHY,KAD2B;AAAA;;AAyCnCC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,iBAAiB,CAAC,OAAD,EAAU;AACxBC,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBR,QAAAA,OAAO,EAAE;AAA3B,OAAD;AADiB,KAAV,CAAjB,CAGG,oBAAC,KAAD;AACI,MAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAES,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADZ;AAEI,MAAA,WAAW,EAAC,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADL,CAFJ,EAYQ,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,SAAS,EAAC,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZR,CADJ;AAiBH;;AA3DkC;;AA8DvC,eAAed,IAAI,CAACe,MAAL,CAAYT,cAAZ,CAAf,C,CAEA","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\n\n\nclass ForgotPassword extends Component {\n    state = {\n        visibleQuestion: false\n    }\n/*\n    //이메일 입력 하고 버튼을 눌렀을 때 : 비밀번호 초기화 질문을 불러와서 물어본다\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                //요청 양식은 이미 values에 동일하게 맞춰져 있는 상태이므로\n                //따로 가공해줄 필요 없이 바로 http 요청 을 보낸다\n                fetch('http://localhost:8080/login', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(values)\n                })\n                    .then(response => {\n                        const result = response.status;\n                        if (result === 200) {\n                            //로그인이 성공하였을 경우\n                            response.json().then(response => {\n                                //로컬스토리지에 토큰 및 로그인 정보 저장\n                                login(response)\n                                message.success(response.user.username + '님 환영합니다!');\n                                history.push(\"/main\")\n                            })\n                        } else if (result === 401) {\n                            //비밀번호 불일치 혹은 이메일이 등록되지 않았음\n                            message.error('로그인에 실패 하였습니다. 이메일 혹은 비밀번호를 다시 확인 해 주세요.');\n                            console.log(\"fail!\")\n                        } else {\n                            //내부 오류\n                        }\n                    })\n            }\n        });\n    };\n    */\n\n    render() {\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                이메일 주소를 입력 해 주세요\n                <Form.Item>\n                    {getFieldDecorator('email', {\n                        rules: [{ required: true, message: 'Please input your username!' }],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"Email\"\n                        />,\n                    )}\n                </Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                </Button>\n            </Form >\n        );\n    }\n}\n\nexport default Form.create(ForgotPassword);\n\n//해야할일 : 비밀번호 찾기 페이지, 유저 프로필 등록 페이지, 홈 페이지\n"]},"metadata":{},"sourceType":"module"}