{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ChangeProfile.js\";\nimport React, { Component } from 'react';\nimport { Form, Icon, Popover, Button, Upload, Modal, notification } from 'antd';\nimport { getUser, getToken } from '../authentication';\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass ChangeProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      fileList: [],\n      visible: false\n    };\n    this.userID = getUser().userID;\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n    };\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList\n    });\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          console.log(this.state.fileList); //여기서 각 원소의 response.name이 파일이름이고, 이를 db에 저장시켜주면 됨\n\n          let fileList = [];\n          this.state.fileList.map(file => {\n            fileList.push(file.response.name);\n          });\n          let fileNames = fileList.join('/'); //db에는 파일명이 저장됨. 파일명의 리스트를 만들어서 그들 사이를 /로 조인해줌. 나중에 split해서 쓸 것임\n\n          console.log(this.state.fileList[0].response.name);\n          let article = {\n            'userID': this.userID,\n            'photo': this.state.fileList[0].response.name\n          };\n          fetch('http://localhost:8080/user/profile', {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n              'token': getToken()\n            },\n            body: JSON.stringify(article)\n          }).then(response => {\n            if (response.status === 200) {\n              //글올리기 성공\n              response.json().then(rsp => {\n                console.log(\"성공\");\n                this.props.form.resetFields();\n              });\n            } else {\n              console.log(\"글올리기 실패\");\n            }\n          });\n        }\n      });\n    };\n\n    this.hide = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleVisibleChange = visible => {\n      this.setState({\n        visible\n      });\n    };\n\n    this.body = () => {\n      const _this$state = this.state,\n            previewVisible = _this$state.previewVisible,\n            previewImage = _this$state.previewImage,\n            fileList = _this$state.fileList;\n      const getFieldDecorator = this.props.form.getFieldDecorator;\n      const uploadButton = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Upload\"));\n      return React.createElement(\"div\", {\n        className: \"articleform\",\n        id: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"article-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, getFieldDecorator('photo', {\n        rules: [{\n          required: false\n        }]\n      })(React.createElement(\"div\", {\n        className: \"clearfix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Upload, {\n        name: \"file\",\n        action: \"http://localhost:8080/photo/upload/\" + this.userID,\n        listType: \"picture-card\",\n        fileList: fileList,\n        onPreview: this.handlePreview,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, fileList.length >= 5 ? null : uploadButton), React.createElement(Modal, {\n        visible: previewVisible,\n        footer: null,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"example\",\n        style: {\n          width: '100%'\n        },\n        src: previewImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }))))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"article-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Upload\")))));\n    };\n  }\n\n  render() {\n    return React.createElement(Popover, {\n      content: this.body,\n      title: \"Title\",\n      trigger: \"click\",\n      visible: this.state.visible,\n      onVisibleChange: this.handleVisibleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Click me\"));\n  }\n\n}\n\nexport default Form.create()(ChangeProfile);","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ChangeProfile.js"],"names":["React","Component","Form","Icon","Popover","Button","Upload","Modal","notification","getUser","getToken","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","ChangeProfile","state","previewVisible","previewImage","fileList","visible","userID","handleCancel","setState","handlePreview","url","preview","originFileObj","handleChange","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","map","push","response","name","fileNames","join","article","fetch","method","headers","body","JSON","stringify","then","status","json","rsp","resetFields","hide","handleVisibleChange","getFieldDecorator","uploadButton","rules","required","length","width","render","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Popover, Button, Upload, Modal, notification } from 'antd';\nimport { getUser, getToken } from '../authentication';\n\n\n\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\n\nclass ChangeProfile extends Component {\n\n    state = {\n        previewVisible: false,\n        previewImage: '',\n        fileList: [\n\n        ],\n        visible: false,\n    };\n\n    userID = getUser().userID\n\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n\n        this.setState({\n            previewImage: file.url || file.preview,\n            previewVisible: true,\n        });\n    };\n\n    handleChange = ({ fileList }) => this.setState({ fileList });\n\n    //여기위까지가 사진 폼 \n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                console.log(this.state.fileList) //여기서 각 원소의 response.name이 파일이름이고, 이를 db에 저장시켜주면 됨\n                let fileList = []\n                this.state.fileList.map(file => {\n                    fileList.push(file.response.name)\n                })\n                let fileNames = fileList.join('/')\n                //db에는 파일명이 저장됨. 파일명의 리스트를 만들어서 그들 사이를 /로 조인해줌. 나중에 split해서 쓸 것임\n\n                console.log(this.state.fileList[0].response.name)\n\n                let article = {\n                    'userID': this.userID,\n                    'photo': this.state.fileList[0].response.name\n                }\n\n                fetch('http://localhost:8080/user/profile', {\n                    method: 'PUT',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'token': getToken()\n                    },\n                    body: JSON.stringify(article)\n                }).then(response => {\n                    if (response.status === 200) {\n                        //글올리기 성공\n                        response.json().then(rsp => {\n                            console.log(\"성공\")\n                            this.props.form.resetFields()\n                        })\n                    } else {\n                        console.log(\"글올리기 실패\")\n                    }\n                });\n            }\n        });\n    };\n\n    hide = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleVisibleChange = visible => {\n        this.setState({ visible });\n    };\n\n    body = () => {\n\n        const { previewVisible, previewImage, fileList } = this.state;\n        \n        const { getFieldDecorator } = this.props.form;\n\n\n        const uploadButton = (\n            <div>\n                <Icon type=\"plus\" />\n                <div className=\"ant-upload-text\">Upload</div>\n            </div>\n        );\n\n        return (\n            <div className=\"articleform\" id='box'>\n                <Form onSubmit={this.handleSubmit} className=\"article-form\">\n                    <Form.Item>\n                        {getFieldDecorator('photo', {\n                            rules: [{ required: false }],\n                        })(\n                            <div className=\"clearfix\">\n                                <Upload\n                                    name=\"file\"\n                                    action={\"http://localhost:8080/photo/upload/\" + this.userID}\n                                    listType=\"picture-card\"\n                                    fileList={fileList}\n                                    onPreview={this.handlePreview}\n                                    onChange={this.handleChange}\n                                >\n                                    {fileList.length >= 5 ? null : uploadButton}\n                                </Upload>\n                                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n                                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n                                </Modal>\n                            </div>\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        <center><Button type=\"primary\" htmlType=\"submit\" className=\"article-form-button\" >\n                            Upload\n                    </Button></center>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n    }\n\n\n    render() {\n\n        return (\n            <Popover\n            content={this.body}\n            title=\"Title\"\n            trigger=\"click\"\n            visible={this.state.visible}\n            onVisibleChange={this.handleVisibleChange}\n          >\n            <Button type=\"primary\">Click me</Button>\n          </Popover>\n    \n        \n        );\n    }\n}\n\nexport default Form.create()(ChangeProfile);"]},"metadata":{},"sourceType":"module"}