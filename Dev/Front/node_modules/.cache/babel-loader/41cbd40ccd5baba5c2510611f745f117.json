{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendRequest.js\";\nimport React, { Component } from 'react';\nimport { Avatar } from 'antd';\nimport { getUser, getToken } from '../authentication';\nimport FriendRequestUnit from './FriendRequestUnit';\n\nclass FriendRequest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requestList: []\n    };\n\n    this.loadingFriendRequests = () => {\n      const requesturl = 'http://localhost:8080/friend/request/' + getUser().userID;\n      fetch(requesturl, {\n        method: 'GET',\n        headers: {\n          'token': getToken()\n        }\n      }).then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          console.log('친구신청 불러오기 에러!');\n          return [];\n        }\n      }).then(response => {\n        this.setState({\n          requestList: response\n        });\n        console.log(\"친구 요청들\");\n        console.log(response);\n      });\n    };\n\n    this.getOnePhoto = (fileName, username) => {\n      if (fileName === \"\" || fileName == null) return React.createElement(Avatar, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, username);else return React.createElement(Avatar, {\n        size: \"large\",\n        src: 'http://localhost:8080/photo/download?filename=' + fileName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    };\n\n    this.loadingFriendRequests();\n  }\n\n  listUpRequests(requestList) {\n    requestList.map(request => {\n      React.createElement(FriendRequestUnit, {\n        request: request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"\\uCE5C\\uAD6C \\uC694\\uCCAD\", this.listUpRequests(this.state.requestList));\n  }\n\n}\n\nexport default FriendRequest;","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/FriendRequest.js"],"names":["React","Component","Avatar","getUser","getToken","FriendRequestUnit","FriendRequest","constructor","props","state","requestList","loadingFriendRequests","requesturl","userID","fetch","method","headers","then","response","status","json","console","log","setState","getOnePhoto","fileName","username","listUpRequests","map","request","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,mBAAlC;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAMlCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAJnBC,KAImB,GAJX;AACJC,MAAAA,WAAW,EAAE;AADT,KAIW;;AAAA,SAMnBC,qBANmB,GAMK,MAAM;AAC1B,YAAMC,UAAU,GAAG,0CAA0CT,OAAO,GAAGU,MAAvE;AACAC,MAAAA,KAAK,CAACF,UAAD,EAAa;AACdG,QAAAA,MAAM,EAAE,KADM;AAEdC,QAAAA,OAAO,EAAE;AACL,mBAASZ,QAAQ;AADZ;AAFK,OAAb,CAAL,CAMKa,IANL,CAMUC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,iBAAO,EAAP;AACH;AACJ,OAbL,EAaOL,IAbP,CAaYC,QAAQ,IAAI;AAChB,aAAKK,QAAL,CAAc;AAAEb,UAAAA,WAAW,EAAEQ;AAAf,SAAd;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH,OAjBL;AAmBH,KA3BkB;;AAAA,SA8BnBM,WA9BmB,GA8BL,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClC,UAAID,QAAQ,KAAK,EAAb,IAAmBA,QAAQ,IAAI,IAAnC,EACI,OAAO,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBC,QAAtB,CAAP,CADJ,KAGI,OAAO,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,GAAG,EAAE,mDAAmDD,QAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACP,KAnCkB;;AAGf,SAAKd,qBAAL;AACH;;AAiCDgB,EAAAA,cAAc,CAACjB,WAAD,EAAc;AACxBA,IAAAA,WAAW,CAACkB,GAAZ,CAAgBC,OAAO,IAAI;AACvB,0BAAC,iBAAD;AAAmB,QAAA,OAAO,EAAEA,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,KAFD;AAGH;;AAIDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEK,KAAKH,cAAL,CAAoB,KAAKlB,KAAL,CAAWC,WAA/B,CAFL,CADJ;AAMH;;AA1DiC;;AA6DtC,eAAeJ,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Avatar} from 'antd';\nimport { getUser, getToken } from '../authentication';\n\nimport FriendRequestUnit from './FriendRequestUnit';\n\nclass FriendRequest extends Component {\n\n    state = {\n        requestList: []\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.loadingFriendRequests();\n    }\n\n    loadingFriendRequests = () => {\n        const requesturl = 'http://localhost:8080/friend/request/' + getUser().userID\n        fetch(requesturl, {\n            method: 'GET',\n            headers: {\n                'token': getToken()\n            }\n        })\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    console.log('친구신청 불러오기 에러!')\n                    return [];\n                }\n            }).then(response => {\n                this.setState({ requestList: response })\n                console.log(\"친구 요청들\")\n                console.log(response)\n            })\n\n    }\n\n    //프로필 사진을 받아오기\n    getOnePhoto = (fileName, username) => {\n        if (fileName === \"\" || fileName == null)\n            return <Avatar size='large'>{username}</Avatar>\n        else\n            return <Avatar size='large' src={'http://localhost:8080/photo/download?filename=' + fileName} />\n    }\n\n    listUpRequests(requestList) {\n        requestList.map(request => {\n            <FriendRequestUnit request={request}/>\n        })\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                친구 요청\n                {this.listUpRequests(this.state.requestList)}\n            </div>\n        );\n    }\n}\n\nexport default FriendRequest;"]},"metadata":{},"sourceType":"module"}