{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/CommentForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Icon, Input } from 'antd';\nimport './CommentForm.css';\n\nclass CommentForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"inline\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, getFieldDecorator('comment', {\n      rules: [{\n        required: true,\n        message: 'Please input comment!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }),\n      placeholder: \"Comment\",\n      onPressEnter: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"default\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default Form.create()(CommentForm);","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/CommentForm.js"],"names":["React","Component","Form","Button","Icon","Input","CommentForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","render","getFieldDecorator","rules","required","message","color","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,MAA1C;AAEA,OAAO,mBAAP;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAEhCM,YAFgC,GAEjBC,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC5C,YAAI,CAACD,GAAL,EAAU;AACNE,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACH;AACJ,OAJD;AAKH,KAT+B;AAAA;;AAWhCG,EAAAA,MAAM,GAAG;AAAA,UACGC,iBADH,GACyB,KAAKR,KAAL,CAAWC,IADpC,CACGO,iBADH;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,KAAKX,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKW,iBAAiB,CAAC,SAAD,EAAY;AAC1BC,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD;AADmB,KAAZ,CAAjB,CAGG,oBAAC,KAAD;AACI,MAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADZ;AAEI,MAAA,WAAW,EAAC,SAFhB;AAGI,MAAA,YAAY,EAAE,KAAKf,YAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADL,CADJ,EAYI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAZJ,CADJ,CADJ;AAuBH;;AArC+B;;AAwCpC,eAAeL,IAAI,CAACqB,MAAL,GAAcjB,WAAd,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Icon, Input } from 'antd'\n\nimport './CommentForm.css';\n\nclass CommentForm extends Component {\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <div>\n                <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n                    <Form.Item >\n                        {getFieldDecorator('comment', {\n                            rules: [{ required: true, message: 'Please input comment!' }],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                placeholder=\"Comment\"\n                                onPressEnter={this.handleSubmit}\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"default\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Form.create()(CommentForm);"]},"metadata":{},"sourceType":"module"}