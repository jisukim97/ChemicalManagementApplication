{"ast":null,"code":"var _jsxFileName = \"/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ForgotPassword.js\";\nimport React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\nimport { Link } from \"react-router-dom\";\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibleEmail: true,\n      visibleQuestion: false\n    };\n\n    this.emailForm = () => {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825 \\uD574 \\uC8FC\\uC138\\uC694\", getFieldDecorator('email', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"mail\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }),\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Submit Email Address\"), \"Or \", React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"login now!\"))));\n    };\n  }\n  /*\n      //이메일 입력 하고 버튼을 눌렀을 때 : 비밀번호 초기화 질문을 불러와서 물어본다\n      handleSubmit = e => {\n          e.preventDefault();\n          this.props.form.validateFields((err, values) => {\n              if (!err) {\n                  console.log('Received values of form: ', values);\n                  //요청 양식은 이미 values에 동일하게 맞춰져 있는 상태이므로\n                  //따로 가공해줄 필요 없이 바로 http 요청 을 보낸다\n                  fetch('http://localhost:8080/login', {\n                      method: 'POST',\n                      headers: { 'Content-Type': 'application/json' },\n                      body: JSON.stringify(values)\n                  })\n                      .then(response => {\n                          const result = response.status;\n                          if (result === 200) {\n                              //로그인이 성공하였을 경우\n                              response.json().then(response => {\n                                  //로컬스토리지에 토큰 및 로그인 정보 저장\n                                  login(response)\n                                  message.success(response.user.username + '님 환영합니다!');\n                                  history.push(\"/main\")\n                              })\n                          } else if (result === 401) {\n                              //비밀번호 불일치 혹은 이메일이 등록되지 않았음\n                              message.error('로그인에 실패 하였습니다. 이메일 혹은 비밀번호를 다시 확인 해 주세요.');\n                              console.log(\"fail!\")\n                          } else {\n                              //내부 오류\n                          }\n                      })\n              }\n          });\n      };\n      */\n\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.visibleEmail && this.emailForm());\n  }\n\n}\n\nexport default Form.create()(ForgotPassword); //해야할일 : 비밀번호 찾기 페이지, 유저 프로필 등록 페이지, 홈 페이지","map":{"version":3,"sources":["/Users/yeongmo/Documents/Programming/timeline/timeline/src/components/ForgotPassword.js"],"names":["React","Component","Form","Icon","Input","Button","Checkbox","message","Link","ForgotPassword","constructor","props","state","visibleEmail","visibleQuestion","emailForm","handleSubmit","getFieldDecorator","rules","required","color","render","form","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8CC,OAA9C,QAA6D,MAA7D;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAMnCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SALlBC,KAKkB,GALV;AACJC,MAAAA,YAAY,EAAG,IADX;AAEJC,MAAAA,eAAe,EAAE;AAFb,KAKU;;AAAA,SAyClBC,SAzCkB,GAyCN,MAAM;AACd,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAmC,QAAA,SAAS,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAESC,iBAAiB,CAAC,OAAD,EAAU;AACxBC,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBZ,UAAAA,OAAO,EAAE;AAA3B,SAAD;AADiB,OAAV,CAAjB,CAGG,oBAAC,KAAD;AACI,QAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAE;AAAEa,YAAAA,KAAK,EAAE;AAAT,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADZ;AAEI,QAAA,WAAW,EAAC,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHH,CAFT,CADA,EAaI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,SAAS,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,SAIO,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJP,CAbJ,CADJ,CADJ;AAwBH,KAlEiB;AAEjB;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEAC,EAAAA,MAAM,GAAG;AAAA,UACGJ,iBADH,GACyB,KAAKN,KAAL,CAAWW,IADpC,CACGL,iBADH;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWC,YAAX,IAA2B,KAAKE,SAAL,EADhC,CADJ;AAKH;;AAlFkC;;AAsFvC,eAAeb,IAAI,CAACqB,MAAL,GAAcd,cAAd,CAAf,C,CAEA","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\nimport { Link } from \"react-router-dom\";\n\n\nclass ForgotPassword extends Component {\n    state = {\n        visibleEmail : true,\n        visibleQuestion: false\n    }\n\n    constructor(props){\n        super(props)\n    }\n\n    /*\n        //이메일 입력 하고 버튼을 눌렀을 때 : 비밀번호 초기화 질문을 불러와서 물어본다\n        handleSubmit = e => {\n            e.preventDefault();\n            this.props.form.validateFields((err, values) => {\n                if (!err) {\n                    console.log('Received values of form: ', values);\n                    //요청 양식은 이미 values에 동일하게 맞춰져 있는 상태이므로\n                    //따로 가공해줄 필요 없이 바로 http 요청 을 보낸다\n                    fetch('http://localhost:8080/login', {\n                        method: 'POST',\n                        headers: { 'Content-Type': 'application/json' },\n                        body: JSON.stringify(values)\n                    })\n                        .then(response => {\n                            const result = response.status;\n                            if (result === 200) {\n                                //로그인이 성공하였을 경우\n                                response.json().then(response => {\n                                    //로컬스토리지에 토큰 및 로그인 정보 저장\n                                    login(response)\n                                    message.success(response.user.username + '님 환영합니다!');\n                                    history.push(\"/main\")\n                                })\n                            } else if (result === 401) {\n                                //비밀번호 불일치 혹은 이메일이 등록되지 않았음\n                                message.error('로그인에 실패 하였습니다. 이메일 혹은 비밀번호를 다시 확인 해 주세요.');\n                                console.log(\"fail!\")\n                            } else {\n                                //내부 오류\n                            }\n                        })\n                }\n            });\n        };\n        */\n\n    emailForm = () => {\n        return (\n            <span>\n                <Form onSubmit={this.handleSubmit} className=\"form\">\n                <Form.Item>\n                    이메일 주소를 입력 해 주세요\n                        {getFieldDecorator('email', {\n                            rules: [{ required: true, message: 'Please input your username!' }],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                placeholder=\"Email\"\n                            />,\n                        )}\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"button\">\n                            Submit Email Address\n                        </Button>\n                        Or <Link to=\"/login\">login now!</Link>\n                    </Form.Item>\n                </Form >\n            </span>\n        );\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <div>\n                {this.state.visibleEmail && this.emailForm()}\n            </div>\n        );\n    }\n}\n\n\nexport default Form.create()(ForgotPassword);\n\n//해야할일 : 비밀번호 찾기 페이지, 유저 프로필 등록 페이지, 홈 페이지\n"]},"metadata":{},"sourceType":"module"}