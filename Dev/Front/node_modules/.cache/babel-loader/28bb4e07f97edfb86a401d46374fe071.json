{"ast":null,"code":"var _jsxFileName = \"/Users/Jennifer/Documents/GitHub/ChemicalManagementApplication/Dev/Front/src/components/MyGroupWithdraw.js\";\nimport React, { Component } from 'react';\nimport { Modal, Form, Button } from 'antd';\nimport { Typography } from 'antd';\nimport { history } from '../History';\nimport { getUser, getLab } from '../authentication';\nimport { serverUrl } from '../setting';\nconst Title = Typography.Title;\nconst Text = Typography.Text;\n\nclass MyGroupWithdraw extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    fetch(serverUrl + '/lab/' + getLab().id, {\n      // uri 넣어주기\n      method: 'GET',\n      //'GET', 'POST', 'DELETE' 등등\n      headers: {\n        'Content-Type': 'application/json'\n      } //안고쳐도 됨\n\n    }).then(response => {\n      if (response.status === 200) {\n        //이건 정상적으로 된 경우\n        return response.json();\n      } else {//이건 오류난 경우 -> 여기서 뭐뭐를 처리해 준다\n      }\n    }).then(response => {\n      //여기서 response로 온 값들을 state로 저장 하던가 해서 쓰면 됨\n      //여기서 response라는걸 제대로 쓸 수 있음\n      console.log(response); // 이걸로 개발자모드에서 어떠한 응답이 왔는지 확인 가능\n      //예를들면\n\n      this.setStatus({\n        alarmList: response\n      }); //이렇게 응답받은 실제 결과를 status로 저장해 줄 수 있음\n    });\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      style: {\n        margin: '10px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Title, {\n      style: {\n        marginBottom: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"my Lab \\uD0C8\\uD1F4\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Text, {\n      type: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"\\uD604\\uC7AC \\uC18D\\uD55C my Lab \\uC774\\uB984 : \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Text, {\n      type: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"\\uD604\\uC7AC \\uC18D\\uD55C my Lab \\uC778\\uC6D0\\uC218 : \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"\\uD0C8\\uD1F4\\uD558\\uAE30\"), React.createElement(Modal, {\n      title: \"\\uD0C8\\uD1F4\\uD558\\uAE30\",\n      visible: this.state.visible,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"\\uC5D0\\uC11C \\uC815\\uB9D0 \\uD0C8\\uD1F4 \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"(\\uD0C8\\uD1F4\\uC2DC, \\uAE30\\uAE30 \\uC608\\uC57D, \\uC54C\\uB9BC \\uB4F1\\uC758 \\uC815\\uBCF4\\uAC00 \\uBAA8\\uB450 \\uC0AD\\uC81C \\uB429\\uB2C8\\uB2E4.)\")));\n  }\n\n}\n\nexport default Form.create()(MyGroupWithdraw);","map":{"version":3,"sources":["/Users/Jennifer/Documents/GitHub/ChemicalManagementApplication/Dev/Front/src/components/MyGroupWithdraw.js"],"names":["React","Component","Modal","Form","Button","Typography","history","getUser","getLab","serverUrl","Title","Text","MyGroupWithdraw","constructor","props","state","visible","showModal","setState","handleOk","e","console","log","handleCancel","fetch","id","method","headers","then","response","status","json","setStatus","alarmList","render","getFieldDecorator","form","margin","marginBottom","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Form, Button } from 'antd';\nimport { Typography } from 'antd';\n\nimport { history } from '../History';\nimport { getUser, getLab } from '../authentication';\nimport { serverUrl } from '../setting'\n\nconst { Title } = Typography;\nconst { Text } = Typography;\n\n\n\nclass MyGroupWithdraw extends Component {\n\n  state = { visible: false };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleCancel = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  constructor(props) {\n    super(props);\n\n    fetch(serverUrl + '/lab/' + getLab().id, { // uri 넣어주기\n      method: 'GET', //'GET', 'POST', 'DELETE' 등등\n      headers: { 'Content-Type': 'application/json' }, //안고쳐도 됨\n    }).then(response => {\n      if( response.status === 200){\n        //이건 정상적으로 된 경우\n        return response.json()\n      } else {\n        //이건 오류난 경우 -> 여기서 뭐뭐를 처리해 준다\n      }\n    }).then(response => {\n      //여기서 response로 온 값들을 state로 저장 하던가 해서 쓰면 됨\n      //여기서 response라는걸 제대로 쓸 수 있음\n      console.log(response) // 이걸로 개발자모드에서 어떠한 응답이 왔는지 확인 가능\n      //예를들면\n      this.setStatus({\n        alarmList : response\n      })\n      //이렇게 응답받은 실제 결과를 status로 저장해 줄 수 있음\n    })\n\n\n  }\n\n\n\n\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div style={{ margin: '10px 0' }}>\n      <center><Title style={{marginBottom : 50}}>my Lab 탈퇴</Title></center>\n\n      <br /><Text type=\"secondary\">현재 속한 my Lab 이름 : </Text>\n      <br /><Text type=\"secondary\">현재 속한 my Lab 인원수 : </Text>\n\n      <br />\n\n      <Button type=\"primary\" onClick={this.showModal}>\n      탈퇴하기\n      </Button>\n      <Modal\n      title=\"탈퇴하기\"\n      visible={this.state.visible}\n      onOk={this.handleOk}\n      onCancel={this.handleCancel}\n      >\n      <p>에서 정말 탈퇴 하시겠습니까?</p>\n      <p>(탈퇴시, 기기 예약, 알림 등의 정보가 모두 삭제 됩니다.)</p>\n\n      </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(MyGroupWithdraw);\n"]},"metadata":{},"sourceType":"module"}