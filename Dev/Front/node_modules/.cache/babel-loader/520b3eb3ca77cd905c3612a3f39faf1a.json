{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\uBB38\\uD601\\uC8FC\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uBB38\\uD601\\uC8FC\\\\ChemicalManagementApplication\\\\Dev\\\\Front\\\\src\\\\components\\\\ChemicalAdd.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button } from 'antd';\nimport ChemicalInfo from './ChemicalInfo';\nimport StockInfo from './StockInfo'; //화학 약품 하나에 대한 거 (my Lab 화면 중에)\n\nclass ChemicalAdd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      visible2: false,\n      information: '',\n      keyword: ''\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = e => {\n      //두번쩨걸 닫고 첫번째 창을 켠다\n      console.log(e);\n      this.setState({\n        visible: true,\n        visible2: false\n      });\n    };\n\n    this.handleCancel = e => {\n      //둘다 닫는다\n      console.log(e);\n      this.setState({\n        visible: false,\n        visible2: false\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        keyword: e.target.value\n      });\n    };\n\n    this.handleCreate = data => {\n      const information = ChemicalInfo.state.information;\n      this.setState({\n        information: information.concat(_objectSpread({\n          id: this.id++\n        }, data))\n      });\n    };\n\n    this.handleRemove = id => {\n      const information = this.state.information;\n      this.setState({\n        information: information.filter(info => info.id !== id)\n      });\n    };\n\n    this.handleUpdate = (id, data) => {\n      const information = this.state.information;\n      this.setState({\n        information: information.map(info => id === info.id ? _objectSpread({}, info, data) // 새 객체를 만들어서 기존의 값과 전달받은 data 을 덮어씀\n        : info // 기존의 값을 그대로 렌더링\n        )\n      });\n    };\n\n    this.handleAdd = () => {\n      alert(\"약품을 추가합니다.\");\n    };\n\n    this.handleNickname = () => {\n      alert(\"별칭을 설정합니다.\");\n    };\n\n    this.handleChoosePlace = () => {\n      this.setState({\n        visible: false,\n        visible2: true\n      });\n      alert(\"보관장소를 선택합니다.\");\n    };\n\n    this.handleChooseChem = () => {\n      alert(\"시약을 선택합니다.\");\n    };\n  }\n\n  render() {\n    const keyword = this.state.keyword;\n\n    const ChemicalAdd = ({\n      value,\n      onChamge,\n      onInsert\n    }) => {\n      const handleKeyPress = e => {\n        if (e.key === 'Enter') {\n          onInsert();\n        }\n      };\n    };\n\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Button, {\n      Button: true,\n      shape: \"circle\",\n      icon: \"fire\",\n      onClick: this.showModal,\n      style: {\n        fontSize: '25px'\n      },\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      title: \"\\uC57D\\uD488 \\uCD94\\uAC00\",\n      visible: this.state.visible,\n      onCancel: this.handleCancel //둘다 닫는다\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"\\uAC80\\uC0C9 \\uD560 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694..\",\n      onChange: this.handleChange,\n      value: keyword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(ChemicalInfo, {\n      chemical: {\n        chemicalName: \"added chemical\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleChooseChem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"\\uC2DC\\uC57D \\uC120\\uD0DD\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"\\uBCC4\\uCE6D\\uC744 \\uC124\\uC815\\uD558\\uC138\\uC694\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), \" \", React.createElement(\"button\", {\n      onClick: this.handleNickname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"\\uBCC4\\uCE6D \\uC124\\uC815\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleChoosePlace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"\\uBCF4\\uAD00 \\uC7A5\\uC18C \\uC120\\uD0DD\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      title: \"\\uC7A5\\uC18C \\uC124\\uC815\",\n      visible: this.state.visible2,\n      onOk: this.handleOk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"ok\\uB97C \\uB20C\\uB7EC\\uC11C \\uCC3D\\uC744 \\uB2EB\\uC73C\\uC138\\uC694\")), React.createElement(\"button\", {\n      onClick: this.handleAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"\\uCD94\\uAC00\\uD558\\uAE30\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"\\uC57D\\uD488 \\uCD94\\uAC00\\uD558\\uAE30\"));\n  }\n\n}\n\nexport default ChemicalAdd;","map":{"version":3,"sources":["C:\\Users\\문혁주\\ChemicalManagementApplication\\Dev\\Front\\src\\components\\ChemicalAdd.js"],"names":["React","Component","Modal","Button","ChemicalInfo","StockInfo","ChemicalAdd","constructor","props","state","visible","visible2","information","keyword","showModal","setState","handleOk","e","console","log","handleCancel","handleChange","target","value","handleCreate","data","concat","id","handleRemove","filter","info","handleUpdate","map","handleAdd","alert","handleNickname","handleChoosePlace","handleChooseChem","render","onChamge","onInsert","handleKeyPress","key","fontSize","chemicalName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Button } from 'antd';\r\n\r\nimport ChemicalInfo from './ChemicalInfo';\r\nimport StockInfo from './StockInfo';\r\n\r\n//화학 약품 하나에 대한 거 (my Lab 화면 중에)\r\nclass ChemicalAdd extends Component {\r\n\r\n    state = {\r\n        visible: false,\r\n        visible2: false,\r\n        information: '',\r\n        keyword: ''\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true\r\n        });\r\n    };\r\n\r\n    handleOk = e => { //두번쩨걸 닫고 첫번째 창을 켠다\r\n        console.log(e);\r\n        this.setState({\r\n            visible: true,\r\n            visible2: false,\r\n        });\r\n    };\r\n\r\n    handleCancel = e => { //둘다 닫는다\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n            visible2 : false,\r\n        });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            keyword: e.target.value,\r\n        });\r\n    }\r\n\r\n    handleCreate = (data) => {\r\n        const { information } = ChemicalInfo.state;\r\n        this.setState({\r\n            information: information.concat({ id: this.id++, ...data })\r\n        })\r\n    }\r\n    handleRemove = (id) => {\r\n        const { information } = this.state;\r\n        this.setState({\r\n            information: information.filter(info => info.id !== id)\r\n        })\r\n    }\r\n    handleUpdate = (id, data) => {\r\n        const { information } = this.state;\r\n        this.setState({\r\n            information: information.map(\r\n                info => id === info.id\r\n                    ? { ...info, ...data } // 새 객체를 만들어서 기존의 값과 전달받은 data 을 덮어씀\r\n                    : info // 기존의 값을 그대로 렌더링\r\n            )\r\n        })\r\n    }\r\n    handleAdd = () => {\r\n        alert(\"약품을 추가합니다.\");\r\n    }\r\n\r\n    handleNickname = () => {\r\n        alert(\"별칭을 설정합니다.\");\r\n    }\r\n\r\n    handleChoosePlace = () => {\r\n        this.setState({\r\n            visible: false,\r\n            visible2: true,\r\n        })\r\n        alert(\"보관장소를 선택합니다.\");\r\n    }\r\n\r\n    handleChooseChem = () => {\r\n        alert(\"시약을 선택합니다.\");\r\n    }\r\n\r\n    render() {\r\n        const { keyword } = this.state;\r\n\r\n\r\n        const ChemicalAdd = ({ value, onChamge, onInsert }) => {\r\n            const handleKeyPress = (e) => {\r\n                if (e.key === 'Enter') {\r\n                    onInsert();\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <span>\r\n                <center>\r\n                    {/* 버튼 */}\r\n                    <Button Button shape=\"circle\" icon=\"fire\" onClick={this.showModal} style={{ fontSize: '25px' }} size=\"large\" />\r\n                    {/* 뜨는 창 */}\r\n                    <Modal\r\n                        title=\"약품 추가\"\r\n                        visible={this.state.visible}\r\n                        onCancel={this.handleCancel} //둘다 닫는다\r\n                    >\r\n                        {/* 정보 출력  */}\r\n                        <input\r\n                            placeholder=\"검색 할 이름을 입력하세요..\"\r\n                            onChange={this.handleChange}\r\n                            value={keyword}\r\n                        /> <br />\r\n                        <br />\r\n                        <ChemicalInfo chemical={{ chemicalName: \"added chemical\" }} />\r\n\r\n                        <button onClick={this.handleChooseChem} >시약 선택</button><br />\r\n                        <input placeholder=\"별칭을 설정하세요\" /> <button onClick={this.handleNickname}>별칭 설정</button><br />\r\n\r\n                        <span>\r\n                            <Button onClick={this.handleChoosePlace} >보관 장소 선택</Button><br />\r\n\r\n                            <Modal title=\"장소 설정\"\r\n                            \r\n                                visible={this.state.visible2}\r\n                                \r\n                                onOk={this.handleOk}>\r\n                                    ok를 눌러서 창을 닫으세요 \r\n                            </Modal>\r\n\r\n\r\n                        </span>\r\n                        <button onClick={this.handleAdd} >추가하기</button><br />\r\n\r\n                    </Modal>\r\n                </center>\r\n                <center>\r\n                    약품 추가하기\r\n                </center>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChemicalAdd;"]},"metadata":{},"sourceType":"module"}